

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Tue Dec 15 17:18:13 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    46                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    47                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    48                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    49                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    50                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    51                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    52  0000                     
    53                           ; Version 2.20
    54                           ; Generated 12/02/2020 GMT
    55                           ; 
    56                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC18F4550 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87  0000                     
    88                           	psect	idataBANK0
    89  00214E                     __pidataBANK0:
    90                           	callstack 0
    91                           
    92                           ;initializer for _cod1
    93  00214E  125A               	dw	4698
    94  002150  0000               	dw	0
    95                           
    96                           	psect	smallconst
    97  000800                     __psmallconst:
    98                           	callstack 0
    99  000800  00                 	db	0
   100  000801                     _HORARIO:
   101                           	callstack 0
   102  000801  88                 	db	136
   103  000802  C0                 	db	192
   104  000803  90                 	db	144
   105  000804  A0                 	db	160
   106  000805                     __end_of_HORARIO:
   107                           	callstack 0
   108  0000                     _LATDbits	set	3980
   109  0000                     _TRISD	set	3989
   110  0000                     _PORTD	set	3971
   111  0000                     _TRISDbits	set	3989
   112  0000                     _LATB	set	3978
   113  0000                     _LATCbits	set	3979
   114  0000                     _PORTCbits	set	3970
   115  0000                     _LATEbits	set	3981
   116  0000                     _INTCONbits	set	4082
   117  0000                     _INTCON2bits	set	4081
   118  0000                     _INTCON3bits	set	4080
   119  0000                     _TRISB	set	3987
   120  0000                     _TRISEbits	set	3990
   121  0000                     _ADCON1bits	set	4033
   122  0000                     _RCREG	set	4014
   123  0000                     _TXREG	set	4013
   124  0000                     _RCSTAbits	set	4011
   125  0000                     _TXSTAbits	set	4012
   126  0000                     _SPBRG	set	4015
   127  0000                     _TRISCbits	set	3988
   128  000805                     STR_10:
   129                           
   130                           ; BSR set to: 0
   131  000805  2A                 	db	42
   132  000806  2A                 	db	42
   133  000807  2A                 	db	42
   134  000808  45                 	db	69	;'E'
   135  000809  4D                 	db	77	;'M'
   136  00080A  45                 	db	69	;'E'
   137  00080B  52                 	db	82	;'R'
   138  00080C  47                 	db	71	;'G'
   139  00080D  45                 	db	69	;'E'
   140  00080E  4E                 	db	78	;'N'
   141  00080F  43                 	db	67	;'C'
   142  000810  49                 	db	73	;'I'
   143  000811  41                 	db	65	;'A'
   144  000812  2A                 	db	42
   145  000813  2A                 	db	42
   146  000814  2A                 	db	42
   147  000815  00                 	db	0
   148  000816                     STR_9:
   149                           
   150                           ; BSR set to: 0
   151  000816  2A                 	db	42
   152  000817  2A                 	db	42
   153  000818  2A                 	db	42
   154  000819  41                 	db	65	;'A'
   155  00081A  55                 	db	85	;'U'
   156  00081B  4C                 	db	76	;'L'
   157  00081C  41                 	db	65	;'A'
   158  00081D  20                 	db	32
   159  00081E  4C                 	db	76	;'L'
   160  00081F  4C                 	db	76	;'L'
   161  000820  45                 	db	69	;'E'
   162  000821  4E                 	db	78	;'N'
   163  000822  41                 	db	65	;'A'
   164  000823  2A                 	db	42
   165  000824  2A                 	db	42
   166  000825  2A                 	db	42
   167  000826  00                 	db	0
   168  000827                     STR_1:
   169                           
   170                           ; BSR set to: 0
   171  000827  2A                 	db	42
   172  000828  2A                 	db	42
   173  000829  2A                 	db	42
   174  00082A  42                 	db	66	;'B'
   175  00082B  69                 	db	105	;'i'
   176  00082C  65                 	db	101	;'e'
   177  00082D  6E                 	db	110	;'n'
   178  00082E  76                 	db	118	;'v'
   179  00082F  65                 	db	101	;'e'
   180  000830  6E                 	db	110	;'n'
   181  000831  69                 	db	105	;'i'
   182  000832  64                 	db	100	;'d'
   183  000833  6F                 	db	111	;'o'
   184  000834  2A                 	db	42
   185  000835  2A                 	db	42
   186  000836  2A                 	db	42
   187  000837  00                 	db	0
   188  000838                     STR_11:
   189                           
   190                           ; BSR set to: 0
   191  000838  2A                 	db	42
   192  000839  50                 	db	80	;'P'
   193  00083A  75                 	db	117	;'u'
   194  00083B  65                 	db	101	;'e'
   195  00083C  72                 	db	114	;'r'
   196  00083D  74                 	db	116	;'t'
   197  00083E  61                 	db	97	;'a'
   198  00083F  20                 	db	32
   199  000840  61                 	db	97	;'a'
   200  000841  62                 	db	98	;'b'
   201  000842  69                 	db	105	;'i'
   202  000843  65                 	db	101	;'e'
   203  000844  72                 	db	114	;'r'
   204  000845  74                 	db	116	;'t'
   205  000846  61                 	db	97	;'a'
   206  000847  2A                 	db	42
   207  000848  00                 	db	0
   208  000849                     STR_3:
   209                           
   210                           ; BSR set to: 0
   211  000849  2A                 	db	42
   212  00084A  2A                 	db	42
   213  00084B  2A                 	db	42
   214  00084C  2A                 	db	42
   215  00084D  53                 	db	83	;'S'
   216  00084E  41                 	db	65	;'A'
   217  00084F  4C                 	db	76	;'L'
   218  000850  4F                 	db	79	;'O'
   219  000851  4E                 	db	78	;'N'
   220  000852  2D                 	db	45
   221  000853  31                 	db	49	;'1'
   222  000854  2A                 	db	42
   223  000855  2A                 	db	42
   224  000856  2A                 	db	42
   225  000857  2A                 	db	42
   226  000858  00                 	db	0
   227  000859                     STR_2:
   228                           
   229                           ; BSR set to: 0
   230  000859  50                 	db	80	;'P'
   231  00085A  61                 	db	97	;'a'
   232  00085B  73                 	db	115	;'s'
   233  00085C  65                 	db	101	;'e'
   234  00085D  20                 	db	32
   235  00085E  73                 	db	115	;'s'
   236  00085F  75                 	db	117	;'u'
   237  000860  20                 	db	32
   238  000861  74                 	db	116	;'t'
   239  000862  61                 	db	97	;'a'
   240  000863  72                 	db	114	;'r'
   241  000864  6A                 	db	106	;'j'
   242  000865  65                 	db	101	;'e'
   243  000866  74                 	db	116	;'t'
   244  000867  61                 	db	97	;'a'
   245  000868  00                 	db	0
   246  000869                     STR_4:
   247                           
   248                           ; BSR set to: 0
   249  000869  55                 	db	85	;'U'
   250  00086A  49                 	db	73	;'I'
   251  00086B  44                 	db	68	;'D'
   252  00086C  3A                 	db	58	;':'
   253  00086D  25                 	db	37
   254  00086E  78                 	db	120	;'x'
   255  00086F  20                 	db	32
   256  000870  20                 	db	32
   257  000871  20                 	db	32
   258  000872  20                 	db	32
   259  000873  00                 	db	0
   260  000874                     STR_5:
   261                           
   262                           ; BSR set to: 0
   263  000874  20                 	db	32
   264  000875  20                 	db	32
   265  000876  20                 	db	32
   266  000877  23                 	db	35
   267  000878  20                 	db	32
   268  000879  25                 	db	37
   269  00087A  64                 	db	100	;'d'
   270  00087B  20                 	db	32
   271  00087C  00                 	db	0
   272  00087D  00                 	db	0	; dummy byte at the end
   273  0000                     
   274                           ; #config settings
   275                           
   276                           	psect	cinit
   277  001F2C                     __pcinit:
   278                           	callstack 0
   279  001F2C                     start_initialization:
   280                           	callstack 0
   281  001F2C                     __initialization:
   282                           	callstack 0
   283                           
   284                           ; Initialize objects allocated to BANK0 (4 bytes)
   285                           ; load TBLPTR registers with __pidataBANK0
   286  001F2C  0E4E               	movlw	low __pidataBANK0
   287  001F2E  6EF6               	movwf	tblptrl,c
   288  001F30  0E21               	movlw	high __pidataBANK0
   289  001F32  6EF7               	movwf	tblptrh,c
   290  001F34  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   291  001F36  6EF8               	movwf	tblptru,c
   292  001F38  EE00  F0D9         	lfsr	0,__pdataBANK0
   293  001F3C  EE10 F004          	lfsr	1,4
   294  001F40                     copy_data0:
   295  001F40  0009               	tblrd		*+
   296  001F42  CFF5 FFEE          	movff	tablat,postinc0
   297  001F46  50E5               	movf	postdec1,w,c
   298  001F48  50E1               	movf	fsr1l,w,c
   299  001F4A  E1FA               	bnz	copy_data0
   300                           
   301                           ; Clear objects allocated to BANK0 (86 bytes)
   302  001F4C  EE00  F060         	lfsr	0,__pbssBANK0
   303  001F50  0E56               	movlw	86
   304  001F52                     clear_0:
   305  001F52  6AEE               	clrf	postinc0,c
   306  001F54  06E8               	decf	wreg,f,c
   307  001F56  E1FD               	bnz	clear_0
   308                           
   309                           ; Clear objects allocated to COMRAM (1 bytes)
   310  001F58  6A58               	clrf	__pbssCOMRAM& (0+255),c
   311  001F5A                     end_of_initialization:
   312                           	callstack 0
   313  001F5A                     __end_of__initialization:
   314                           	callstack 0
   315  001F5A  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   316  001F5C  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   317  001F5E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   318  001F60  6EF8               	movwf	tblptru,c
   319  001F62  0100               	movlb	0
   320  001F64  EF3F  F004         	goto	_main	;jump to C main() function
   321                           
   322                           	psect	bssCOMRAM
   323  000058                     __pbssCOMRAM:
   324                           	callstack 0
   325  000058                     _i:
   326                           	callstack 0
   327  000058                     	ds	1
   328                           
   329                           	psect	bssBANK0
   330  000060                     __pbssBANK0:
   331                           	callstack 0
   332  000060                     _nout:
   333                           	callstack 0
   334  000060                     	ds	2
   335  000062                     _width:
   336                           	callstack 0
   337  000062                     	ds	2
   338  000064                     _prec:
   339                           	callstack 0
   340  000064                     	ds	2
   341  000066                     _flags:
   342                           	callstack 0
   343  000066                     	ds	2
   344  000068                     _EMERGENCIA:
   345                           	callstack 0
   346  000068                     	ds	1
   347  000069                     _motor:
   348                           	callstack 0
   349  000069                     	ds	1
   350  00006A                     _aux:
   351                           	callstack 0
   352  00006A                     	ds	1
   353  00006B                     _codigo_aula:
   354                           	callstack 0
   355  00006B                     	ds	1
   356  00006C                     _dbuf:
   357                           	callstack 0
   358  00006C                     	ds	32
   359  00008C                     _texto:
   360                           	callstack 0
   361  00008C                     	ds	32
   362  0000AC                     _cont:
   363                           	callstack 0
   364  0000AC                     	ds	10
   365                           
   366                           	psect	dataBANK0
   367  0000D9                     __pdataBANK0:
   368                           	callstack 0
   369  0000D9                     _cod1:
   370                           	callstack 0
   371  0000D9                     	ds	4
   372                           
   373                           	psect	cstackBANK0
   374  0000B6                     __pcstackBANK0:
   375                           	callstack 0
   376  0000B6                     vfpfcnvrt@ll:
   377                           	callstack 0
   378                           
   379                           ; 8 bytes @ 0x0
   380  0000B6                     	ds	8
   381  0000BE                     vfpfcnvrt@llu:
   382                           	callstack 0
   383                           
   384                           ; 8 bytes @ 0x8
   385  0000BE                     	ds	8
   386  0000C6                     vfpfcnvrt@c:
   387                           	callstack 0
   388                           
   389                           ; 1 bytes @ 0x10
   390  0000C6                     	ds	1
   391  0000C7                     ?_sprintf:
   392                           	callstack 0
   393  0000C7                     sprintf@s:
   394                           	callstack 0
   395                           
   396                           ; 2 bytes @ 0x11
   397  0000C7                     	ds	2
   398  0000C9                     sprintf@fmt:
   399                           	callstack 0
   400                           
   401                           ; 2 bytes @ 0x13
   402  0000C9                     	ds	8
   403  0000D1                     sprintf@ap:
   404                           	callstack 0
   405                           
   406                           ; 2 bytes @ 0x1B
   407  0000D1                     	ds	2
   408  0000D3                     sprintf@f:
   409                           	callstack 0
   410                           
   411                           ; 6 bytes @ 0x1D
   412  0000D3                     	ds	6
   413                           
   414                           	psect	cstackCOMRAM
   415  000001                     __pcstackCOMRAM:
   416                           	callstack 0
   417  000001                     ??_INT_isr:
   418  000001                     
   419                           ; 1 bytes @ 0x0
   420  000001                     	ds	1
   421  000002                     ??_LCD_Comando:
   422  000002                     ??_LCD_Data:
   423  000002                     ??_USART_RX:
   424  000002                     ?_strlen:
   425                           	callstack 0
   426  000002                     ?_isupper:
   427                           	callstack 0
   428  000002                     ?_isalpha:
   429                           	callstack 0
   430  000002                     ?_islower:
   431                           	callstack 0
   432  000002                     ?___aldiv:
   433                           	callstack 0
   434  000002                     ?___aodiv:
   435                           	callstack 0
   436  000002                     ?___aomod:
   437                           	callstack 0
   438  000002                     USART_TX@data:
   439                           	callstack 0
   440  000002                     isalpha@c:
   441                           	callstack 0
   442  000002                     isupper@c:
   443                           	callstack 0
   444  000002                     fputc@c:
   445                           	callstack 0
   446  000002                     strlen@s:
   447                           	callstack 0
   448  000002                     islower@c:
   449                           	callstack 0
   450  000002                     ___aldiv@dividend:
   451                           	callstack 0
   452  000002                     ___aodiv@dividend:
   453                           	callstack 0
   454  000002                     ___aomod@dividend:
   455                           	callstack 0
   456                           
   457                           ; 8 bytes @ 0x1
   458  000002                     	ds	1
   459  000003                     ??_Tx_i:
   460  000003                     LCD_Comando@cmd:
   461                           	callstack 0
   462  000003                     LCD_Data@data:
   463                           	callstack 0
   464                           
   465                           ; 1 bytes @ 0x2
   466  000003                     	ds	1
   467  000004                     ??_LCD_Init:
   468  000004                     ??_isupper:
   469  000004                     ??_isalpha:
   470  000004                     ??_islower:
   471  000004                     LCD_gotoXY@x:
   472                           	callstack 0
   473  000004                     LCD_Cadena@dato:
   474                           	callstack 0
   475  000004                     fputc@fp:
   476                           	callstack 0
   477  000004                     strlen@a:
   478                           	callstack 0
   479                           
   480                           ; 2 bytes @ 0x3
   481  000004                     	ds	2
   482  000006                     ??_LCD_Cadena:
   483  000006                     ??_fputc:
   484  000006                     LCD_gotoXY@y:
   485                           	callstack 0
   486  000006                     ___aldiv@divisor:
   487                           	callstack 0
   488                           
   489                           ; 4 bytes @ 0x5
   490  000006                     	ds	2
   491  000008                     ??_LCD_gotoXY:
   492  000008                     ?_toupper:
   493                           	callstack 0
   494  000008                     toupper@c:
   495                           	callstack 0
   496                           
   497                           ; 2 bytes @ 0x7
   498  000008                     	ds	2
   499  00000A                     ??_toupper:
   500  00000A                     ___aldiv@counter:
   501                           	callstack 0
   502  00000A                     ___aodiv@divisor:
   503                           	callstack 0
   504  00000A                     ___aomod@divisor:
   505                           	callstack 0
   506                           
   507                           ; 8 bytes @ 0x9
   508  00000A                     	ds	1
   509  00000B                     ___aldiv@sign:
   510                           	callstack 0
   511  00000B                     fputs@s:
   512                           	callstack 0
   513                           
   514                           ; 2 bytes @ 0xA
   515  00000B                     	ds	1
   516  00000C                     ___aldiv@quotient:
   517                           	callstack 0
   518                           
   519                           ; 4 bytes @ 0xB
   520  00000C                     	ds	1
   521  00000D                     fputs@fp:
   522                           	callstack 0
   523                           
   524                           ; 2 bytes @ 0xC
   525  00000D                     	ds	1
   526  00000E                     _toupper$1388:
   527                           	callstack 0
   528                           
   529                           ; 2 bytes @ 0xD
   530  00000E                     	ds	1
   531  00000F                     fputs@c:
   532                           	callstack 0
   533                           
   534                           ; 1 bytes @ 0xE
   535  00000F                     	ds	1
   536  000010                     fputs@i:
   537                           	callstack 0
   538  000010                     USART_Init@BAUD:
   539                           	callstack 0
   540                           
   541                           ; 4 bytes @ 0xF
   542  000010                     	ds	2
   543  000012                     ?_pad:
   544                           	callstack 0
   545  000012                     ___aodiv@counter:
   546                           	callstack 0
   547  000012                     ___aomod@counter:
   548                           	callstack 0
   549  000012                     pad@fp:
   550                           	callstack 0
   551                           
   552                           ; 2 bytes @ 0x11
   553  000012                     	ds	1
   554  000013                     ___aodiv@sign:
   555                           	callstack 0
   556  000013                     ___aomod@sign:
   557                           	callstack 0
   558                           
   559                           ; 1 bytes @ 0x12
   560  000013                     	ds	1
   561  000014                     ?_abs:
   562                           	callstack 0
   563  000014                     pad@buf:
   564                           	callstack 0
   565  000014                     abs@a:
   566                           	callstack 0
   567  000014                     _USART_Init$1603:
   568                           	callstack 0
   569  000014                     ___aodiv@quotient:
   570                           	callstack 0
   571                           
   572                           ; 8 bytes @ 0x13
   573  000014                     	ds	2
   574  000016                     ??_abs:
   575  000016                     pad@p:
   576                           	callstack 0
   577                           
   578                           ; 2 bytes @ 0x15
   579  000016                     	ds	2
   580  000018                     ??_pad:
   581                           
   582                           ; 1 bytes @ 0x17
   583  000018                     	ds	1
   584  000019                     pad@i:
   585                           	callstack 0
   586                           
   587                           ; 2 bytes @ 0x18
   588  000019                     	ds	2
   589  00001B                     pad@w:
   590                           	callstack 0
   591                           
   592                           ; 2 bytes @ 0x1A
   593  00001B                     	ds	2
   594  00001D                     ?_dtoa:
   595                           	callstack 0
   596  00001D                     ?_xtoa:
   597                           	callstack 0
   598  00001D                     dtoa@fp:
   599                           	callstack 0
   600  00001D                     xtoa@fp:
   601                           	callstack 0
   602                           
   603                           ; 2 bytes @ 0x1C
   604  00001D                     	ds	2
   605  00001F                     dtoa@d:
   606                           	callstack 0
   607  00001F                     xtoa@d:
   608                           	callstack 0
   609                           
   610                           ; 8 bytes @ 0x1E
   611  00001F                     	ds	8
   612  000027                     ??_dtoa:
   613  000027                     xtoa@x:
   614                           	callstack 0
   615                           
   616                           ; 1 bytes @ 0x26
   617  000027                     	ds	1
   618  000028                     ??_xtoa:
   619                           
   620                           ; 1 bytes @ 0x27
   621  000028                     	ds	7
   622  00002F                     _dtoa$1292:
   623                           	callstack 0
   624                           
   625                           ; 2 bytes @ 0x2E
   626  00002F                     	ds	1
   627  000030                     _xtoa$1303:
   628                           	callstack 0
   629                           
   630                           ; 2 bytes @ 0x2F
   631  000030                     	ds	1
   632  000031                     dtoa@p:
   633                           	callstack 0
   634                           
   635                           ; 2 bytes @ 0x30
   636  000031                     	ds	1
   637  000032                     _xtoa$1304:
   638                           	callstack 0
   639                           
   640                           ; 2 bytes @ 0x31
   641  000032                     	ds	1
   642  000033                     dtoa@w:
   643                           	callstack 0
   644                           
   645                           ; 2 bytes @ 0x32
   646  000033                     	ds	1
   647  000034                     xtoa@p:
   648                           	callstack 0
   649                           
   650                           ; 2 bytes @ 0x33
   651  000034                     	ds	1
   652  000035                     dtoa@s:
   653                           	callstack 0
   654                           
   655                           ; 2 bytes @ 0x34
   656  000035                     	ds	1
   657  000036                     xtoa@w:
   658                           	callstack 0
   659                           
   660                           ; 2 bytes @ 0x35
   661  000036                     	ds	1
   662  000037                     dtoa@n:
   663                           	callstack 0
   664                           
   665                           ; 8 bytes @ 0x36
   666  000037                     	ds	1
   667  000038                     xtoa@n:
   668                           	callstack 0
   669                           
   670                           ; 8 bytes @ 0x37
   671  000038                     	ds	7
   672  00003F                     dtoa@i:
   673                           	callstack 0
   674                           
   675                           ; 2 bytes @ 0x3E
   676  00003F                     	ds	1
   677  000040                     xtoa@i:
   678                           	callstack 0
   679                           
   680                           ; 2 bytes @ 0x3F
   681  000040                     	ds	2
   682  000042                     xtoa@c:
   683                           	callstack 0
   684                           
   685                           ; 2 bytes @ 0x41
   686  000042                     	ds	2
   687  000044                     ?_vfpfcnvrt:
   688                           	callstack 0
   689  000044                     vfpfcnvrt@fp:
   690                           	callstack 0
   691                           
   692                           ; 2 bytes @ 0x43
   693  000044                     	ds	2
   694  000046                     vfpfcnvrt@fmt:
   695                           	callstack 0
   696                           
   697                           ; 2 bytes @ 0x45
   698  000046                     	ds	2
   699  000048                     vfpfcnvrt@ap:
   700                           	callstack 0
   701                           
   702                           ; 2 bytes @ 0x47
   703  000048                     	ds	2
   704  00004A                     ??_vfpfcnvrt:
   705                           
   706                           ; 1 bytes @ 0x49
   707  00004A                     	ds	4
   708  00004E                     ?_vfprintf:
   709                           	callstack 0
   710  00004E                     vfprintf@fp:
   711                           	callstack 0
   712                           
   713                           ; 2 bytes @ 0x4D
   714  00004E                     	ds	2
   715  000050                     vfprintf@fmt:
   716                           	callstack 0
   717                           
   718                           ; 2 bytes @ 0x4F
   719  000050                     	ds	2
   720  000052                     vfprintf@ap:
   721                           	callstack 0
   722                           
   723                           ; 2 bytes @ 0x51
   724  000052                     	ds	2
   725  000054                     vfprintf@cfmt:
   726                           	callstack 0
   727                           
   728                           ; 2 bytes @ 0x53
   729  000054                     	ds	2
   730  000056                     ??_main:
   731                           
   732                           ; 1 bytes @ 0x55
   733  000056                     	ds	2
   734                           
   735 ;;
   736 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   737 ;;
   738 ;; *************** function _main *****************
   739 ;; Defined at:
   740 ;;		line 72 in file "main.c"
   741 ;; Parameters:    Size  Location     Type
   742 ;;		None
   743 ;; Auto vars:     Size  Location     Type
   744 ;;		None
   745 ;; Return value:  Size  Location     Type
   746 ;;                  1    wreg      void 
   747 ;; Registers used:
   748 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   749 ;; Tracked objects:
   750 ;;		On entry : 0/0
   751 ;;		On exit  : 0/0
   752 ;;		Unchanged: 0/0
   753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   754 ;;      Params:         0       0       0       0       0       0       0       0       0
   755 ;;      Locals:         0       0       0       0       0       0       0       0       0
   756 ;;      Temps:          2       0       0       0       0       0       0       0       0
   757 ;;      Totals:         2       0       0       0       0       0       0       0       0
   758 ;;Total ram usage:        2 bytes
   759 ;; Hardware stack levels required when called:    9
   760 ;; This function calls:
   761 ;;		_Giro_IN
   762 ;;		_Giro_OUT
   763 ;;		_InitPort
   764 ;;		_Init_Int
   765 ;;		_LCD_Cadena
   766 ;;		_LCD_Comando
   767 ;;		_LCD_Init
   768 ;;		_LCD_gotoXY
   769 ;;		_Tx_i
   770 ;;		_USART_Init
   771 ;;		_USART_RX
   772 ;;		_sprintf
   773 ;; This function is called by:
   774 ;;		Startup code after reset
   775 ;; This function uses a non-reentrant model
   776 ;;
   777                           
   778                           	psect	text0
   779  00087E                     __ptext0:
   780                           	callstack 0
   781  00087E                     _main:
   782                           	callstack 22
   783  00087E                     
   784                           ;main.c: 73:   InitPort();
   785  00087E  EC99  F010         	call	_InitPort	;wreg free
   786  000882                     
   787                           ;main.c: 74:   Init_Int();
   788  000882  ECA2  F010         	call	_Init_Int	;wreg free
   789  000886                     
   790                           ;main.c: 75:   LCD_Init();
   791  000886  EC75  F00C         	call	_LCD_Init	;wreg free
   792  00088A                     
   793                           ;main.c: 76:   USART_Init (9600);
   794  00088A  0E80               	movlw	128
   795  00088C  6E10               	movwf	USART_Init@BAUD^0,c
   796  00088E  0E25               	movlw	37
   797  000890  6E11               	movwf	(USART_Init@BAUD+1)^0,c
   798  000892  0E00               	movlw	0
   799  000894  6E12               	movwf	(USART_Init@BAUD+2)^0,c
   800  000896  0E00               	movlw	0
   801  000898  6E13               	movwf	(USART_Init@BAUD+3)^0,c
   802  00089A  ECAC  F00D         	call	_USART_Init	;wreg free
   803  00089E                     
   804                           ;main.c: 78:   LCD_gotoXY(0,0);
   805  00089E  0E00               	movlw	0
   806  0008A0  6E05               	movwf	(LCD_gotoXY@x+1)^0,c
   807  0008A2  0E00               	movlw	0
   808  0008A4  6E04               	movwf	LCD_gotoXY@x^0,c
   809  0008A6  0E00               	movlw	0
   810  0008A8  6E07               	movwf	(LCD_gotoXY@y+1)^0,c
   811  0008AA  0E00               	movlw	0
   812  0008AC  6E06               	movwf	LCD_gotoXY@y^0,c
   813  0008AE  EC76  F00F         	call	_LCD_gotoXY	;wreg free
   814  0008B2                     
   815                           ;main.c: 79:   LCD_Cadena("***Bienvenido***");
   816  0008B2  0E27               	movlw	low STR_1
   817  0008B4  6E04               	movwf	LCD_Cadena@dato^0,c
   818  0008B6  0E08               	movlw	high STR_1
   819  0008B8  6E05               	movwf	(LCD_Cadena@dato+1)^0,c
   820  0008BA  EC1B  F00E         	call	_LCD_Cadena	;wreg free
   821  0008BE                     
   822                           ;main.c: 80:   _delay((unsigned long)((100)*(48000000/4000.0)));
   823  0008BE  0E07               	movlw	7
   824  0008C0  6E57               	movwf	(??_main+1)^0,c
   825  0008C2  0E17               	movlw	23
   826  0008C4  6E56               	movwf	??_main^0,c
   827  0008C6  0E6A               	movlw	106
   828  0008C8                     u2247:
   829  0008C8  2EE8               	decfsz	wreg,f,c
   830  0008CA  D7FE               	bra	u2247
   831  0008CC  2E56               	decfsz	??_main^0,f,c
   832  0008CE  D7FC               	bra	u2247
   833  0008D0  2E57               	decfsz	(??_main+1)^0,f,c
   834  0008D2  D7FA               	bra	u2247
   835  0008D4  D000               	nop2	
   836  0008D6                     
   837                           ;main.c: 81:   LCD_gotoXY(1,0);
   838  0008D6  0E00               	movlw	0
   839  0008D8  6E05               	movwf	(LCD_gotoXY@x+1)^0,c
   840  0008DA  0E01               	movlw	1
   841  0008DC  6E04               	movwf	LCD_gotoXY@x^0,c
   842  0008DE  0E00               	movlw	0
   843  0008E0  6E07               	movwf	(LCD_gotoXY@y+1)^0,c
   844  0008E2  0E00               	movlw	0
   845  0008E4  6E06               	movwf	LCD_gotoXY@y^0,c
   846  0008E6  EC76  F00F         	call	_LCD_gotoXY	;wreg free
   847  0008EA                     
   848                           ;main.c: 82:   LCD_Cadena("Pase su tarjeta");
   849  0008EA  0E59               	movlw	low STR_2
   850  0008EC  6E04               	movwf	LCD_Cadena@dato^0,c
   851  0008EE  0E08               	movlw	high STR_2
   852  0008F0  6E05               	movwf	(LCD_Cadena@dato+1)^0,c
   853  0008F2  EC1B  F00E         	call	_LCD_Cadena	;wreg free
   854  0008F6                     l2584:
   855                           
   856                           ;main.c: 83:   _delay((unsigned long)((100)*(48000000/4000.0)));
   857  0008F6  0E07               	movlw	7
   858  0008F8  6E57               	movwf	(??_main+1)^0,c
   859  0008FA  0E17               	movlw	23
   860  0008FC  6E56               	movwf	??_main^0,c
   861  0008FE  0E6A               	movlw	106
   862  000900                     u2257:
   863  000900  2EE8               	decfsz	wreg,f,c
   864  000902  D7FE               	bra	u2257
   865  000904  2E56               	decfsz	??_main^0,f,c
   866  000906  D7FC               	bra	u2257
   867  000908  2E57               	decfsz	(??_main+1)^0,f,c
   868  00090A  D7FA               	bra	u2257
   869  00090C  D000               	nop2	
   870  00090E                     l2586:
   871                           
   872                           ;main.c: 85:   {;main.c: 86:     codigo_aula = USART_RX();
   873  00090E  ECE4  F00D         	call	_USART_RX	;wreg free
   874  000912  0100               	movlb	0	; () banked
   875  000914  6F6B               	movwf	_codigo_aula& (0+255),b
   876  000916                     
   877                           ; BSR set to: 0
   878                           ;main.c: 87:     _delay((unsigned long)((50)*(48000000/4000.0)));
   879  000916  0E04               	movlw	4
   880  000918  6E57               	movwf	(??_main+1)^0,c
   881  00091A  0E0C               	movlw	12
   882  00091C  6E56               	movwf	??_main^0,c
   883  00091E  0E34               	movlw	52
   884  000920                     u2267:
   885  000920  2EE8               	decfsz	wreg,f,c
   886  000922  D7FE               	bra	u2267
   887  000924  2E56               	decfsz	??_main^0,f,c
   888  000926  D7FC               	bra	u2267
   889  000928  2E57               	decfsz	(??_main+1)^0,f,c
   890  00092A  D7FA               	bra	u2267
   891  00092C                     
   892                           ;main.c: 88:     Tx_i();
   893  00092C  ECD2  F00F         	call	_Tx_i	;wreg free
   894  000930                     
   895                           ;main.c: 90:     if (codigo_aula==55)
   896  000930  0E37               	movlw	55
   897  000932  0100               	movlb	0	; () banked
   898  000934  196B               	xorwf	_codigo_aula& (0+255),w,b
   899  000936  A4D8               	btfss	status,2,c
   900  000938  EFA0  F004         	goto	u2111
   901  00093C  EFA2  F004         	goto	u2110
   902  000940                     u2111:
   903  000940  EFA4  F004         	goto	l2596
   904  000944                     u2110:
   905  000944                     
   906                           ; BSR set to: 0
   907                           ;main.c: 91:         {EMERGENCIA=0xff;
   908  000944  6968               	setf	_EMERGENCIA& (0+255),b
   909                           
   910                           ;main.c: 92:          LATEbits.LATE0=1;}
   911  000946  808D               	bsf	141,0,c	;volatile
   912  000948                     l2596:
   913                           
   914                           ; BSR set to: 0
   915                           ;main.c: 94:         if(EMERGENCIA==0)
   916  000948  5168               	movf	_EMERGENCIA& (0+255),w,b
   917  00094A  A4D8               	btfss	status,2,c
   918  00094C  EFAA  F004         	goto	u2121
   919  000950  EFAC  F004         	goto	u2120
   920  000954                     u2121:
   921  000954  EFC9  F005         	goto	l2664
   922  000958                     u2120:
   923  000958                     
   924                           ; BSR set to: 0
   925                           ;main.c: 95:         {;main.c: 96:             if((PORTCbits.RC0 == 1) && (i<5))
   926  000958  A082               	btfss	130,0,c	;volatile
   927  00095A  EFB1  F004         	goto	u2131
   928  00095E  EFB3  F004         	goto	u2130
   929  000962                     u2131:
   930  000962  EF3B  F005         	goto	l105
   931  000966                     u2130:
   932  000966                     
   933                           ; BSR set to: 0
   934  000966  0E05               	movlw	5
   935  000968  6058               	cpfslt	_i^0,c
   936  00096A  EFB9  F004         	goto	u2141
   937  00096E  EFBB  F004         	goto	u2140
   938  000972                     u2141:
   939  000972  EF3B  F005         	goto	l105
   940  000976                     u2140:
   941  000976                     
   942                           ; BSR set to: 0
   943                           ;main.c: 97:                 {;main.c: 98:                     _delay((unsigned long)((5
      +                          0)*(48000000/4000.0)));
   944  000976  0E04               	movlw	4
   945  000978  6E57               	movwf	(??_main+1)^0,c
   946  00097A  0E0C               	movlw	12
   947  00097C  6E56               	movwf	??_main^0,c
   948  00097E  0E34               	movlw	52
   949  000980                     u2277:
   950  000980  2EE8               	decfsz	wreg,f,c
   951  000982  D7FE               	bra	u2277
   952  000984  2E56               	decfsz	??_main^0,f,c
   953  000986  D7FC               	bra	u2277
   954  000988  2E57               	decfsz	(??_main+1)^0,f,c
   955  00098A  D7FA               	bra	u2277
   956  00098C                     l106:
   957  00098C  B082               	btfsc	130,0,c	;volatile
   958  00098E  EFCB  F004         	goto	u2151
   959  000992  EFCD  F004         	goto	u2150
   960  000996                     u2151:
   961  000996  EFC6  F004         	goto	l106
   962  00099A                     u2150:
   963  00099A                     
   964                           ;main.c: 100:                     LCD_gotoXY(0,0);
   965  00099A  0E00               	movlw	0
   966  00099C  6E05               	movwf	(LCD_gotoXY@x+1)^0,c
   967  00099E  0E00               	movlw	0
   968  0009A0  6E04               	movwf	LCD_gotoXY@x^0,c
   969  0009A2  0E00               	movlw	0
   970  0009A4  6E07               	movwf	(LCD_gotoXY@y+1)^0,c
   971  0009A6  0E00               	movlw	0
   972  0009A8  6E06               	movwf	LCD_gotoXY@y^0,c
   973  0009AA  EC76  F00F         	call	_LCD_gotoXY	;wreg free
   974  0009AE                     
   975                           ;main.c: 101:                     LCD_Cadena("****SALON-1****");
   976  0009AE  0E49               	movlw	low STR_3
   977  0009B0  6E04               	movwf	LCD_Cadena@dato^0,c
   978  0009B2  0E08               	movlw	high STR_3
   979  0009B4  6E05               	movwf	(LCD_Cadena@dato+1)^0,c
   980  0009B6  EC1B  F00E         	call	_LCD_Cadena	;wreg free
   981  0009BA                     
   982                           ;main.c: 102:                     _delay((unsigned long)((100)*(48000000/4000.0)));
   983  0009BA  0E07               	movlw	7
   984  0009BC  6E57               	movwf	(??_main+1)^0,c
   985  0009BE  0E17               	movlw	23
   986  0009C0  6E56               	movwf	??_main^0,c
   987  0009C2  0E6A               	movlw	106
   988  0009C4                     u2287:
   989  0009C4  2EE8               	decfsz	wreg,f,c
   990  0009C6  D7FE               	bra	u2287
   991  0009C8  2E56               	decfsz	??_main^0,f,c
   992  0009CA  D7FC               	bra	u2287
   993  0009CC  2E57               	decfsz	(??_main+1)^0,f,c
   994  0009CE  D7FA               	bra	u2287
   995  0009D0  D000               	nop2	
   996  0009D2                     
   997                           ;main.c: 103:                     sprintf (texto,"UID:%x    ",cod1);
   998  0009D2  0E8C               	movlw	low _texto
   999  0009D4  0100               	movlb	0	; () banked
  1000  0009D6  6FC7               	movwf	sprintf@s& (0+255),b
  1001  0009D8  0E00               	movlw	high _texto
  1002  0009DA  6FC8               	movwf	(sprintf@s+1)& (0+255),b
  1003  0009DC  0E69               	movlw	low STR_4
  1004  0009DE  6FC9               	movwf	sprintf@fmt& (0+255),b
  1005  0009E0  0E08               	movlw	high STR_4
  1006  0009E2  6FCA               	movwf	(sprintf@fmt+1)& (0+255),b
  1007  0009E4  0E5A               	movlw	90
  1008  0009E6  6FCB               	movwf	(?_sprintf+4)& (0+255),b
  1009  0009E8  0E12               	movlw	18
  1010  0009EA  6FCC               	movwf	(?_sprintf+5)& (0+255),b
  1011  0009EC  0E00               	movlw	0
  1012  0009EE  6FCD               	movwf	(?_sprintf+6)& (0+255),b
  1013  0009F0  0E00               	movlw	0
  1014  0009F2  6FCE               	movwf	(?_sprintf+7)& (0+255),b
  1015  0009F4  EC0B  F00F         	call	_sprintf	;wreg free
  1016  0009F8                     
  1017                           ;main.c: 104:                     LCD_gotoXY(1,0);
  1018  0009F8  0E00               	movlw	0
  1019  0009FA  6E05               	movwf	(LCD_gotoXY@x+1)^0,c
  1020  0009FC  0E01               	movlw	1
  1021  0009FE  6E04               	movwf	LCD_gotoXY@x^0,c
  1022  000A00  0E00               	movlw	0
  1023  000A02  6E07               	movwf	(LCD_gotoXY@y+1)^0,c
  1024  000A04  0E00               	movlw	0
  1025  000A06  6E06               	movwf	LCD_gotoXY@y^0,c
  1026  000A08  EC76  F00F         	call	_LCD_gotoXY	;wreg free
  1027  000A0C                     
  1028                           ;main.c: 105:                     LCD_Cadena(texto);
  1029  000A0C  0E8C               	movlw	low _texto
  1030  000A0E  6E04               	movwf	LCD_Cadena@dato^0,c
  1031  000A10  0E00               	movlw	high _texto
  1032  000A12  6E05               	movwf	(LCD_Cadena@dato+1)^0,c
  1033  000A14  EC1B  F00E         	call	_LCD_Cadena	;wreg free
  1034  000A18                     
  1035                           ;main.c: 106:                     i++;
  1036  000A18  2A58               	incf	_i^0,f,c
  1037  000A1A                     
  1038                           ;main.c: 107:                     Giro_IN();
  1039  000A1A  EC5D  F010         	call	_Giro_IN	;wreg free
  1040  000A1E                     
  1041                           ;main.c: 108:                     sprintf(cont, "   # %d ", i);
  1042  000A1E  0EAC               	movlw	low _cont
  1043  000A20  0100               	movlb	0	; () banked
  1044  000A22  6FC7               	movwf	sprintf@s& (0+255),b
  1045  000A24  0E00               	movlw	high _cont
  1046  000A26  6FC8               	movwf	(sprintf@s+1)& (0+255),b
  1047  000A28  0E74               	movlw	low STR_5
  1048  000A2A  6FC9               	movwf	sprintf@fmt& (0+255),b
  1049  000A2C  0E08               	movlw	high STR_5
  1050  000A2E  6FCA               	movwf	(sprintf@fmt+1)& (0+255),b
  1051  000A30  C058  F0CB         	movff	_i,?_sprintf+4
  1052  000A34  6BCC               	clrf	(?_sprintf+5)& (0+255),b
  1053  000A36  EC0B  F00F         	call	_sprintf	;wreg free
  1054  000A3A                     l2622:
  1055                           
  1056                           ;main.c: 109:                     LCD_gotoXY(1,10);
  1057  000A3A  0E00               	movlw	0
  1058  000A3C  6E05               	movwf	(LCD_gotoXY@x+1)^0,c
  1059  000A3E  0E01               	movlw	1
  1060  000A40  6E04               	movwf	LCD_gotoXY@x^0,c
  1061  000A42  0E00               	movlw	0
  1062  000A44  6E07               	movwf	(LCD_gotoXY@y+1)^0,c
  1063  000A46  0E0A               	movlw	10
  1064  000A48  6E06               	movwf	LCD_gotoXY@y^0,c
  1065  000A4A  EC76  F00F         	call	_LCD_gotoXY	;wreg free
  1066  000A4E                     
  1067                           ;main.c: 110:                     LCD_Cadena(cont);
  1068  000A4E  0EAC               	movlw	low _cont
  1069  000A50  6E04               	movwf	LCD_Cadena@dato^0,c
  1070  000A52  0E00               	movlw	high _cont
  1071  000A54  6E05               	movwf	(LCD_Cadena@dato+1)^0,c
  1072  000A56  EC1B  F00E         	call	_LCD_Cadena	;wreg free
  1073  000A5A                     
  1074                           ;main.c: 111:                     _delay((unsigned long)((100)*(48000000/4000.0)));
  1075  000A5A  0E07               	movlw	7
  1076  000A5C  6E57               	movwf	(??_main+1)^0,c
  1077  000A5E  0E17               	movlw	23
  1078  000A60  6E56               	movwf	??_main^0,c
  1079  000A62  0E6A               	movlw	106
  1080  000A64                     u2297:
  1081  000A64  2EE8               	decfsz	wreg,f,c
  1082  000A66  D7FE               	bra	u2297
  1083  000A68  2E56               	decfsz	??_main^0,f,c
  1084  000A6A  D7FC               	bra	u2297
  1085  000A6C  2E57               	decfsz	(??_main+1)^0,f,c
  1086  000A6E  D7FA               	bra	u2297
  1087  000A70  D000               	nop2	
  1088                           
  1089                           ;main.c: 112:                 }
  1090  000A72  EFAE  F005         	goto	l2656
  1091  000A76                     l105:
  1092                           
  1093                           ; BSR set to: 0
  1094  000A76  A282               	btfss	130,1,c	;volatile
  1095  000A78  EF40  F005         	goto	u2161
  1096  000A7C  EF42  F005         	goto	u2160
  1097  000A80                     u2161:
  1098  000A80  EFAE  F005         	goto	l2656
  1099  000A84                     u2160:
  1100  000A84                     
  1101                           ; BSR set to: 0
  1102  000A84  5058               	movf	_i^0,w,c
  1103  000A86  B4D8               	btfsc	status,2,c
  1104  000A88  EF48  F005         	goto	u2171
  1105  000A8C  EF4A  F005         	goto	u2170
  1106  000A90                     u2171:
  1107  000A90  EFAE  F005         	goto	l2656
  1108  000A94                     u2170:
  1109  000A94                     
  1110                           ; BSR set to: 0
  1111                           ;main.c: 115:                 {;main.c: 116:                     _delay((unsigned long)(
      +                          (50)*(48000000/4000.0)));
  1112  000A94  0E04               	movlw	4
  1113  000A96  6E57               	movwf	(??_main+1)^0,c
  1114  000A98  0E0C               	movlw	12
  1115  000A9A  6E56               	movwf	??_main^0,c
  1116  000A9C  0E34               	movlw	52
  1117  000A9E                     u2307:
  1118  000A9E  2EE8               	decfsz	wreg,f,c
  1119  000AA0  D7FE               	bra	u2307
  1120  000AA2  2E56               	decfsz	??_main^0,f,c
  1121  000AA4  D7FC               	bra	u2307
  1122  000AA6  2E57               	decfsz	(??_main+1)^0,f,c
  1123  000AA8  D7FA               	bra	u2307
  1124  000AAA                     l111:
  1125  000AAA  B282               	btfsc	130,1,c	;volatile
  1126  000AAC  EF5A  F005         	goto	u2181
  1127  000AB0  EF5C  F005         	goto	u2180
  1128  000AB4                     u2181:
  1129  000AB4  EF55  F005         	goto	l111
  1130  000AB8                     u2180:
  1131  000AB8                     
  1132                           ;main.c: 118:                     LCD_gotoXY(0,0);
  1133  000AB8  0E00               	movlw	0
  1134  000ABA  6E05               	movwf	(LCD_gotoXY@x+1)^0,c
  1135  000ABC  0E00               	movlw	0
  1136  000ABE  6E04               	movwf	LCD_gotoXY@x^0,c
  1137  000AC0  0E00               	movlw	0
  1138  000AC2  6E07               	movwf	(LCD_gotoXY@y+1)^0,c
  1139  000AC4  0E00               	movlw	0
  1140  000AC6  6E06               	movwf	LCD_gotoXY@y^0,c
  1141  000AC8  EC76  F00F         	call	_LCD_gotoXY	;wreg free
  1142  000ACC                     
  1143                           ;main.c: 119:                     LCD_Cadena("****SALON-1****");
  1144  000ACC  0E49               	movlw	low STR_3
  1145  000ACE  6E04               	movwf	LCD_Cadena@dato^0,c
  1146  000AD0  0E08               	movlw	high STR_3
  1147  000AD2  6E05               	movwf	(LCD_Cadena@dato+1)^0,c
  1148  000AD4  EC1B  F00E         	call	_LCD_Cadena	;wreg free
  1149  000AD8                     
  1150                           ;main.c: 120:                     _delay((unsigned long)((100)*(48000000/4000.0)));
  1151  000AD8  0E07               	movlw	7
  1152  000ADA  6E57               	movwf	(??_main+1)^0,c
  1153  000ADC  0E17               	movlw	23
  1154  000ADE  6E56               	movwf	??_main^0,c
  1155  000AE0  0E6A               	movlw	106
  1156  000AE2                     u2317:
  1157  000AE2  2EE8               	decfsz	wreg,f,c
  1158  000AE4  D7FE               	bra	u2317
  1159  000AE6  2E56               	decfsz	??_main^0,f,c
  1160  000AE8  D7FC               	bra	u2317
  1161  000AEA  2E57               	decfsz	(??_main+1)^0,f,c
  1162  000AEC  D7FA               	bra	u2317
  1163  000AEE  D000               	nop2	
  1164  000AF0                     
  1165                           ;main.c: 121:                     sprintf (texto,"UID:%x    ",cod1);
  1166  000AF0  0E8C               	movlw	low _texto
  1167  000AF2  0100               	movlb	0	; () banked
  1168  000AF4  6FC7               	movwf	sprintf@s& (0+255),b
  1169  000AF6  0E00               	movlw	high _texto
  1170  000AF8  6FC8               	movwf	(sprintf@s+1)& (0+255),b
  1171  000AFA  0E69               	movlw	low STR_4
  1172  000AFC  6FC9               	movwf	sprintf@fmt& (0+255),b
  1173  000AFE  0E08               	movlw	high STR_4
  1174  000B00  6FCA               	movwf	(sprintf@fmt+1)& (0+255),b
  1175  000B02  0E5A               	movlw	90
  1176  000B04  6FCB               	movwf	(?_sprintf+4)& (0+255),b
  1177  000B06  0E12               	movlw	18
  1178  000B08  6FCC               	movwf	(?_sprintf+5)& (0+255),b
  1179  000B0A  0E00               	movlw	0
  1180  000B0C  6FCD               	movwf	(?_sprintf+6)& (0+255),b
  1181  000B0E  0E00               	movlw	0
  1182  000B10  6FCE               	movwf	(?_sprintf+7)& (0+255),b
  1183  000B12  EC0B  F00F         	call	_sprintf	;wreg free
  1184  000B16                     
  1185                           ;main.c: 122:                     LCD_gotoXY(1,0);
  1186  000B16  0E00               	movlw	0
  1187  000B18  6E05               	movwf	(LCD_gotoXY@x+1)^0,c
  1188  000B1A  0E01               	movlw	1
  1189  000B1C  6E04               	movwf	LCD_gotoXY@x^0,c
  1190  000B1E  0E00               	movlw	0
  1191  000B20  6E07               	movwf	(LCD_gotoXY@y+1)^0,c
  1192  000B22  0E00               	movlw	0
  1193  000B24  6E06               	movwf	LCD_gotoXY@y^0,c
  1194  000B26  EC76  F00F         	call	_LCD_gotoXY	;wreg free
  1195  000B2A                     
  1196                           ;main.c: 123:                     LCD_Cadena(texto);
  1197  000B2A  0E8C               	movlw	low _texto
  1198  000B2C  6E04               	movwf	LCD_Cadena@dato^0,c
  1199  000B2E  0E00               	movlw	high _texto
  1200  000B30  6E05               	movwf	(LCD_Cadena@dato+1)^0,c
  1201  000B32  EC1B  F00E         	call	_LCD_Cadena	;wreg free
  1202  000B36                     
  1203                           ;main.c: 124:                     i--;
  1204  000B36  0658               	decf	_i^0,f,c
  1205  000B38                     
  1206                           ;main.c: 125:                     Giro_OUT ();
  1207  000B38  EC43  F010         	call	_Giro_OUT	;wreg free
  1208  000B3C                     
  1209                           ;main.c: 126:                     sprintf(cont, "   # %d ", i);
  1210  000B3C  0EAC               	movlw	low _cont
  1211  000B3E  0100               	movlb	0	; () banked
  1212  000B40  6FC7               	movwf	sprintf@s& (0+255),b
  1213  000B42  0E00               	movlw	high _cont
  1214  000B44  6FC8               	movwf	(sprintf@s+1)& (0+255),b
  1215  000B46  0E74               	movlw	low STR_5
  1216  000B48  6FC9               	movwf	sprintf@fmt& (0+255),b
  1217  000B4A  0E08               	movlw	high STR_5
  1218  000B4C  6FCA               	movwf	(sprintf@fmt+1)& (0+255),b
  1219  000B4E  C058  F0CB         	movff	_i,?_sprintf+4
  1220  000B52  6BCC               	clrf	(?_sprintf+5)& (0+255),b
  1221  000B54  EC0B  F00F         	call	_sprintf	;wreg free
  1222  000B58  EF1D  F005         	goto	l2622
  1223  000B5C                     l2656:
  1224                           
  1225                           ;main.c: 132:             if (i==5)
  1226  000B5C  0E05               	movlw	5
  1227  000B5E  1858               	xorwf	_i^0,w,c
  1228  000B60  A4D8               	btfss	status,2,c
  1229  000B62  EFB5  F005         	goto	u2191
  1230  000B66  EFB7  F005         	goto	u2190
  1231  000B6A                     u2191:
  1232  000B6A  EF87  F004         	goto	l2586
  1233  000B6E                     u2190:
  1234  000B6E                     
  1235                           ;main.c: 133:                 {;main.c: 134:                     LCD_gotoXY(1,0);
  1236  000B6E  0E00               	movlw	0
  1237  000B70  6E05               	movwf	(LCD_gotoXY@x+1)^0,c
  1238  000B72  0E01               	movlw	1
  1239  000B74  6E04               	movwf	LCD_gotoXY@x^0,c
  1240  000B76  0E00               	movlw	0
  1241  000B78  6E07               	movwf	(LCD_gotoXY@y+1)^0,c
  1242  000B7A  0E00               	movlw	0
  1243  000B7C  6E06               	movwf	LCD_gotoXY@y^0,c
  1244  000B7E  EC76  F00F         	call	_LCD_gotoXY	;wreg free
  1245  000B82                     
  1246                           ;main.c: 135:                     LCD_Cadena("***AULA LLENA***");
  1247  000B82  0E16               	movlw	low STR_9
  1248  000B84  6E04               	movwf	LCD_Cadena@dato^0,c
  1249  000B86  0E08               	movlw	high STR_9
  1250  000B88  6E05               	movwf	(LCD_Cadena@dato+1)^0,c
  1251  000B8A  EC1B  F00E         	call	_LCD_Cadena	;wreg free
  1252  000B8E  EF7B  F004         	goto	l2584
  1253  000B92                     l2664:
  1254                           
  1255                           ; BSR set to: 0
  1256                           ;main.c: 140:         {;main.c: 141:           LCD_Comando (0x01);
  1257  000B92  0E01               	movlw	1
  1258  000B94  ECB2  F00E         	call	_LCD_Comando
  1259                           
  1260                           ;main.c: 142:           LCD_gotoXY(0,0);
  1261  000B98  0E00               	movlw	0
  1262  000B9A  6E05               	movwf	(LCD_gotoXY@x+1)^0,c
  1263  000B9C  0E00               	movlw	0
  1264  000B9E  6E04               	movwf	LCD_gotoXY@x^0,c
  1265  000BA0  0E00               	movlw	0
  1266  000BA2  6E07               	movwf	(LCD_gotoXY@y+1)^0,c
  1267  000BA4  0E00               	movlw	0
  1268  000BA6  6E06               	movwf	LCD_gotoXY@y^0,c
  1269  000BA8  EC76  F00F         	call	_LCD_gotoXY	;wreg free
  1270  000BAC                     
  1271                           ;main.c: 143:           LCD_Cadena("***EMERGENCIA***");
  1272  000BAC  0E05               	movlw	low STR_10
  1273  000BAE  6E04               	movwf	LCD_Cadena@dato^0,c
  1274  000BB0  0E08               	movlw	high STR_10
  1275  000BB2  6E05               	movwf	(LCD_Cadena@dato+1)^0,c
  1276  000BB4  EC1B  F00E         	call	_LCD_Cadena	;wreg free
  1277  000BB8                     
  1278                           ;main.c: 144:           _delay((unsigned long)((100)*(48000000/4000.0)));
  1279  000BB8  0E07               	movlw	7
  1280  000BBA  6E57               	movwf	(??_main+1)^0,c
  1281  000BBC  0E17               	movlw	23
  1282  000BBE  6E56               	movwf	??_main^0,c
  1283  000BC0  0E6A               	movlw	106
  1284  000BC2                     u2327:
  1285  000BC2  2EE8               	decfsz	wreg,f,c
  1286  000BC4  D7FE               	bra	u2327
  1287  000BC6  2E56               	decfsz	??_main^0,f,c
  1288  000BC8  D7FC               	bra	u2327
  1289  000BCA  2E57               	decfsz	(??_main+1)^0,f,c
  1290  000BCC  D7FA               	bra	u2327
  1291  000BCE  D000               	nop2	
  1292  000BD0                     
  1293                           ;main.c: 145:           LCD_gotoXY(1,0);
  1294  000BD0  0E00               	movlw	0
  1295  000BD2  6E05               	movwf	(LCD_gotoXY@x+1)^0,c
  1296  000BD4  0E01               	movlw	1
  1297  000BD6  6E04               	movwf	LCD_gotoXY@x^0,c
  1298  000BD8  0E00               	movlw	0
  1299  000BDA  6E07               	movwf	(LCD_gotoXY@y+1)^0,c
  1300  000BDC  0E00               	movlw	0
  1301  000BDE  6E06               	movwf	LCD_gotoXY@y^0,c
  1302  000BE0  EC76  F00F         	call	_LCD_gotoXY	;wreg free
  1303  000BE4                     
  1304                           ;main.c: 146:           LCD_Cadena("*Puerta abierta*");
  1305  000BE4  0E38               	movlw	low STR_11
  1306  000BE6  6E04               	movwf	LCD_Cadena@dato^0,c
  1307  000BE8  0E08               	movlw	high STR_11
  1308  000BEA  6E05               	movwf	(LCD_Cadena@dato+1)^0,c
  1309  000BEC  EC1B  F00E         	call	_LCD_Cadena	;wreg free
  1310                           
  1311                           ;main.c: 147:           _delay((unsigned long)((100)*(48000000/4000.0)));
  1312  000BF0  0E07               	movlw	7
  1313  000BF2  6E57               	movwf	(??_main+1)^0,c
  1314  000BF4  0E17               	movlw	23
  1315  000BF6  6E56               	movwf	??_main^0,c
  1316  000BF8  0E6A               	movlw	106
  1317  000BFA                     u2337:
  1318  000BFA  2EE8               	decfsz	wreg,f,c
  1319  000BFC  D7FE               	bra	u2337
  1320  000BFE  2E56               	decfsz	??_main^0,f,c
  1321  000C00  D7FC               	bra	u2337
  1322  000C02  2E57               	decfsz	(??_main+1)^0,f,c
  1323  000C04  D7FA               	bra	u2337
  1324  000C06  D000               	nop2	
  1325                           
  1326                           ;main.c: 148:            while(EMERGENCIA == 0xff)
  1327  000C08  EF43  F006         	goto	l2694
  1328  000C0C                     l2674:
  1329                           
  1330                           ; BSR set to: 0
  1331                           ;main.c: 149:            {;main.c: 150:                codigo_aula = USART_RX();
  1332  000C0C  ECE4  F00D         	call	_USART_RX	;wreg free
  1333  000C10  0100               	movlb	0	; () banked
  1334  000C12  6F6B               	movwf	_codigo_aula& (0+255),b
  1335  000C14                     
  1336                           ; BSR set to: 0
  1337                           ;main.c: 151:               _delay((unsigned long)((50)*(48000000/4000.0)));
  1338  000C14  0E04               	movlw	4
  1339  000C16  6E57               	movwf	(??_main+1)^0,c
  1340  000C18  0E0C               	movlw	12
  1341  000C1A  6E56               	movwf	??_main^0,c
  1342  000C1C  0E34               	movlw	52
  1343  000C1E                     u2347:
  1344  000C1E  2EE8               	decfsz	wreg,f,c
  1345  000C20  D7FE               	bra	u2347
  1346  000C22  2E56               	decfsz	??_main^0,f,c
  1347  000C24  D7FC               	bra	u2347
  1348  000C26  2E57               	decfsz	(??_main+1)^0,f,c
  1349  000C28  D7FA               	bra	u2347
  1350  000C2A                     
  1351                           ;main.c: 153:             if ((codigo_aula!=55)&& (aux==0))
  1352  000C2A  0E37               	movlw	55
  1353  000C2C  0100               	movlb	0	; () banked
  1354  000C2E  196B               	xorwf	_codigo_aula& (0+255),w,b
  1355  000C30  B4D8               	btfsc	status,2,c
  1356  000C32  EF1D  F006         	goto	u2201
  1357  000C36  EF1F  F006         	goto	u2200
  1358  000C3A                     u2201:
  1359  000C3A  EF2A  F006         	goto	l118
  1360  000C3E                     u2200:
  1361  000C3E                     
  1362                           ; BSR set to: 0
  1363  000C3E  516A               	movf	_aux& (0+255),w,b
  1364  000C40  A4D8               	btfss	status,2,c
  1365  000C42  EF25  F006         	goto	u2211
  1366  000C46  EF27  F006         	goto	u2210
  1367  000C4A                     u2211:
  1368  000C4A  EF2A  F006         	goto	l118
  1369  000C4E                     u2210:
  1370  000C4E                     
  1371                           ; BSR set to: 0
  1372                           ;main.c: 154:                 {EMERGENCIA=0;
  1373  000C4E  0E00               	movlw	0
  1374  000C50  6F68               	movwf	_EMERGENCIA& (0+255),b
  1375  000C52                     
  1376                           ; BSR set to: 0
  1377                           ;main.c: 155:                 LATEbits.LATE0=0;}
  1378  000C52  908D               	bcf	141,0,c	;volatile
  1379  000C54                     l118:
  1380                           
  1381                           ; BSR set to: 0
  1382                           ;main.c: 156:                if (i>0)
  1383  000C54  5058               	movf	_i^0,w,c
  1384  000C56  B4D8               	btfsc	status,2,c
  1385  000C58  EF30  F006         	goto	u2221
  1386  000C5C  EF32  F006         	goto	u2220
  1387  000C60                     u2221:
  1388  000C60  EF43  F006         	goto	l2694
  1389  000C64                     u2220:
  1390  000C64                     
  1391                           ; BSR set to: 0
  1392                           ;main.c: 157:                {;main.c: 158:                 Giro_OUT ();
  1393  000C64  EC43  F010         	call	_Giro_OUT	;wreg free
  1394  000C68                     
  1395                           ;main.c: 159:                 i--;
  1396  000C68  0658               	decf	_i^0,f,c
  1397  000C6A                     
  1398                           ;main.c: 160:                 Tx_i();
  1399  000C6A  ECD2  F00F         	call	_Tx_i	;wreg free
  1400  000C6E                     
  1401                           ;main.c: 161:                 _delay((unsigned long)((150)*(48000000/4000.0)));
  1402  000C6E  0E0A               	movlw	10
  1403  000C70  6E57               	movwf	(??_main+1)^0,c
  1404  000C72  0E22               	movlw	34
  1405  000C74  6E56               	movwf	??_main^0,c
  1406  000C76  0EA1               	movlw	161
  1407  000C78                     u2357:
  1408  000C78  2EE8               	decfsz	wreg,f,c
  1409  000C7A  D7FE               	bra	u2357
  1410  000C7C  2E56               	decfsz	??_main^0,f,c
  1411  000C7E  D7FC               	bra	u2357
  1412  000C80  2E57               	decfsz	(??_main+1)^0,f,c
  1413  000C82  D7FA               	bra	u2357
  1414  000C84  F000               	nop	
  1415  000C86                     l2694:
  1416                           
  1417                           ;main.c: 148:            while(EMERGENCIA == 0xff)
  1418  000C86  0100               	movlb	0	; () banked
  1419  000C88  2968               	incf	_EMERGENCIA& (0+255),w,b
  1420  000C8A  B4D8               	btfsc	status,2,c
  1421  000C8C  EF4A  F006         	goto	u2231
  1422  000C90  EF4C  F006         	goto	u2230
  1423  000C94                     u2231:
  1424  000C94  EF06  F006         	goto	l2674
  1425  000C98                     u2230:
  1426  000C98  EF87  F004         	goto	l2586
  1427  000C9C  EF07  F000         	goto	start
  1428  000CA0                     __end_of_main:
  1429                           	callstack 0
  1430                           
  1431 ;; *************** function _sprintf *****************
  1432 ;; Defined at:
  1433 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_sprintf.c"
  1434 ;; Parameters:    Size  Location     Type
  1435 ;;  s               2   17[BANK0 ] PTR unsigned char 
  1436 ;;		 -> cont(10), texto(32), 
  1437 ;;  fmt             2   19[BANK0 ] PTR const unsigned char 
  1438 ;;		 -> STR_8(9), STR_7(11), STR_5(9), STR_4(11), 
  1439 ;; Auto vars:     Size  Location     Type
  1440 ;;  f               6   29[BANK0 ] struct _IO_FILE
  1441 ;;  ap              2   27[BANK0 ] PTR void [1]
  1442 ;;		 -> ?_sprintf(2), 
  1443 ;;  ret             2    0        int 
  1444 ;; Return value:  Size  Location     Type
  1445 ;;                  2   17[BANK0 ] int 
  1446 ;; Registers used:
  1447 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1448 ;; Tracked objects:
  1449 ;;		On entry : 0/0
  1450 ;;		On exit  : 0/0
  1451 ;;		Unchanged: 0/0
  1452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1453 ;;      Params:         0       8       0       0       0       0       0       0       0
  1454 ;;      Locals:         0      10       0       0       0       0       0       0       0
  1455 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1456 ;;      Totals:         0      18       0       0       0       0       0       0       0
  1457 ;;Total ram usage:       18 bytes
  1458 ;; Hardware stack levels used:    1
  1459 ;; Hardware stack levels required when called:    8
  1460 ;; This function calls:
  1461 ;;		_vfprintf
  1462 ;; This function is called by:
  1463 ;;		_main
  1464 ;; This function uses a non-reentrant model
  1465 ;;
  1466                           
  1467                           	psect	text1
  1468  001E16                     __ptext1:
  1469                           	callstack 0
  1470  001E16                     _sprintf:
  1471                           	callstack 22
  1472  001E16  0ECB               	movlw	low (?_sprintf+4)
  1473  001E18  0100               	movlb	0	; () banked
  1474  001E1A  6FD1               	movwf	sprintf@ap& (0+255),b
  1475  001E1C  0E00               	movlw	high (?_sprintf+4)
  1476  001E1E  6FD2               	movwf	(sprintf@ap+1)& (0+255),b
  1477  001E20  C0C7  F0D3         	movff	sprintf@s,sprintf@f
  1478  001E24  C0C8  F0D4         	movff	sprintf@s+1,sprintf@f+1
  1479  001E28                     
  1480                           ; BSR set to: 0
  1481  001E28  0E00               	movlw	0
  1482  001E2A  6FD6               	movwf	(sprintf@f+3)& (0+255),b
  1483  001E2C  0E00               	movlw	0
  1484  001E2E  6FD5               	movwf	(sprintf@f+2)& (0+255),b
  1485  001E30                     
  1486                           ; BSR set to: 0
  1487  001E30  0E00               	movlw	0
  1488  001E32  6FD8               	movwf	(sprintf@f+5)& (0+255),b
  1489  001E34  0E00               	movlw	0
  1490  001E36  6FD7               	movwf	(sprintf@f+4)& (0+255),b
  1491  001E38                     
  1492                           ; BSR set to: 0
  1493  001E38  0ED3               	movlw	low sprintf@f
  1494  001E3A  6E4E               	movwf	vfprintf@fp^0,c
  1495  001E3C  0E00               	movlw	high sprintf@f
  1496  001E3E  6E4F               	movwf	(vfprintf@fp+1)^0,c
  1497  001E40  C0C9  F050         	movff	sprintf@fmt,vfprintf@fmt
  1498  001E44  C0CA  F051         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1499  001E48  0ED1               	movlw	low sprintf@ap
  1500  001E4A  6E52               	movwf	vfprintf@ap^0,c
  1501  001E4C  0E00               	movlw	high sprintf@ap
  1502  001E4E  6E53               	movwf	(vfprintf@ap+1)^0,c
  1503  001E50  EC52  F00E         	call	_vfprintf	;wreg free
  1504  001E54  0100               	movlb	0	; () banked
  1505  001E56  51D5               	movf	(sprintf@f+2)& (0+255),w,b
  1506  001E58  25C7               	addwf	sprintf@s& (0+255),w,b
  1507  001E5A  6ED9               	movwf	fsr2l,c
  1508  001E5C  51D6               	movf	(sprintf@f+3)& (0+255),w,b
  1509  001E5E  21C8               	addwfc	(sprintf@s+1)& (0+255),w,b
  1510  001E60  6EDA               	movwf	fsr2h,c
  1511  001E62  0E00               	movlw	0
  1512  001E64  6EDF               	movwf	indf2,c
  1513  001E66                     
  1514                           ; BSR set to: 0
  1515  001E66  0012               	return		;funcret
  1516  001E68                     __end_of_sprintf:
  1517                           	callstack 0
  1518                           
  1519 ;; *************** function _vfprintf *****************
  1520 ;; Defined at:
  1521 ;;		line 1368 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  1522 ;; Parameters:    Size  Location     Type
  1523 ;;  fp              2   77[COMRAM] PTR struct _IO_FILE
  1524 ;;		 -> sprintf@f(6), 
  1525 ;;  fmt             2   79[COMRAM] PTR const unsigned char 
  1526 ;;		 -> STR_8(9), STR_7(11), STR_5(9), STR_4(11), 
  1527 ;;  ap              2   81[COMRAM] PTR PTR void 
  1528 ;;		 -> sprintf@ap(2), 
  1529 ;; Auto vars:     Size  Location     Type
  1530 ;;  cfmt            2   83[COMRAM] PTR unsigned char 
  1531 ;;		 -> STR_8(9), STR_7(11), STR_5(9), STR_4(11), 
  1532 ;; Return value:  Size  Location     Type
  1533 ;;                  2   77[COMRAM] int 
  1534 ;; Registers used:
  1535 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1536 ;; Tracked objects:
  1537 ;;		On entry : 0/0
  1538 ;;		On exit  : 0/0
  1539 ;;		Unchanged: 0/0
  1540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1541 ;;      Params:         6       0       0       0       0       0       0       0       0
  1542 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1543 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1544 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1545 ;;Total ram usage:        8 bytes
  1546 ;; Hardware stack levels used:    1
  1547 ;; Hardware stack levels required when called:    7
  1548 ;; This function calls:
  1549 ;;		_vfpfcnvrt
  1550 ;; This function is called by:
  1551 ;;		_sprintf
  1552 ;; This function uses a non-reentrant model
  1553 ;;
  1554                           
  1555                           	psect	text2
  1556  001CA4                     __ptext2:
  1557                           	callstack 0
  1558  001CA4                     _vfprintf:
  1559                           	callstack 22
  1560  001CA4                     
  1561                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\source
      +                          s\c99\common\doprnt.c: 1369: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1371:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\
      +                          common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1562  001CA4  C050  F054         	movff	vfprintf@fmt,vfprintf@cfmt
  1563  001CA8  C051  F055         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1564  001CAC                     
  1565                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 
      +                          0;
  1566  001CAC  0E00               	movlw	0
  1567  001CAE  0100               	movlb	0	; () banked
  1568  001CB0  6F61               	movwf	(_nout+1)& (0+255),b
  1569  001CB2  0E00               	movlw	0
  1570  001CB4  6F60               	movwf	_nout& (0+255),b
  1571                           
  1572                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  1573  001CB6  EF70  F00E         	goto	l2266
  1574  001CBA                     l2264:
  1575                           
  1576                           ; BSR set to: 0
  1577                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1578  001CBA  C04E  F044         	movff	vfprintf@fp,vfpfcnvrt@fp
  1579  001CBE  C04F  F045         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1580  001CC2  0E54               	movlw	low vfprintf@cfmt
  1581  001CC4  6E46               	movwf	vfpfcnvrt@fmt^0,c
  1582  001CC6  0E00               	movlw	high vfprintf@cfmt
  1583  001CC8  6E47               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1584  001CCA  C052  F048         	movff	vfprintf@ap,vfpfcnvrt@ap
  1585  001CCE  C053  F049         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1586  001CD2  EC2D  F009         	call	_vfpfcnvrt	;wreg free
  1587  001CD6  5044               	movf	?_vfpfcnvrt^0,w,c
  1588  001CD8  0100               	movlb	0	; () banked
  1589  001CDA  2760               	addwf	_nout& (0+255),f,b
  1590  001CDC  5045               	movf	(?_vfpfcnvrt+1)^0,w,c
  1591  001CDE  2361               	addwfc	(_nout+1)& (0+255),f,b
  1592  001CE0                     l2266:
  1593                           
  1594                           ; BSR set to: 0
  1595                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  1596  001CE0  C054  FFF6         	movff	vfprintf@cfmt,tblptrl
  1597  001CE4  C055  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1598  001CE8                     	if	0	;tblptru may be non-zero
  1599  001CE8                     	endif
  1600  001CE8                     	if	0	;tblptru may be non-zero
  1601  001CE8                     	endif
  1602  001CE8  0008               	tblrd		*
  1603  001CEA  50F5               	movf	tablat,w,c
  1604  001CEC  0900               	iorlw	0
  1605  001CEE  A4D8               	btfss	status,2,c
  1606  001CF0  EF7C  F00E         	goto	u1841
  1607  001CF4  EF7E  F00E         	goto	u1840
  1608  001CF8                     u1841:
  1609  001CF8  EF5D  F00E         	goto	l2264
  1610  001CFC                     u1840:
  1611  001CFC                     
  1612                           ; BSR set to: 0
  1613                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return 
      +                          nout;
  1614  001CFC  C060  F04E         	movff	_nout,?_vfprintf
  1615  001D00  C061  F04F         	movff	_nout+1,?_vfprintf+1
  1616  001D04                     
  1617                           ; BSR set to: 0
  1618  001D04  0012               	return		;funcret
  1619  001D06                     __end_of_vfprintf:
  1620                           	callstack 0
  1621                           
  1622 ;; *************** function _vfpfcnvrt *****************
  1623 ;; Defined at:
  1624 ;;		line 670 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  1625 ;; Parameters:    Size  Location     Type
  1626 ;;  fp              2   67[COMRAM] PTR struct _IO_FILE
  1627 ;;		 -> sprintf@f(6), 
  1628 ;;  fmt             2   69[COMRAM] PTR PTR unsigned char 
  1629 ;;		 -> vfprintf@cfmt(2), 
  1630 ;;  ap              2   71[COMRAM] PTR PTR void 
  1631 ;;		 -> sprintf@ap(2), 
  1632 ;; Auto vars:     Size  Location     Type
  1633 ;;  llu             8    8[BANK0 ] unsigned long long 
  1634 ;;  ll              8    0[BANK0 ] long long 
  1635 ;;  f               4    0        long long 
  1636 ;;  vp              3    0        PTR void 
  1637 ;;  ct              3    0        unsigned char [3]
  1638 ;;  cp              3    0        PTR unsigned char 
  1639 ;;  i               2    0        int 
  1640 ;;  done            2    0        int 
  1641 ;;  c               1   16[BANK0 ] unsigned char 
  1642 ;; Return value:  Size  Location     Type
  1643 ;;                  2   67[COMRAM] int 
  1644 ;; Registers used:
  1645 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1646 ;; Tracked objects:
  1647 ;;		On entry : 0/0
  1648 ;;		On exit  : 0/0
  1649 ;;		Unchanged: 0/0
  1650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1651 ;;      Params:         6       0       0       0       0       0       0       0       0
  1652 ;;      Locals:         0      17       0       0       0       0       0       0       0
  1653 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1654 ;;      Totals:        10      17       0       0       0       0       0       0       0
  1655 ;;Total ram usage:       27 bytes
  1656 ;; Hardware stack levels used:    1
  1657 ;; Hardware stack levels required when called:    6
  1658 ;; This function calls:
  1659 ;;		_dtoa
  1660 ;;		_fputc
  1661 ;;		_xtoa
  1662 ;; This function is called by:
  1663 ;;		_vfprintf
  1664 ;; This function uses a non-reentrant model
  1665 ;;
  1666                           
  1667                           	psect	text3
  1668  00125A                     __ptext3:
  1669                           	callstack 0
  1670  00125A                     _vfpfcnvrt:
  1671                           	callstack 22
  1672  00125A                     
  1673                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 671: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files\Microchip\xc8\v2.20\pic
      +                          \sources\c99\common\doprnt.c: 674:     long long ll;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;
  1674  00125A  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1675  00125E  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1676  001262  CFDE FFF6          	movff	postinc2,tblptrl
  1677  001266  CFDD FFF7          	movff	postdec2,tblptrh
  1678  00126A                     	if	0	;tblptru may be non-zero
  1679  00126A                     	endif
  1680  00126A                     	if	0	;tblptru may be non-zero
  1681  00126A                     	endif
  1682  00126A  0008               	tblrd		*
  1683  00126C  50F5               	movf	tablat,w,c
  1684  00126E  0A25               	xorlw	37
  1685  001270  A4D8               	btfss	status,2,c
  1686  001272  EF3D  F009         	goto	u1711
  1687  001276  EF3F  F009         	goto	u1710
  1688  00127A                     u1711:
  1689  00127A  EF5D  F00A         	goto	l2132
  1690  00127E                     u1710:
  1691  00127E                     
  1692                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*f
      +                          mt;
  1693  00127E  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1694  001282  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1695  001286  2ADE               	incf	postinc2,f,c
  1696  001288  0E00               	movlw	0
  1697  00128A  22DD               	addwfc	postdec2,f,c
  1698  00128C                     
  1699                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flag
      +                          s = width = 0;
  1700  00128C  0E00               	movlw	0
  1701  00128E  0100               	movlb	0	; () banked
  1702  001290  6F63               	movwf	(_width+1)& (0+255),b
  1703  001292  0E00               	movlw	0
  1704  001294  6F62               	movwf	_width& (0+255),b
  1705  001296  C062  F066         	movff	_width,_flags
  1706  00129A  C063  F067         	movff	_width+1,_flags+1
  1707  00129E                     
  1708                           ; BSR set to: 0
  1709                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec
      +                           = -1;
  1710  00129E  6964               	setf	_prec& (0+255),b
  1711  0012A0  6965               	setf	(_prec+1)& (0+255),b
  1712  0012A2                     
  1713                           ; BSR set to: 0
  1714                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 825:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1715  0012A2  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1716  0012A6  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1717  0012AA  CFDE FFF6          	movff	postinc2,tblptrl
  1718  0012AE  CFDD FFF7          	movff	postdec2,tblptrh
  1719  0012B2                     	if	0	;tblptru may be non-zero
  1720  0012B2                     	endif
  1721  0012B2                     	if	0	;tblptru may be non-zero
  1722  0012B2                     	endif
  1723  0012B2  0008               	tblrd		*
  1724  0012B4  50F5               	movf	tablat,w,c
  1725  0012B6  0A64               	xorlw	100
  1726  0012B8  B4D8               	btfsc	status,2,c
  1727  0012BA  EF61  F009         	goto	u1721
  1728  0012BE  EF63  F009         	goto	u1720
  1729  0012C2                     u1721:
  1730  0012C2  EF75  F009         	goto	l2096
  1731  0012C6                     u1720:
  1732  0012C6                     
  1733                           ; BSR set to: 0
  1734  0012C6  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1735  0012CA  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1736  0012CE  CFDE FFF6          	movff	postinc2,tblptrl
  1737  0012D2  CFDD FFF7          	movff	postdec2,tblptrh
  1738  0012D6                     	if	0	;tblptru may be non-zero
  1739  0012D6                     	endif
  1740  0012D6                     	if	0	;tblptru may be non-zero
  1741  0012D6                     	endif
  1742  0012D6  0008               	tblrd		*
  1743  0012D8  50F5               	movf	tablat,w,c
  1744  0012DA  0A69               	xorlw	105
  1745  0012DC  A4D8               	btfss	status,2,c
  1746  0012DE  EF73  F009         	goto	u1731
  1747  0012E2  EF75  F009         	goto	u1730
  1748  0012E6                     u1731:
  1749  0012E6  EFB5  F009         	goto	l2102
  1750  0012EA                     u1730:
  1751  0012EA                     l2096:
  1752                           
  1753                           ; BSR set to: 0
  1754                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 827:             
      +                          ++*fmt;
  1755  0012EA  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1756  0012EE  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1757  0012F2  2ADE               	incf	postinc2,f,c
  1758  0012F4  0E00               	movlw	0
  1759  0012F6  22DD               	addwfc	postdec2,f,c
  1760                           
  1761                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 828:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1762  0012F8  C048  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1763  0012FC  C049  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1764  001300  CFDF F04A          	movff	indf2,??_vfpfcnvrt
  1765  001304  0E02               	movlw	2
  1766  001306  26DE               	addwf	postinc2,f,c
  1767  001308  CFDF F04B          	movff	indf2,??_vfpfcnvrt+1
  1768  00130C  0E00               	movlw	0
  1769  00130E  22DD               	addwfc	postdec2,f,c
  1770  001310  C04A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1771  001314  C04B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1772  001318  CFDE F0B6          	movff	postinc2,vfpfcnvrt@ll
  1773  00131C  CFDD F0B7          	movff	postdec2,vfpfcnvrt@ll+1
  1774  001320  0E00               	movlw	0
  1775  001322  BFB7               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  1776  001324  0EFF               	movlw	-1
  1777  001326  6FB8               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  1778  001328  6FB9               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  1779  00132A  6FBA               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  1780  00132C  6FBB               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  1781  00132E  6FBC               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  1782  001330  6FBD               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  1783  001332                     
  1784                           ; BSR set to: 0
  1785                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 830:             
      +                          return dtoa(fp, ll);
  1786  001332  C044  F01D         	movff	vfpfcnvrt@fp,dtoa@fp
  1787  001336  C045  F01E         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1788  00133A  C0B6  F01F         	movff	vfpfcnvrt@ll,dtoa@d
  1789  00133E  C0B7  F020         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1790  001342  C0B8  F021         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1791  001346  C0B9  F022         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1792  00134A  C0BA  F023         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1793  00134E  C0BB  F024         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1794  001352  C0BC  F025         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1795  001356  C0BD  F026         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1796  00135A  EC50  F006         	call	_dtoa	;wreg free
  1797  00135E  C01D  F044         	movff	?_dtoa,?_vfpfcnvrt
  1798  001362  C01E  F045         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1799  001366  EF78  F00A         	goto	l959
  1800  00136A                     l2102:
  1801                           
  1802                           ; BSR set to: 0
  1803                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1274:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  1804  00136A  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1805  00136E  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1806  001372  CFDE FFF6          	movff	postinc2,tblptrl
  1807  001376  CFDD FFF7          	movff	postdec2,tblptrh
  1808  00137A                     	if	0	;tblptru may be non-zero
  1809  00137A                     	endif
  1810  00137A                     	if	0	;tblptru may be non-zero
  1811  00137A                     	endif
  1812  00137A  0008               	tblrd		*
  1813  00137C  50F5               	movf	tablat,w,c
  1814  00137E  0A78               	xorlw	120
  1815  001380  B4D8               	btfsc	status,2,c
  1816  001382  EFC5  F009         	goto	u1741
  1817  001386  EFC7  F009         	goto	u1740
  1818  00138A                     u1741:
  1819  00138A  EFD9  F009         	goto	l2106
  1820  00138E                     u1740:
  1821  00138E                     
  1822                           ; BSR set to: 0
  1823  00138E  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1824  001392  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1825  001396  CFDE FFF6          	movff	postinc2,tblptrl
  1826  00139A  CFDD FFF7          	movff	postdec2,tblptrh
  1827  00139E                     	if	0	;tblptru may be non-zero
  1828  00139E                     	endif
  1829  00139E                     	if	0	;tblptru may be non-zero
  1830  00139E                     	endif
  1831  00139E  0008               	tblrd		*
  1832  0013A0  50F5               	movf	tablat,w,c
  1833  0013A2  0A58               	xorlw	88
  1834  0013A4  A4D8               	btfss	status,2,c
  1835  0013A6  EFD7  F009         	goto	u1751
  1836  0013AA  EFD9  F009         	goto	u1750
  1837  0013AE                     u1751:
  1838  0013AE  EF27  F00A         	goto	l2116
  1839  0013B2                     u1750:
  1840  0013B2                     l2106:
  1841                           
  1842                           ; BSR set to: 0
  1843                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1276:            
      +                           c = (*fmt)[0];
  1844  0013B2  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1845  0013B6  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1846  0013BA  CFDE FFF6          	movff	postinc2,tblptrl
  1847  0013BE  CFDD FFF7          	movff	postdec2,tblptrh
  1848  0013C2                     	if	0	;tblptru may be non-zero
  1849  0013C2                     	endif
  1850  0013C2                     	if	0	;tblptru may be non-zero
  1851  0013C2                     	endif
  1852  0013C2  0008               	tblrd		*
  1853  0013C4  CFF5 F0C6          	movff	tablat,vfpfcnvrt@c
  1854  0013C8                     
  1855                           ; BSR set to: 0
  1856                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1277:            
      +                           ++*fmt;
  1857  0013C8  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1858  0013CC  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1859  0013D0  2ADE               	incf	postinc2,f,c
  1860  0013D2  0E00               	movlw	0
  1861  0013D4  22DD               	addwfc	postdec2,f,c
  1862  0013D6                     
  1863                           ; BSR set to: 0
  1864                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1278:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
  1865  0013D6  C048  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1866  0013DA  C049  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1867  0013DE  CFDF F04A          	movff	indf2,??_vfpfcnvrt
  1868  0013E2  0E02               	movlw	2
  1869  0013E4  26DE               	addwf	postinc2,f,c
  1870  0013E6  CFDF F04B          	movff	indf2,??_vfpfcnvrt+1
  1871  0013EA  0E00               	movlw	0
  1872  0013EC  22DD               	addwfc	postdec2,f,c
  1873  0013EE  C04A  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1874  0013F2  C04B  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1875  0013F6  CFDE F04C          	movff	postinc2,??_vfpfcnvrt+2
  1876  0013FA  CFDD F04D          	movff	postdec2,??_vfpfcnvrt+3
  1877  0013FE  C04C  F0BE         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  1878  001402  C04D  F0BF         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  1879  001406  6BC0               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
  1880  001408  6BC1               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
  1881  00140A  6BC2               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
  1882  00140C  6BC3               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
  1883  00140E  6BC4               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
  1884  001410  6BC5               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
  1885  001412                     
  1886                           ; BSR set to: 0
  1887                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1280:            
      +                           return xtoa(fp, llu, c);
  1888  001412  C044  F01D         	movff	vfpfcnvrt@fp,xtoa@fp
  1889  001416  C045  F01E         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  1890  00141A  C0BE  F01F         	movff	vfpfcnvrt@llu,xtoa@d
  1891  00141E  C0BF  F020         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  1892  001422  C0C0  F021         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  1893  001426  C0C1  F022         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  1894  00142A  C0C2  F023         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  1895  00142E  C0C3  F024         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  1896  001432  C0C4  F025         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  1897  001436  C0C5  F026         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  1898  00143A  C0C6  F027         	movff	vfpfcnvrt@c,xtoa@x
  1899  00143E  ECC1  F007         	call	_xtoa	;wreg free
  1900  001442  C01D  F044         	movff	?_xtoa,?_vfpfcnvrt
  1901  001446  C01E  F045         	movff	?_xtoa+1,?_vfpfcnvrt+1
  1902  00144A  EF78  F00A         	goto	l959
  1903  00144E                     l2116:
  1904                           
  1905                           ; BSR set to: 0
  1906                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if 
      +                          ((*fmt)[0] == '%') {
  1907  00144E  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1908  001452  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1909  001456  CFDE FFF6          	movff	postinc2,tblptrl
  1910  00145A  CFDD FFF7          	movff	postdec2,tblptrh
  1911  00145E                     	if	0	;tblptru may be non-zero
  1912  00145E                     	endif
  1913  00145E                     	if	0	;tblptru may be non-zero
  1914  00145E                     	endif
  1915  00145E  0008               	tblrd		*
  1916  001460  50F5               	movf	tablat,w,c
  1917  001462  0A25               	xorlw	37
  1918  001464  A4D8               	btfss	status,2,c
  1919  001466  EF37  F00A         	goto	u1761
  1920  00146A  EF39  F00A         	goto	u1760
  1921  00146E                     u1761:
  1922  00146E  EF50  F00A         	goto	l2126
  1923  001472                     u1760:
  1924  001472                     
  1925                           ; BSR set to: 0
  1926                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:            
      +                           ++*fmt;
  1927  001472  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1928  001476  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1929  00147A  2ADE               	incf	postinc2,f,c
  1930  00147C  0E00               	movlw	0
  1931  00147E  22DD               	addwfc	postdec2,f,c
  1932  001480                     
  1933                           ; BSR set to: 0
  1934                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:            
      +                           fputc((int)'%', fp);
  1935  001480  0E00               	movlw	0
  1936  001482  6E03               	movwf	(fputc@c+1)^0,c
  1937  001484  0E25               	movlw	37
  1938  001486  6E02               	movwf	fputc@c^0,c
  1939  001488  C044  F004         	movff	vfpfcnvrt@fp,fputc@fp
  1940  00148C  C045  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1941  001490  ECE4  F00C         	call	_fputc	;wreg free
  1942  001494                     l2122:
  1943                           
  1944                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:            
      +                           return 1;
  1945  001494  0E00               	movlw	0
  1946  001496  6E45               	movwf	(?_vfpfcnvrt+1)^0,c
  1947  001498  0E01               	movlw	1
  1948  00149A  6E44               	movwf	?_vfpfcnvrt^0,c
  1949  00149C  EF78  F00A         	goto	l959
  1950  0014A0                     l2126:
  1951                           
  1952                           ; BSR set to: 0
  1953                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*
      +                          fmt;
  1954  0014A0  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1955  0014A4  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1956  0014A8  2ADE               	incf	postinc2,f,c
  1957  0014AA  0E00               	movlw	0
  1958  0014AC  22DD               	addwfc	postdec2,f,c
  1959  0014AE                     
  1960                           ; BSR set to: 0
  1961                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1358:         ret
      +                          urn 0;
  1962  0014AE  0E00               	movlw	0
  1963  0014B0  6E45               	movwf	(?_vfpfcnvrt+1)^0,c
  1964  0014B2  0E00               	movlw	0
  1965  0014B4  6E44               	movwf	?_vfpfcnvrt^0,c
  1966  0014B6  EF78  F00A         	goto	l959
  1967  0014BA                     l2132:
  1968                           
  1969                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((
      +                          int)(*fmt)[0], fp);
  1970  0014BA  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1971  0014BE  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1972  0014C2  CFDE FFF6          	movff	postinc2,tblptrl
  1973  0014C6  CFDD FFF7          	movff	postdec2,tblptrh
  1974  0014CA                     	if	0	;tblptru may be non-zero
  1975  0014CA                     	endif
  1976  0014CA                     	if	0	;tblptru may be non-zero
  1977  0014CA                     	endif
  1978  0014CA  0008               	tblrd		*
  1979  0014CC  50F5               	movf	tablat,w,c
  1980  0014CE  6E02               	movwf	fputc@c^0,c
  1981  0014D0  6A03               	clrf	(fputc@c+1)^0,c
  1982  0014D2  C044  F004         	movff	vfpfcnvrt@fp,fputc@fp
  1983  0014D6  C045  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1984  0014DA  ECE4  F00C         	call	_fputc	;wreg free
  1985  0014DE                     
  1986                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  1987  0014DE  C046  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1988  0014E2  C047  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1989  0014E6  2ADE               	incf	postinc2,f,c
  1990  0014E8  0E00               	movlw	0
  1991  0014EA  22DD               	addwfc	postdec2,f,c
  1992  0014EC  EF4A  F00A         	goto	l2122
  1993  0014F0                     l959:
  1994  0014F0  0012               	return		;funcret
  1995  0014F2                     __end_of_vfpfcnvrt:
  1996                           	callstack 0
  1997                           
  1998 ;; *************** function _xtoa *****************
  1999 ;; Defined at:
  2000 ;;		line 623 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  2001 ;; Parameters:    Size  Location     Type
  2002 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
  2003 ;;		 -> sprintf@f(6), 
  2004 ;;  d               8   30[COMRAM] unsigned long long 
  2005 ;;  x               1   38[COMRAM] unsigned char 
  2006 ;; Auto vars:     Size  Location     Type
  2007 ;;  n               8   55[COMRAM] unsigned long long 
  2008 ;;  c               2   65[COMRAM] int 
  2009 ;;  i               2   63[COMRAM] int 
  2010 ;;  w               2   53[COMRAM] int 
  2011 ;;  p               2   51[COMRAM] int 
  2012 ;; Return value:  Size  Location     Type
  2013 ;;                  2   28[COMRAM] int 
  2014 ;; Registers used:
  2015 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2016 ;; Tracked objects:
  2017 ;;		On entry : 0/0
  2018 ;;		On exit  : 0/0
  2019 ;;		Unchanged: 0/0
  2020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2021 ;;      Params:        11       0       0       0       0       0       0       0       0
  2022 ;;      Locals:        20       0       0       0       0       0       0       0       0
  2023 ;;      Temps:          8       0       0       0       0       0       0       0       0
  2024 ;;      Totals:        39       0       0       0       0       0       0       0       0
  2025 ;;Total ram usage:       39 bytes
  2026 ;; Hardware stack levels used:    1
  2027 ;; Hardware stack levels required when called:    5
  2028 ;; This function calls:
  2029 ;;		_isalpha
  2030 ;;		_isupper
  2031 ;;		_pad
  2032 ;;		_toupper
  2033 ;; This function is called by:
  2034 ;;		_vfpfcnvrt
  2035 ;; This function uses a non-reentrant model
  2036 ;;
  2037                           
  2038                           	psect	text4
  2039  000F82                     __ptext4:
  2040                           	callstack 0
  2041  000F82                     _xtoa:
  2042                           	callstack 22
  2043  000F82                     
  2044                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 623: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 624: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 625:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources
      +                          \c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0)) {
  2045  000F82  0100               	movlb	0	; () banked
  2046  000F84  BF65               	btfsc	(_prec+1)& (0+255),7,b
  2047  000F86  EFC7  F007         	goto	u1541
  2048  000F8A  EFC9  F007         	goto	u1540
  2049  000F8E                     u1541:
  2050  000F8E  EFCA  F007         	goto	l2022
  2051  000F92                     u1540:
  2052  000F92                     
  2053                           ; BSR set to: 0
  2054                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 630:         flag
      +                          s &= ~(1 << 1);
  2055  000F92  9366               	bcf	_flags& (0+255),1,b
  2056  000F94                     l2022:
  2057                           
  2058                           ; BSR set to: 0
  2059                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 632:     p = (0 <
      +                           prec) ? prec : 1;
  2060  000F94  BF65               	btfsc	(_prec+1)& (0+255),7,b
  2061  000F96  EFD7  F007         	goto	u1550
  2062  000F9A  5165               	movf	(_prec+1)& (0+255),w,b
  2063  000F9C  E106               	bnz	u1551
  2064  000F9E  0564               	decf	_prec& (0+255),w,b
  2065  000FA0  B0D8               	btfsc	status,0,c
  2066  000FA2  EFD5  F007         	goto	u1551
  2067  000FA6  EFD7  F007         	goto	u1550
  2068  000FAA                     u1551:
  2069  000FAA  EFDD  F007         	goto	l927
  2070  000FAE                     u1550:
  2071  000FAE                     
  2072                           ; BSR set to: 0
  2073  000FAE  0E00               	movlw	0
  2074  000FB0  6E35               	movwf	(xtoa@p+1)^0,c
  2075  000FB2  0E01               	movlw	1
  2076  000FB4  6E34               	movwf	xtoa@p^0,c
  2077  000FB6  EFE1  F007         	goto	l929
  2078  000FBA                     l927:
  2079                           
  2080                           ; BSR set to: 0
  2081  000FBA  C064  F034         	movff	_prec,xtoa@p
  2082  000FBE  C065  F035         	movff	_prec+1,xtoa@p+1
  2083  000FC2                     l929:
  2084                           
  2085                           ; BSR set to: 0
  2086                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 633:     w = widt
      +                          h;
  2087  000FC2  C062  F036         	movff	_width,xtoa@w
  2088  000FC6  C063  F037         	movff	_width+1,xtoa@w+1
  2089                           
  2090                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 634:     if (flag
      +                          s & (1 << 4)) {
  2091  000FCA  A966               	btfss	_flags& (0+255),4,b
  2092  000FCC  EFEA  F007         	goto	u1561
  2093  000FD0  EFEC  F007         	goto	u1560
  2094  000FD4                     u1561:
  2095  000FD4  EFF0  F007         	goto	l2028
  2096  000FD8                     u1560:
  2097  000FD8                     
  2098                           ; BSR set to: 0
  2099                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 635:         w -=
      +                           2;
  2100  000FD8  0EFE               	movlw	254
  2101  000FDA  2636               	addwf	xtoa@w^0,f,c
  2102  000FDC  0EFF               	movlw	255
  2103  000FDE  2237               	addwfc	(xtoa@w+1)^0,f,c
  2104  000FE0                     l2028:
  2105                           
  2106                           ; BSR set to: 0
  2107                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 639:     n = d;
  2108  000FE0  C01F  F038         	movff	xtoa@d,xtoa@n
  2109  000FE4  C020  F039         	movff	xtoa@d+1,xtoa@n+1
  2110  000FE8  C021  F03A         	movff	xtoa@d+2,xtoa@n+2
  2111  000FEC  C022  F03B         	movff	xtoa@d+3,xtoa@n+3
  2112  000FF0  C023  F03C         	movff	xtoa@d+4,xtoa@n+4
  2113  000FF4  C024  F03D         	movff	xtoa@d+5,xtoa@n+5
  2114  000FF8  C025  F03E         	movff	xtoa@d+6,xtoa@n+6
  2115  000FFC  C026  F03F         	movff	xtoa@d+7,xtoa@n+7
  2116  001000                     
  2117                           ; BSR set to: 0
  2118                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 640:     i = size
      +                          of(dbuf) - 1;
  2119  001000  0E00               	movlw	0
  2120  001002  6E41               	movwf	(xtoa@i+1)^0,c
  2121  001004  0E1F               	movlw	31
  2122  001006  6E40               	movwf	xtoa@i^0,c
  2123  001008                     
  2124                           ; BSR set to: 0
  2125                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 641:     dbuf[i] 
      +                          = '\0';
  2126  001008  0E00               	movlw	0
  2127  00100A  6F8B               	movwf	(_dbuf+31)& (0+255),b
  2128                           
  2129                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 642:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2130  00100C  EFBB  F008         	goto	l2064
  2131  001010                     l2034:
  2132                           
  2133                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 643:         --i;
  2134  001010  0640               	decf	xtoa@i^0,f,c
  2135  001012  A0D8               	btfss	status,0,c
  2136  001014  0641               	decf	(xtoa@i+1)^0,f,c
  2137  001016                     
  2138                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 644:         c = 
      +                          n & 0x0f;
  2139  001016  0E0F               	movlw	15
  2140  001018  1438               	andwf	xtoa@n^0,w,c
  2141  00101A  6E42               	movwf	xtoa@c^0,c
  2142  00101C  6A43               	clrf	(xtoa@c+1)^0,c
  2143  00101E                     
  2144                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 645:         c = 
      +                          (c < 10) ? '0' + c : 'a' + (c - 10);
  2145  00101E  BE43               	btfsc	(xtoa@c+1)^0,7,c
  2146  001020  EF1B  F008         	goto	u1571
  2147  001024  5043               	movf	(xtoa@c+1)^0,w,c
  2148  001026  E109               	bnz	u1570
  2149  001028  0E0A               	movlw	10
  2150  00102A  5C42               	subwf	xtoa@c^0,w,c
  2151  00102C  A0D8               	btfss	status,0,c
  2152  00102E  EF1B  F008         	goto	u1571
  2153  001032  EF1D  F008         	goto	u1570
  2154  001036                     u1571:
  2155  001036  EF25  F008         	goto	l2042
  2156  00103A                     u1570:
  2157  00103A  0E57               	movlw	87
  2158  00103C  2442               	addwf	xtoa@c^0,w,c
  2159  00103E  6E42               	movwf	xtoa@c^0,c
  2160  001040  0E00               	movlw	0
  2161  001042  2043               	addwfc	(xtoa@c+1)^0,w,c
  2162  001044  6E43               	movwf	(xtoa@c+1)^0,c
  2163  001046  EF2B  F008         	goto	l936
  2164  00104A                     l2042:
  2165  00104A  0E30               	movlw	48
  2166  00104C  2442               	addwf	xtoa@c^0,w,c
  2167  00104E  6E42               	movwf	xtoa@c^0,c
  2168  001050  0E00               	movlw	0
  2169  001052  2043               	addwfc	(xtoa@c+1)^0,w,c
  2170  001054  6E43               	movwf	(xtoa@c+1)^0,c
  2171  001056                     l936:
  2172  001056  0EBF               	movlw	191
  2173  001058  6E28               	movwf	??_xtoa^0,c
  2174  00105A  0EFF               	movlw	255
  2175  00105C  6E29               	movwf	(??_xtoa+1)^0,c
  2176  00105E  5027               	movf	xtoa@x^0,w,c
  2177  001060  6E2A               	movwf	(??_xtoa+2)^0,c
  2178  001062  6A2B               	clrf	(??_xtoa+3)^0,c
  2179  001064  5028               	movf	??_xtoa^0,w,c
  2180  001066  262A               	addwf	(??_xtoa+2)^0,f,c
  2181  001068  5029               	movf	(??_xtoa+1)^0,w,c
  2182  00106A  222B               	addwfc	(??_xtoa+3)^0,f,c
  2183  00106C  502B               	movf	(??_xtoa+3)^0,w,c
  2184  00106E  E10A               	bnz	u1580
  2185  001070  0E1A               	movlw	26
  2186  001072  5C2A               	subwf	(??_xtoa+2)^0,w,c
  2187  001074  A0D8               	btfss	status,0,c
  2188  001076  EF3F  F008         	goto	u1581
  2189  00107A  EF42  F008         	goto	u1580
  2190  00107E                     u1581:
  2191  00107E  0E01               	movlw	1
  2192  001080  EF43  F008         	goto	u1590
  2193  001084                     u1580:
  2194  001084  0E00               	movlw	0
  2195  001086                     u1590:
  2196  001086  6E30               	movwf	_xtoa$1303^0,c
  2197  001088  6A31               	clrf	(_xtoa$1303+1)^0,c
  2198  00108A  5030               	movf	_xtoa$1303^0,w,c
  2199  00108C  1031               	iorwf	(_xtoa$1303+1)^0,w,c
  2200  00108E  B4D8               	btfsc	status,2,c
  2201  001090  EF4C  F008         	goto	u1601
  2202  001094  EF4E  F008         	goto	u1600
  2203  001098                     u1601:
  2204  001098  EF7E  F008         	goto	l2056
  2205  00109C                     u1600:
  2206  00109C  0E9F               	movlw	159
  2207  00109E  6E28               	movwf	??_xtoa^0,c
  2208  0010A0  0EFF               	movlw	255
  2209  0010A2  6E29               	movwf	(??_xtoa+1)^0,c
  2210  0010A4  0E20               	movlw	32
  2211  0010A6  1042               	iorwf	xtoa@c^0,w,c
  2212  0010A8  6E2A               	movwf	(??_xtoa+2)^0,c
  2213  0010AA  0E00               	movlw	0
  2214  0010AC  1043               	iorwf	(xtoa@c+1)^0,w,c
  2215  0010AE  6E2B               	movwf	(??_xtoa+3)^0,c
  2216  0010B0  5028               	movf	??_xtoa^0,w,c
  2217  0010B2  262A               	addwf	(??_xtoa+2)^0,f,c
  2218  0010B4  5029               	movf	(??_xtoa+1)^0,w,c
  2219  0010B6  222B               	addwfc	(??_xtoa+3)^0,f,c
  2220  0010B8  502B               	movf	(??_xtoa+3)^0,w,c
  2221  0010BA  E10A               	bnz	u1610
  2222  0010BC  0E1A               	movlw	26
  2223  0010BE  5C2A               	subwf	(??_xtoa+2)^0,w,c
  2224  0010C0  A0D8               	btfss	status,0,c
  2225  0010C2  EF65  F008         	goto	u1611
  2226  0010C6  EF68  F008         	goto	u1610
  2227  0010CA                     u1611:
  2228  0010CA  0E01               	movlw	1
  2229  0010CC  EF69  F008         	goto	u1620
  2230  0010D0                     u1610:
  2231  0010D0  0E00               	movlw	0
  2232  0010D2                     u1620:
  2233  0010D2  6E32               	movwf	_xtoa$1304^0,c
  2234  0010D4  6A33               	clrf	(_xtoa$1304+1)^0,c
  2235  0010D6  5032               	movf	_xtoa$1304^0,w,c
  2236  0010D8  1033               	iorwf	(_xtoa$1304+1)^0,w,c
  2237  0010DA  B4D8               	btfsc	status,2,c
  2238  0010DC  EF72  F008         	goto	u1631
  2239  0010E0  EF74  F008         	goto	u1630
  2240  0010E4                     u1631:
  2241  0010E4  EF7E  F008         	goto	l2056
  2242  0010E8                     u1630:
  2243  0010E8                     
  2244                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 647:             
      +                          c = toupper(c);
  2245  0010E8  C042  F008         	movff	xtoa@c,toupper@c
  2246  0010EC  C043  F009         	movff	xtoa@c+1,toupper@c+1
  2247  0010F0  EC83  F00E         	call	_toupper	;wreg free
  2248  0010F4  C008  F042         	movff	?_toupper,xtoa@c
  2249  0010F8  C009  F043         	movff	?_toupper+1,xtoa@c+1
  2250  0010FC                     l2056:
  2251                           
  2252                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 649:         dbuf
      +                          [i] = (char)c;
  2253  0010FC  0E6C               	movlw	low _dbuf
  2254  0010FE  2440               	addwf	xtoa@i^0,w,c
  2255  001100  6ED9               	movwf	fsr2l,c
  2256  001102  0E00               	movlw	high _dbuf
  2257  001104  2041               	addwfc	(xtoa@i+1)^0,w,c
  2258  001106  6EDA               	movwf	fsr2h,c
  2259  001108  C042  FFDF         	movff	xtoa@c,indf2
  2260  00110C                     
  2261                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 650:         --p;
  2262  00110C  0634               	decf	xtoa@p^0,f,c
  2263  00110E  A0D8               	btfss	status,0,c
  2264  001110  0635               	decf	(xtoa@p+1)^0,f,c
  2265  001112                     
  2266                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 651:         --w;
  2267  001112  0636               	decf	xtoa@w^0,f,c
  2268  001114  A0D8               	btfss	status,0,c
  2269  001116  0637               	decf	(xtoa@w+1)^0,f,c
  2270  001118                     
  2271                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 652:         n = 
      +                          n >> 4;
  2272  001118  C038  F028         	movff	xtoa@n,??_xtoa
  2273  00111C  C039  F029         	movff	xtoa@n+1,??_xtoa+1
  2274  001120  C03A  F02A         	movff	xtoa@n+2,??_xtoa+2
  2275  001124  C03B  F02B         	movff	xtoa@n+3,??_xtoa+3
  2276  001128  C03C  F02C         	movff	xtoa@n+4,??_xtoa+4
  2277  00112C  C03D  F02D         	movff	xtoa@n+5,??_xtoa+5
  2278  001130  C03E  F02E         	movff	xtoa@n+6,??_xtoa+6
  2279  001134  C03F  F02F         	movff	xtoa@n+7,??_xtoa+7
  2280  001138  0E05               	movlw	5
  2281  00113A  EFA8  F008         	goto	u1640
  2282  00113E                     u1645:
  2283  00113E  90D8               	bcf	status,0,c
  2284  001140  322F               	rrcf	(??_xtoa+7)^0,f,c
  2285  001142  322E               	rrcf	(??_xtoa+6)^0,f,c
  2286  001144  322D               	rrcf	(??_xtoa+5)^0,f,c
  2287  001146  322C               	rrcf	(??_xtoa+4)^0,f,c
  2288  001148  322B               	rrcf	(??_xtoa+3)^0,f,c
  2289  00114A  322A               	rrcf	(??_xtoa+2)^0,f,c
  2290  00114C  3229               	rrcf	(??_xtoa+1)^0,f,c
  2291  00114E  3228               	rrcf	??_xtoa^0,f,c
  2292  001150                     u1640:
  2293  001150  2EE8               	decfsz	wreg,f,c
  2294  001152  EF9F  F008         	goto	u1645
  2295  001156  C028  F038         	movff	??_xtoa,xtoa@n
  2296  00115A  C029  F039         	movff	??_xtoa+1,xtoa@n+1
  2297  00115E  C02A  F03A         	movff	??_xtoa+2,xtoa@n+2
  2298  001162  C02B  F03B         	movff	??_xtoa+3,xtoa@n+3
  2299  001166  C02C  F03C         	movff	??_xtoa+4,xtoa@n+4
  2300  00116A  C02D  F03D         	movff	??_xtoa+5,xtoa@n+5
  2301  00116E  C02E  F03E         	movff	??_xtoa+6,xtoa@n+6
  2302  001172  C02F  F03F         	movff	??_xtoa+7,xtoa@n+7
  2303  001176                     l2064:
  2304                           
  2305                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 642:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2306  001176  BE41               	btfsc	(xtoa@i+1)^0,7,c
  2307  001178  EFC7  F008         	goto	u1651
  2308  00117C  5041               	movf	(xtoa@i+1)^0,w,c
  2309  00117E  E109               	bnz	u1650
  2310  001180  0E02               	movlw	2
  2311  001182  5C40               	subwf	xtoa@i^0,w,c
  2312  001184  A0D8               	btfss	status,0,c
  2313  001186  EFC7  F008         	goto	u1651
  2314  00118A  EFC9  F008         	goto	u1650
  2315  00118E                     u1651:
  2316  00118E  EFFA  F008         	goto	l950
  2317  001192                     u1650:
  2318  001192  5038               	movf	xtoa@n^0,w,c
  2319  001194  1039               	iorwf	(xtoa@n+1)^0,w,c
  2320  001196  103A               	iorwf	(xtoa@n+2)^0,w,c
  2321  001198  103B               	iorwf	(xtoa@n+3)^0,w,c
  2322  00119A  103C               	iorwf	(xtoa@n+4)^0,w,c
  2323  00119C  103D               	iorwf	(xtoa@n+5)^0,w,c
  2324  00119E  103E               	iorwf	(xtoa@n+6)^0,w,c
  2325  0011A0  103F               	iorwf	(xtoa@n+7)^0,w,c
  2326  0011A2  A4D8               	btfss	status,2,c
  2327  0011A4  EFD6  F008         	goto	u1661
  2328  0011A8  EFD8  F008         	goto	u1660
  2329  0011AC                     u1661:
  2330  0011AC  EF08  F008         	goto	l2034
  2331  0011B0                     u1660:
  2332  0011B0  BE35               	btfsc	(xtoa@p+1)^0,7,c
  2333  0011B2  EFE5  F008         	goto	u1670
  2334  0011B6  5035               	movf	(xtoa@p+1)^0,w,c
  2335  0011B8  E106               	bnz	u1671
  2336  0011BA  0434               	decf	xtoa@p^0,w,c
  2337  0011BC  B0D8               	btfsc	status,0,c
  2338  0011BE  EFE3  F008         	goto	u1671
  2339  0011C2  EFE5  F008         	goto	u1670
  2340  0011C6                     u1671:
  2341  0011C6  EF08  F008         	goto	l2034
  2342  0011CA                     u1670:
  2343  0011CA  BE37               	btfsc	(xtoa@w+1)^0,7,c
  2344  0011CC  EFF0  F008         	goto	u1681
  2345  0011D0  5037               	movf	(xtoa@w+1)^0,w,c
  2346  0011D2  E108               	bnz	u1680
  2347  0011D4  0436               	decf	xtoa@w^0,w,c
  2348  0011D6  A0D8               	btfss	status,0,c
  2349  0011D8  EFF0  F008         	goto	u1681
  2350  0011DC  EFF2  F008         	goto	u1680
  2351  0011E0                     u1681:
  2352  0011E0  EFFA  F008         	goto	l950
  2353  0011E4                     u1680:
  2354  0011E4  0100               	movlb	0	; () banked
  2355  0011E6  B366               	btfsc	_flags& (0+255),1,b
  2356  0011E8  EFF8  F008         	goto	u1691
  2357  0011EC  EFFA  F008         	goto	u1690
  2358  0011F0                     u1691:
  2359  0011F0  EF08  F008         	goto	l2034
  2360  0011F4                     u1690:
  2361  0011F4                     l950:
  2362                           
  2363                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
  2364  0011F4  0100               	movlb	0	; () banked
  2365  0011F6  A966               	btfss	_flags& (0+255),4,b
  2366  0011F8  EF00  F009         	goto	u1701
  2367  0011FC  EF02  F009         	goto	u1700
  2368  001200                     u1701:
  2369  001200  EF18  F009         	goto	l2080
  2370  001204                     u1700:
  2371  001204                     
  2372                           ; BSR set to: 0
  2373                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 657:         --i;
  2374  001204  0640               	decf	xtoa@i^0,f,c
  2375  001206  A0D8               	btfss	status,0,c
  2376  001208  0641               	decf	(xtoa@i+1)^0,f,c
  2377  00120A                     
  2378                           ; BSR set to: 0
  2379                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 658:         dbuf
      +                          [i] = x;
  2380  00120A  0E6C               	movlw	low _dbuf
  2381  00120C  2440               	addwf	xtoa@i^0,w,c
  2382  00120E  6ED9               	movwf	fsr2l,c
  2383  001210  0E00               	movlw	high _dbuf
  2384  001212  2041               	addwfc	(xtoa@i+1)^0,w,c
  2385  001214  6EDA               	movwf	fsr2h,c
  2386  001216  C027  FFDF         	movff	xtoa@x,indf2
  2387  00121A                     
  2388                           ; BSR set to: 0
  2389                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 659:         --i;
  2390  00121A  0640               	decf	xtoa@i^0,f,c
  2391  00121C  A0D8               	btfss	status,0,c
  2392  00121E  0641               	decf	(xtoa@i+1)^0,f,c
  2393                           
  2394                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 660:         dbuf
      +                          [i] = '0';
  2395  001220  0E6C               	movlw	low _dbuf
  2396  001222  2440               	addwf	xtoa@i^0,w,c
  2397  001224  6ED9               	movwf	fsr2l,c
  2398  001226  0E00               	movlw	high _dbuf
  2399  001228  2041               	addwfc	(xtoa@i+1)^0,w,c
  2400  00122A  6EDA               	movwf	fsr2h,c
  2401  00122C  0E30               	movlw	48
  2402  00122E  6EDF               	movwf	indf2,c
  2403  001230                     l2080:
  2404                           
  2405                           ; BSR set to: 0
  2406                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 664:     return p
      +                          ad(fp, &dbuf[i], w);
  2407  001230  C01D  F012         	movff	xtoa@fp,pad@fp
  2408  001234  C01E  F013         	movff	xtoa@fp+1,pad@fp+1
  2409  001238  0E6C               	movlw	low _dbuf
  2410  00123A  2440               	addwf	xtoa@i^0,w,c
  2411  00123C  6E14               	movwf	pad@buf^0,c
  2412  00123E  0E00               	movlw	high _dbuf
  2413  001240  2041               	addwfc	(xtoa@i+1)^0,w,c
  2414  001242  6E15               	movwf	(pad@buf+1)^0,c
  2415  001244  C036  F016         	movff	xtoa@w,pad@p
  2416  001248  C037  F017         	movff	xtoa@w+1,pad@p+1
  2417  00124C  EC49  F00D         	call	_pad	;wreg free
  2418  001250  C012  F01D         	movff	?_pad,?_xtoa
  2419  001254  C013  F01E         	movff	?_pad+1,?_xtoa+1
  2420  001258  0012               	return		;funcret
  2421  00125A                     __end_of_xtoa:
  2422                           	callstack 0
  2423                           
  2424 ;; *************** function _toupper *****************
  2425 ;; Defined at:
  2426 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\toupper.c"
  2427 ;; Parameters:    Size  Location     Type
  2428 ;;  c               2    7[COMRAM] int 
  2429 ;; Auto vars:     Size  Location     Type
  2430 ;;		None
  2431 ;; Return value:  Size  Location     Type
  2432 ;;                  2    7[COMRAM] int 
  2433 ;; Registers used:
  2434 ;;		wreg, status,2, status,0
  2435 ;; Tracked objects:
  2436 ;;		On entry : 0/0
  2437 ;;		On exit  : 0/0
  2438 ;;		Unchanged: 0/0
  2439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2440 ;;      Params:         2       0       0       0       0       0       0       0       0
  2441 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2442 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2443 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2444 ;;Total ram usage:        8 bytes
  2445 ;; Hardware stack levels used:    1
  2446 ;; Hardware stack levels required when called:    2
  2447 ;; This function calls:
  2448 ;;		_islower
  2449 ;; This function is called by:
  2450 ;;		_xtoa
  2451 ;; This function uses a non-reentrant model
  2452 ;;
  2453                           
  2454                           	psect	text5
  2455  001D06                     __ptext5:
  2456                           	callstack 0
  2457  001D06                     _toupper:
  2458                           	callstack 24
  2459  001D06  0E9F               	movlw	159
  2460  001D08  6E0A               	movwf	??_toupper^0,c
  2461  001D0A  0EFF               	movlw	255
  2462  001D0C  6E0B               	movwf	(??_toupper+1)^0,c
  2463  001D0E  C008  F00C         	movff	toupper@c,??_toupper+2
  2464  001D12  C009  F00D         	movff	toupper@c+1,??_toupper+3
  2465  001D16  500A               	movf	??_toupper^0,w,c
  2466  001D18  260C               	addwf	(??_toupper+2)^0,f,c
  2467  001D1A  500B               	movf	(??_toupper+1)^0,w,c
  2468  001D1C  220D               	addwfc	(??_toupper+3)^0,f,c
  2469  001D1E  500D               	movf	(??_toupper+3)^0,w,c
  2470  001D20  E10A               	bnz	u1360
  2471  001D22  0E1A               	movlw	26
  2472  001D24  5C0C               	subwf	(??_toupper+2)^0,w,c
  2473  001D26  A0D8               	btfss	status,0,c
  2474  001D28  EF98  F00E         	goto	u1361
  2475  001D2C  EF9B  F00E         	goto	u1360
  2476  001D30                     u1361:
  2477  001D30  0E01               	movlw	1
  2478  001D32  EF9C  F00E         	goto	u1370
  2479  001D36                     u1360:
  2480  001D36  0E00               	movlw	0
  2481  001D38                     u1370:
  2482  001D38  6E0E               	movwf	_toupper$1388^0,c
  2483  001D3A  6A0F               	clrf	(_toupper$1388+1)^0,c
  2484  001D3C  500E               	movf	_toupper$1388^0,w,c
  2485  001D3E  100F               	iorwf	(_toupper$1388+1)^0,w,c
  2486  001D40  B4D8               	btfsc	status,2,c
  2487  001D42  EFA5  F00E         	goto	u1381
  2488  001D46  EFA7  F00E         	goto	u1380
  2489  001D4A                     u1381:
  2490  001D4A  EFAD  F00E         	goto	l1022
  2491  001D4E                     u1380:
  2492  001D4E  0E5F               	movlw	95
  2493  001D50  1408               	andwf	toupper@c^0,w,c
  2494  001D52  6E08               	movwf	?_toupper^0,c
  2495  001D54  6A09               	clrf	(?_toupper+1)^0,c
  2496  001D56  EFB1  F00E         	goto	l1027
  2497  001D5A                     l1022:
  2498  001D5A  C008  F008         	movff	toupper@c,?_toupper
  2499  001D5E  C009  F009         	movff	toupper@c+1,?_toupper+1
  2500  001D62                     l1027:
  2501  001D62  0012               	return		;funcret
  2502  001D64                     __end_of_toupper:
  2503                           	callstack 0
  2504                           
  2505 ;; *************** function _islower *****************
  2506 ;; Defined at:
  2507 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\islower.c"
  2508 ;; Parameters:    Size  Location     Type
  2509 ;;  c               2    1[COMRAM] int 
  2510 ;; Auto vars:     Size  Location     Type
  2511 ;;		None
  2512 ;; Return value:  Size  Location     Type
  2513 ;;                  2    1[COMRAM] int 
  2514 ;; Registers used:
  2515 ;;		wreg, status,2, status,0
  2516 ;; Tracked objects:
  2517 ;;		On entry : 0/0
  2518 ;;		On exit  : 0/0
  2519 ;;		Unchanged: 0/0
  2520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2521 ;;      Params:         2       0       0       0       0       0       0       0       0
  2522 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2523 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2524 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2525 ;;Total ram usage:        6 bytes
  2526 ;; Hardware stack levels used:    1
  2527 ;; Hardware stack levels required when called:    1
  2528 ;; This function calls:
  2529 ;;		Nothing
  2530 ;; This function is called by:
  2531 ;;		_toupper
  2532 ;; This function uses a non-reentrant model
  2533 ;;
  2534                           
  2535                           	psect	text6
  2536  001FE0                     __ptext6:
  2537                           	callstack 0
  2538  001FE0                     _islower:
  2539                           	callstack 24
  2540  001FE0  0E9F               	movlw	159
  2541  001FE2  6E04               	movwf	??_islower^0,c
  2542  001FE4  0EFF               	movlw	255
  2543  001FE6  6E05               	movwf	(??_islower+1)^0,c
  2544  001FE8  C002  F006         	movff	islower@c,??_islower+2
  2545  001FEC  C003  F007         	movff	islower@c+1,??_islower+3
  2546  001FF0  5004               	movf	??_islower^0,w,c
  2547  001FF2  2606               	addwf	(??_islower+2)^0,f,c
  2548  001FF4  5005               	movf	(??_islower+1)^0,w,c
  2549  001FF6  2207               	addwfc	(??_islower+3)^0,f,c
  2550  001FF8  5007               	movf	(??_islower+3)^0,w,c
  2551  001FFA  E10A               	bnz	u1120
  2552  001FFC  0E1A               	movlw	26
  2553  001FFE  5C06               	subwf	(??_islower+2)^0,w,c
  2554  002000  A0D8               	btfss	status,0,c
  2555  002002  EF05  F010         	goto	u1121
  2556  002006  EF08  F010         	goto	u1120
  2557  00200A                     u1121:
  2558  00200A  0E01               	movlw	1
  2559  00200C  EF09  F010         	goto	u1130
  2560  002010                     u1120:
  2561  002010  0E00               	movlw	0
  2562  002012                     u1130:
  2563  002012  6E02               	movwf	?_islower^0,c
  2564  002014  6A03               	clrf	(?_islower+1)^0,c
  2565  002016  0012               	return		;funcret
  2566  002018                     __end_of_islower:
  2567                           	callstack 0
  2568                           
  2569 ;; *************** function _isupper *****************
  2570 ;; Defined at:
  2571 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isupper.c"
  2572 ;; Parameters:    Size  Location     Type
  2573 ;;  c               2    1[COMRAM] int 
  2574 ;; Auto vars:     Size  Location     Type
  2575 ;;		None
  2576 ;; Return value:  Size  Location     Type
  2577 ;;                  2    1[COMRAM] int 
  2578 ;; Registers used:
  2579 ;;		wreg, status,2, status,0
  2580 ;; Tracked objects:
  2581 ;;		On entry : 0/0
  2582 ;;		On exit  : 0/0
  2583 ;;		Unchanged: 0/0
  2584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2585 ;;      Params:         2       0       0       0       0       0       0       0       0
  2586 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2587 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2588 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2589 ;;Total ram usage:        6 bytes
  2590 ;; Hardware stack levels used:    1
  2591 ;; Hardware stack levels required when called:    1
  2592 ;; This function calls:
  2593 ;;		Nothing
  2594 ;; This function is called by:
  2595 ;;		_xtoa
  2596 ;; This function uses a non-reentrant model
  2597 ;;
  2598                           
  2599                           	psect	text7
  2600  002018                     __ptext7:
  2601                           	callstack 0
  2602  002018                     _isupper:
  2603                           	callstack 25
  2604  002018  0EBF               	movlw	191
  2605  00201A  6E04               	movwf	??_isupper^0,c
  2606  00201C  0EFF               	movlw	255
  2607  00201E  6E05               	movwf	(??_isupper+1)^0,c
  2608  002020  C002  F006         	movff	isupper@c,??_isupper+2
  2609  002024  C003  F007         	movff	isupper@c+1,??_isupper+3
  2610  002028  5004               	movf	??_isupper^0,w,c
  2611  00202A  2606               	addwf	(??_isupper+2)^0,f,c
  2612  00202C  5005               	movf	(??_isupper+1)^0,w,c
  2613  00202E  2207               	addwfc	(??_isupper+3)^0,f,c
  2614  002030  5007               	movf	(??_isupper+3)^0,w,c
  2615  002032  E10A               	bnz	u1320
  2616  002034  0E1A               	movlw	26
  2617  002036  5C06               	subwf	(??_isupper+2)^0,w,c
  2618  002038  A0D8               	btfss	status,0,c
  2619  00203A  EF21  F010         	goto	u1321
  2620  00203E  EF24  F010         	goto	u1320
  2621  002042                     u1321:
  2622  002042  0E01               	movlw	1
  2623  002044  EF25  F010         	goto	u1330
  2624  002048                     u1320:
  2625  002048  0E00               	movlw	0
  2626  00204A                     u1330:
  2627  00204A  6E02               	movwf	?_isupper^0,c
  2628  00204C  6A03               	clrf	(?_isupper+1)^0,c
  2629  00204E  0012               	return		;funcret
  2630  002050                     __end_of_isupper:
  2631                           	callstack 0
  2632                           
  2633 ;; *************** function _isalpha *****************
  2634 ;; Defined at:
  2635 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isalpha.c"
  2636 ;; Parameters:    Size  Location     Type
  2637 ;;  c               2    1[COMRAM] int 
  2638 ;; Auto vars:     Size  Location     Type
  2639 ;;		None
  2640 ;; Return value:  Size  Location     Type
  2641 ;;                  2    1[COMRAM] int 
  2642 ;; Registers used:
  2643 ;;		wreg, status,2, status,0
  2644 ;; Tracked objects:
  2645 ;;		On entry : 0/0
  2646 ;;		On exit  : 0/0
  2647 ;;		Unchanged: 0/0
  2648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2649 ;;      Params:         2       0       0       0       0       0       0       0       0
  2650 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2651 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2652 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2653 ;;Total ram usage:        6 bytes
  2654 ;; Hardware stack levels used:    1
  2655 ;; Hardware stack levels required when called:    1
  2656 ;; This function calls:
  2657 ;;		Nothing
  2658 ;; This function is called by:
  2659 ;;		_xtoa
  2660 ;; This function uses a non-reentrant model
  2661 ;;
  2662                           
  2663                           	psect	text8
  2664  001F68                     __ptext8:
  2665                           	callstack 0
  2666  001F68                     _isalpha:
  2667                           	callstack 25
  2668  001F68  0E9F               	movlw	159
  2669  001F6A  6E04               	movwf	??_isalpha^0,c
  2670  001F6C  0EFF               	movlw	255
  2671  001F6E  6E05               	movwf	(??_isalpha+1)^0,c
  2672  001F70  0E20               	movlw	32
  2673  001F72  1002               	iorwf	isalpha@c^0,w,c
  2674  001F74  6E06               	movwf	(??_isalpha+2)^0,c
  2675  001F76  0E00               	movlw	0
  2676  001F78  1003               	iorwf	(isalpha@c+1)^0,w,c
  2677  001F7A  6E07               	movwf	(??_isalpha+3)^0,c
  2678  001F7C  5004               	movf	??_isalpha^0,w,c
  2679  001F7E  2606               	addwf	(??_isalpha+2)^0,f,c
  2680  001F80  5005               	movf	(??_isalpha+1)^0,w,c
  2681  001F82  2207               	addwfc	(??_isalpha+3)^0,f,c
  2682  001F84  5007               	movf	(??_isalpha+3)^0,w,c
  2683  001F86  E10A               	bnz	u1340
  2684  001F88  0E1A               	movlw	26
  2685  001F8A  5C06               	subwf	(??_isalpha+2)^0,w,c
  2686  001F8C  A0D8               	btfss	status,0,c
  2687  001F8E  EFCB  F00F         	goto	u1341
  2688  001F92  EFCE  F00F         	goto	u1340
  2689  001F96                     u1341:
  2690  001F96  0E01               	movlw	1
  2691  001F98  EFCF  F00F         	goto	u1350
  2692  001F9C                     u1340:
  2693  001F9C  0E00               	movlw	0
  2694  001F9E                     u1350:
  2695  001F9E  6E02               	movwf	?_isalpha^0,c
  2696  001FA0  6A03               	clrf	(?_isalpha+1)^0,c
  2697  001FA2  0012               	return		;funcret
  2698  001FA4                     __end_of_isalpha:
  2699                           	callstack 0
  2700                           
  2701 ;; *************** function _dtoa *****************
  2702 ;; Defined at:
  2703 ;;		line 274 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  2704 ;; Parameters:    Size  Location     Type
  2705 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
  2706 ;;		 -> sprintf@f(6), 
  2707 ;;  d               8   30[COMRAM] long long 
  2708 ;; Auto vars:     Size  Location     Type
  2709 ;;  n               8   54[COMRAM] long long 
  2710 ;;  i               2   62[COMRAM] int 
  2711 ;;  s               2   52[COMRAM] int 
  2712 ;;  w               2   50[COMRAM] int 
  2713 ;;  p               2   48[COMRAM] int 
  2714 ;; Return value:  Size  Location     Type
  2715 ;;                  2   28[COMRAM] int 
  2716 ;; Registers used:
  2717 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2718 ;; Tracked objects:
  2719 ;;		On entry : 0/0
  2720 ;;		On exit  : 0/0
  2721 ;;		Unchanged: 0/0
  2722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2723 ;;      Params:        10       0       0       0       0       0       0       0       0
  2724 ;;      Locals:        18       0       0       0       0       0       0       0       0
  2725 ;;      Temps:          8       0       0       0       0       0       0       0       0
  2726 ;;      Totals:        36       0       0       0       0       0       0       0       0
  2727 ;;Total ram usage:       36 bytes
  2728 ;; Hardware stack levels used:    1
  2729 ;; Hardware stack levels required when called:    5
  2730 ;; This function calls:
  2731 ;;		___aodiv
  2732 ;;		___aomod
  2733 ;;		_abs
  2734 ;;		_pad
  2735 ;; This function is called by:
  2736 ;;		_vfpfcnvrt
  2737 ;; This function uses a non-reentrant model
  2738 ;;
  2739                           
  2740                           	psect	text9
  2741  000CA0                     __ptext9:
  2742                           	callstack 0
  2743  000CA0                     _dtoa:
  2744                           	callstack 22
  2745  000CA0                     
  2746                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 274: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 275: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 27
      +                          6:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 277:     long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 280:     n = d;
  2747  000CA0  C01F  F037         	movff	dtoa@d,dtoa@n
  2748  000CA4  C020  F038         	movff	dtoa@d+1,dtoa@n+1
  2749  000CA8  C021  F039         	movff	dtoa@d+2,dtoa@n+2
  2750  000CAC  C022  F03A         	movff	dtoa@d+3,dtoa@n+3
  2751  000CB0  C023  F03B         	movff	dtoa@d+4,dtoa@n+4
  2752  000CB4  C024  F03C         	movff	dtoa@d+5,dtoa@n+5
  2753  000CB8  C025  F03D         	movff	dtoa@d+6,dtoa@n+6
  2754  000CBC  C026  F03E         	movff	dtoa@d+7,dtoa@n+7
  2755  000CC0                     
  2756                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 281:     s = n < 
      +                          0 ? 1 : 0;
  2757  000CC0  BE3E               	btfsc	(dtoa@n+7)^0,7,c
  2758  000CC2  EF65  F006         	goto	u1391
  2759  000CC6  EF68  F006         	goto	u1390
  2760  000CCA                     u1391:
  2761  000CCA  0E01               	movlw	1
  2762  000CCC  EF69  F006         	goto	u1400
  2763  000CD0                     u1390:
  2764  000CD0  0E00               	movlw	0
  2765  000CD2                     u1400:
  2766  000CD2  6E35               	movwf	dtoa@s^0,c
  2767  000CD4  6A36               	clrf	(dtoa@s+1)^0,c
  2768                           
  2769                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 282:     if (s) {
  2770  000CD6  5035               	movf	dtoa@s^0,w,c
  2771  000CD8  1036               	iorwf	(dtoa@s+1)^0,w,c
  2772  000CDA  B4D8               	btfsc	status,2,c
  2773  000CDC  EF72  F006         	goto	u1411
  2774  000CE0  EF74  F006         	goto	u1410
  2775  000CE4                     u1411:
  2776  000CE4  EF84  F006         	goto	l1962
  2777  000CE8                     u1410:
  2778  000CE8                     
  2779                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 283:         n = 
      +                          -n;
  2780  000CE8  1E3E               	comf	(dtoa@n+7)^0,f,c
  2781  000CEA  1E3D               	comf	(dtoa@n+6)^0,f,c
  2782  000CEC  1E3C               	comf	(dtoa@n+5)^0,f,c
  2783  000CEE  1E3B               	comf	(dtoa@n+4)^0,f,c
  2784  000CF0  1E3A               	comf	(dtoa@n+3)^0,f,c
  2785  000CF2  1E39               	comf	(dtoa@n+2)^0,f,c
  2786  000CF4  1E38               	comf	(dtoa@n+1)^0,f,c
  2787  000CF6  6C37               	negf	dtoa@n^0,c
  2788  000CF8  0E00               	movlw	0
  2789  000CFA  2238               	addwfc	(dtoa@n+1)^0,f,c
  2790  000CFC  2239               	addwfc	(dtoa@n+2)^0,f,c
  2791  000CFE  223A               	addwfc	(dtoa@n+3)^0,f,c
  2792  000D00  223B               	addwfc	(dtoa@n+4)^0,f,c
  2793  000D02  223C               	addwfc	(dtoa@n+5)^0,f,c
  2794  000D04  223D               	addwfc	(dtoa@n+6)^0,f,c
  2795  000D06  223E               	addwfc	(dtoa@n+7)^0,f,c
  2796  000D08                     l1962:
  2797                           
  2798                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 287:     if (!(pr
      +                          ec < 0)) {
  2799  000D08  0100               	movlb	0	; () banked
  2800  000D0A  BF65               	btfsc	(_prec+1)& (0+255),7,b
  2801  000D0C  EF8A  F006         	goto	u1421
  2802  000D10  EF8C  F006         	goto	u1420
  2803  000D14                     u1421:
  2804  000D14  EF8D  F006         	goto	l1966
  2805  000D18                     u1420:
  2806  000D18                     
  2807                           ; BSR set to: 0
  2808                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 288:         flag
      +                          s &= ~(1 << 1);
  2809  000D18  9366               	bcf	_flags& (0+255),1,b
  2810  000D1A                     l1966:
  2811                           
  2812                           ; BSR set to: 0
  2813                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 290:     p = (0 <
      +                           prec) ? prec : 1;
  2814  000D1A  BF65               	btfsc	(_prec+1)& (0+255),7,b
  2815  000D1C  EF9A  F006         	goto	u1430
  2816  000D20  5165               	movf	(_prec+1)& (0+255),w,b
  2817  000D22  E106               	bnz	u1431
  2818  000D24  0564               	decf	_prec& (0+255),w,b
  2819  000D26  B0D8               	btfsc	status,0,c
  2820  000D28  EF98  F006         	goto	u1431
  2821  000D2C  EF9A  F006         	goto	u1430
  2822  000D30                     u1431:
  2823  000D30  EFA0  F006         	goto	l902
  2824  000D34                     u1430:
  2825  000D34                     
  2826                           ; BSR set to: 0
  2827  000D34  0E00               	movlw	0
  2828  000D36  6E32               	movwf	(dtoa@p+1)^0,c
  2829  000D38  0E01               	movlw	1
  2830  000D3A  6E31               	movwf	dtoa@p^0,c
  2831  000D3C  EFA4  F006         	goto	l904
  2832  000D40                     l902:
  2833                           
  2834                           ; BSR set to: 0
  2835  000D40  C064  F031         	movff	_prec,dtoa@p
  2836  000D44  C065  F032         	movff	_prec+1,dtoa@p+1
  2837  000D48                     l904:
  2838                           
  2839                           ; BSR set to: 0
  2840                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 291:     w = widt
      +                          h;
  2841  000D48  C062  F033         	movff	_width,dtoa@w
  2842  000D4C  C063  F034         	movff	_width+1,dtoa@w+1
  2843  000D50                     
  2844                           ; BSR set to: 0
  2845                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 292:     if (s ||
      +                           (flags & (1 << 2))) {
  2846  000D50  5035               	movf	dtoa@s^0,w,c
  2847  000D52  1036               	iorwf	(dtoa@s+1)^0,w,c
  2848  000D54  A4D8               	btfss	status,2,c
  2849  000D56  EFAF  F006         	goto	u1441
  2850  000D5A  EFB1  F006         	goto	u1440
  2851  000D5E                     u1441:
  2852  000D5E  EFB8  F006         	goto	l1974
  2853  000D62                     u1440:
  2854  000D62                     
  2855                           ; BSR set to: 0
  2856  000D62  A566               	btfss	_flags& (0+255),2,b
  2857  000D64  EFB6  F006         	goto	u1451
  2858  000D68  EFB8  F006         	goto	u1450
  2859  000D6C                     u1451:
  2860  000D6C  EFBB  F006         	goto	l1976
  2861  000D70                     u1450:
  2862  000D70                     l1974:
  2863                           
  2864                           ; BSR set to: 0
  2865                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 293:         --w;
  2866  000D70  0633               	decf	dtoa@w^0,f,c
  2867  000D72  A0D8               	btfss	status,0,c
  2868  000D74  0634               	decf	(dtoa@w+1)^0,f,c
  2869  000D76                     l1976:
  2870                           
  2871                           ; BSR set to: 0
  2872                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 297:     i = size
      +                          of(dbuf) - 1;
  2873  000D76  0E00               	movlw	0
  2874  000D78  6E40               	movwf	(dtoa@i+1)^0,c
  2875  000D7A  0E1F               	movlw	31
  2876  000D7C  6E3F               	movwf	dtoa@i^0,c
  2877  000D7E                     
  2878                           ; BSR set to: 0
  2879                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 298:     dbuf[i] 
      +                          = '\0';
  2880  000D7E  0E00               	movlw	0
  2881  000D80  6F8B               	movwf	(_dbuf+31)& (0+255),b
  2882                           
  2883                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2884  000D82  EF3F  F007         	goto	l1990
  2885  000D86                     l1980:
  2886                           
  2887                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 300:         --i;
  2888  000D86  063F               	decf	dtoa@i^0,f,c
  2889  000D88  A0D8               	btfss	status,0,c
  2890  000D8A  0640               	decf	(dtoa@i+1)^0,f,c
  2891  000D8C                     
  2892                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 301:         dbuf
      +                          [i] = '0' + abs(n % 10);
  2893  000D8C  0E6C               	movlw	low _dbuf
  2894  000D8E  243F               	addwf	dtoa@i^0,w,c
  2895  000D90  6ED9               	movwf	fsr2l,c
  2896  000D92  0E00               	movlw	high _dbuf
  2897  000D94  2040               	addwfc	(dtoa@i+1)^0,w,c
  2898  000D96  6EDA               	movwf	fsr2h,c
  2899  000D98  C037  F002         	movff	dtoa@n,___aomod@dividend
  2900  000D9C  C038  F003         	movff	dtoa@n+1,___aomod@dividend+1
  2901  000DA0  C039  F004         	movff	dtoa@n+2,___aomod@dividend+2
  2902  000DA4  C03A  F005         	movff	dtoa@n+3,___aomod@dividend+3
  2903  000DA8  C03B  F006         	movff	dtoa@n+4,___aomod@dividend+4
  2904  000DAC  C03C  F007         	movff	dtoa@n+5,___aomod@dividend+5
  2905  000DB0  C03D  F008         	movff	dtoa@n+6,___aomod@dividend+6
  2906  000DB4  C03E  F009         	movff	dtoa@n+7,___aomod@dividend+7
  2907  000DB8  0E0A               	movlw	10
  2908  000DBA  6E0A               	movwf	___aomod@divisor^0,c
  2909  000DBC  0E00               	movlw	0
  2910  000DBE  6E0B               	movwf	(___aomod@divisor+1)^0,c
  2911  000DC0  0E00               	movlw	0
  2912  000DC2  6E0C               	movwf	(___aomod@divisor+2)^0,c
  2913  000DC4  0E00               	movlw	0
  2914  000DC6  6E0D               	movwf	(___aomod@divisor+3)^0,c
  2915  000DC8  0E00               	movlw	0
  2916  000DCA  6E0E               	movwf	(___aomod@divisor+4)^0,c
  2917  000DCC  0E00               	movlw	0
  2918  000DCE  6E0F               	movwf	(___aomod@divisor+5)^0,c
  2919  000DD0  0E00               	movlw	0
  2920  000DD2  6E10               	movwf	(___aomod@divisor+6)^0,c
  2921  000DD4  0E00               	movlw	0
  2922  000DD6  6E11               	movwf	(___aomod@divisor+7)^0,c
  2923  000DD8  EC3D  F00B         	call	___aomod	;wreg free
  2924  000DDC  C002  F027         	movff	?___aomod,??_dtoa
  2925  000DE0  C003  F028         	movff	?___aomod+1,??_dtoa+1
  2926  000DE4  C004  F029         	movff	?___aomod+2,??_dtoa+2
  2927  000DE8  C005  F02A         	movff	?___aomod+3,??_dtoa+3
  2928  000DEC  C006  F02B         	movff	?___aomod+4,??_dtoa+4
  2929  000DF0  C007  F02C         	movff	?___aomod+5,??_dtoa+5
  2930  000DF4  C008  F02D         	movff	?___aomod+6,??_dtoa+6
  2931  000DF8  C009  F02E         	movff	?___aomod+7,??_dtoa+7
  2932  000DFC  C027  F014         	movff	??_dtoa,abs@a
  2933  000E00  C029  F015         	movff	??_dtoa+2,abs@a+1
  2934  000E04  EC56  F00F         	call	_abs	;wreg free
  2935  000E08  5014               	movf	?_abs^0,w,c
  2936  000E0A  0F30               	addlw	48
  2937  000E0C  6EDF               	movwf	indf2,c
  2938  000E0E                     
  2939                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 302:         --p;
  2940  000E0E  0631               	decf	dtoa@p^0,f,c
  2941  000E10  A0D8               	btfss	status,0,c
  2942  000E12  0632               	decf	(dtoa@p+1)^0,f,c
  2943  000E14                     
  2944                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 303:         --w;
  2945  000E14  0633               	decf	dtoa@w^0,f,c
  2946  000E16  A0D8               	btfss	status,0,c
  2947  000E18  0634               	decf	(dtoa@w+1)^0,f,c
  2948  000E1A                     
  2949                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 304:         n = 
      +                          n / 10;
  2950  000E1A  C037  F002         	movff	dtoa@n,___aodiv@dividend
  2951  000E1E  C038  F003         	movff	dtoa@n+1,___aodiv@dividend+1
  2952  000E22  C039  F004         	movff	dtoa@n+2,___aodiv@dividend+2
  2953  000E26  C03A  F005         	movff	dtoa@n+3,___aodiv@dividend+3
  2954  000E2A  C03B  F006         	movff	dtoa@n+4,___aodiv@dividend+4
  2955  000E2E  C03C  F007         	movff	dtoa@n+5,___aodiv@dividend+5
  2956  000E32  C03D  F008         	movff	dtoa@n+6,___aodiv@dividend+6
  2957  000E36  C03E  F009         	movff	dtoa@n+7,___aodiv@dividend+7
  2958  000E3A  0E0A               	movlw	10
  2959  000E3C  6E0A               	movwf	___aodiv@divisor^0,c
  2960  000E3E  0E00               	movlw	0
  2961  000E40  6E0B               	movwf	(___aodiv@divisor+1)^0,c
  2962  000E42  0E00               	movlw	0
  2963  000E44  6E0C               	movwf	(___aodiv@divisor+2)^0,c
  2964  000E46  0E00               	movlw	0
  2965  000E48  6E0D               	movwf	(___aodiv@divisor+3)^0,c
  2966  000E4A  0E00               	movlw	0
  2967  000E4C  6E0E               	movwf	(___aodiv@divisor+4)^0,c
  2968  000E4E  0E00               	movlw	0
  2969  000E50  6E0F               	movwf	(___aodiv@divisor+5)^0,c
  2970  000E52  0E00               	movlw	0
  2971  000E54  6E10               	movwf	(___aodiv@divisor+6)^0,c
  2972  000E56  0E00               	movlw	0
  2973  000E58  6E11               	movwf	(___aodiv@divisor+7)^0,c
  2974  000E5A  EC79  F00A         	call	___aodiv	;wreg free
  2975  000E5E  C002  F037         	movff	?___aodiv,dtoa@n
  2976  000E62  C003  F038         	movff	?___aodiv+1,dtoa@n+1
  2977  000E66  C004  F039         	movff	?___aodiv+2,dtoa@n+2
  2978  000E6A  C005  F03A         	movff	?___aodiv+3,dtoa@n+3
  2979  000E6E  C006  F03B         	movff	?___aodiv+4,dtoa@n+4
  2980  000E72  C007  F03C         	movff	?___aodiv+5,dtoa@n+5
  2981  000E76  C008  F03D         	movff	?___aodiv+6,dtoa@n+6
  2982  000E7A  C009  F03E         	movff	?___aodiv+7,dtoa@n+7
  2983  000E7E                     l1990:
  2984                           
  2985                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2986  000E7E  BE40               	btfsc	(dtoa@i+1)^0,7,c
  2987  000E80  EF4A  F007         	goto	u1461
  2988  000E84  5040               	movf	(dtoa@i+1)^0,w,c
  2989  000E86  E108               	bnz	u1460
  2990  000E88  043F               	decf	dtoa@i^0,w,c
  2991  000E8A  A0D8               	btfss	status,0,c
  2992  000E8C  EF4A  F007         	goto	u1461
  2993  000E90  EF4C  F007         	goto	u1460
  2994  000E94                     u1461:
  2995  000E94  EF7D  F007         	goto	l2000
  2996  000E98                     u1460:
  2997  000E98  5037               	movf	dtoa@n^0,w,c
  2998  000E9A  1038               	iorwf	(dtoa@n+1)^0,w,c
  2999  000E9C  1039               	iorwf	(dtoa@n+2)^0,w,c
  3000  000E9E  103A               	iorwf	(dtoa@n+3)^0,w,c
  3001  000EA0  103B               	iorwf	(dtoa@n+4)^0,w,c
  3002  000EA2  103C               	iorwf	(dtoa@n+5)^0,w,c
  3003  000EA4  103D               	iorwf	(dtoa@n+6)^0,w,c
  3004  000EA6  103E               	iorwf	(dtoa@n+7)^0,w,c
  3005  000EA8  A4D8               	btfss	status,2,c
  3006  000EAA  EF59  F007         	goto	u1471
  3007  000EAE  EF5B  F007         	goto	u1470
  3008  000EB2                     u1471:
  3009  000EB2  EFC3  F006         	goto	l1980
  3010  000EB6                     u1470:
  3011  000EB6  BE32               	btfsc	(dtoa@p+1)^0,7,c
  3012  000EB8  EF68  F007         	goto	u1480
  3013  000EBC  5032               	movf	(dtoa@p+1)^0,w,c
  3014  000EBE  E106               	bnz	u1481
  3015  000EC0  0431               	decf	dtoa@p^0,w,c
  3016  000EC2  B0D8               	btfsc	status,0,c
  3017  000EC4  EF66  F007         	goto	u1481
  3018  000EC8  EF68  F007         	goto	u1480
  3019  000ECC                     u1481:
  3020  000ECC  EFC3  F006         	goto	l1980
  3021  000ED0                     u1480:
  3022  000ED0  BE34               	btfsc	(dtoa@w+1)^0,7,c
  3023  000ED2  EF73  F007         	goto	u1491
  3024  000ED6  5034               	movf	(dtoa@w+1)^0,w,c
  3025  000ED8  E108               	bnz	u1490
  3026  000EDA  0433               	decf	dtoa@w^0,w,c
  3027  000EDC  A0D8               	btfss	status,0,c
  3028  000EDE  EF73  F007         	goto	u1491
  3029  000EE2  EF75  F007         	goto	u1490
  3030  000EE6                     u1491:
  3031  000EE6  EF7D  F007         	goto	l2000
  3032  000EEA                     u1490:
  3033  000EEA  0100               	movlb	0	; () banked
  3034  000EEC  B366               	btfsc	_flags& (0+255),1,b
  3035  000EEE  EF7B  F007         	goto	u1501
  3036  000EF2  EF7D  F007         	goto	u1500
  3037  000EF6                     u1501:
  3038  000EF6  EFC3  F006         	goto	l1980
  3039  000EFA                     u1500:
  3040  000EFA                     l2000:
  3041                           
  3042                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 308:     if (s ||
      +                           (flags & (1 << 2))) {
  3043  000EFA  5035               	movf	dtoa@s^0,w,c
  3044  000EFC  1036               	iorwf	(dtoa@s+1)^0,w,c
  3045  000EFE  A4D8               	btfss	status,2,c
  3046  000F00  EF84  F007         	goto	u1511
  3047  000F04  EF86  F007         	goto	u1510
  3048  000F08                     u1511:
  3049  000F08  EF8E  F007         	goto	l2004
  3050  000F0C                     u1510:
  3051  000F0C  0100               	movlb	0	; () banked
  3052  000F0E  A566               	btfss	_flags& (0+255),2,b
  3053  000F10  EF8C  F007         	goto	u1521
  3054  000F14  EF8E  F007         	goto	u1520
  3055  000F18                     u1521:
  3056  000F18  EFAC  F007         	goto	l2014
  3057  000F1C                     u1520:
  3058  000F1C                     l2004:
  3059                           
  3060                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 309:         --i;
  3061  000F1C  063F               	decf	dtoa@i^0,f,c
  3062  000F1E  A0D8               	btfss	status,0,c
  3063  000F20  0640               	decf	(dtoa@i+1)^0,f,c
  3064  000F22                     
  3065                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 310:         dbuf
      +                          [i] = s ? '-' : '+';
  3066  000F22  5035               	movf	dtoa@s^0,w,c
  3067  000F24  1036               	iorwf	(dtoa@s+1)^0,w,c
  3068  000F26  A4D8               	btfss	status,2,c
  3069  000F28  EF98  F007         	goto	u1531
  3070  000F2C  EF9A  F007         	goto	u1530
  3071  000F30                     u1531:
  3072  000F30  EFA0  F007         	goto	l2010
  3073  000F34                     u1530:
  3074  000F34  0E00               	movlw	0
  3075  000F36  6E30               	movwf	(_dtoa$1292+1)^0,c
  3076  000F38  0E2B               	movlw	43
  3077  000F3A  6E2F               	movwf	_dtoa$1292^0,c
  3078  000F3C  EFA4  F007         	goto	l2012
  3079  000F40                     l2010:
  3080  000F40  0E00               	movlw	0
  3081  000F42  6E30               	movwf	(_dtoa$1292+1)^0,c
  3082  000F44  0E2D               	movlw	45
  3083  000F46  6E2F               	movwf	_dtoa$1292^0,c
  3084  000F48                     l2012:
  3085  000F48  0E6C               	movlw	low _dbuf
  3086  000F4A  243F               	addwf	dtoa@i^0,w,c
  3087  000F4C  6ED9               	movwf	fsr2l,c
  3088  000F4E  0E00               	movlw	high _dbuf
  3089  000F50  2040               	addwfc	(dtoa@i+1)^0,w,c
  3090  000F52  6EDA               	movwf	fsr2h,c
  3091  000F54  C02F  FFDF         	movff	_dtoa$1292,indf2
  3092  000F58                     l2014:
  3093                           
  3094                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 314:     return p
      +                          ad(fp, &dbuf[i], w);
  3095  000F58  C01D  F012         	movff	dtoa@fp,pad@fp
  3096  000F5C  C01E  F013         	movff	dtoa@fp+1,pad@fp+1
  3097  000F60  0E6C               	movlw	low _dbuf
  3098  000F62  243F               	addwf	dtoa@i^0,w,c
  3099  000F64  6E14               	movwf	pad@buf^0,c
  3100  000F66  0E00               	movlw	high _dbuf
  3101  000F68  2040               	addwfc	(dtoa@i+1)^0,w,c
  3102  000F6A  6E15               	movwf	(pad@buf+1)^0,c
  3103  000F6C  C033  F016         	movff	dtoa@w,pad@p
  3104  000F70  C034  F017         	movff	dtoa@w+1,pad@p+1
  3105  000F74  EC49  F00D         	call	_pad	;wreg free
  3106  000F78  C012  F01D         	movff	?_pad,?_dtoa
  3107  000F7C  C013  F01E         	movff	?_pad+1,?_dtoa+1
  3108  000F80  0012               	return		;funcret
  3109  000F82                     __end_of_dtoa:
  3110                           	callstack 0
  3111                           
  3112 ;; *************** function _pad *****************
  3113 ;; Defined at:
  3114 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  3115 ;; Parameters:    Size  Location     Type
  3116 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  3117 ;;		 -> sprintf@f(6), 
  3118 ;;  buf             2   19[COMRAM] PTR unsigned char 
  3119 ;;		 -> dbuf(32), 
  3120 ;;  p               2   21[COMRAM] int 
  3121 ;; Auto vars:     Size  Location     Type
  3122 ;;  w               2   26[COMRAM] int 
  3123 ;;  i               2   24[COMRAM] int 
  3124 ;; Return value:  Size  Location     Type
  3125 ;;                  2   17[COMRAM] int 
  3126 ;; Registers used:
  3127 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3128 ;; Tracked objects:
  3129 ;;		On entry : 0/0
  3130 ;;		On exit  : 0/0
  3131 ;;		Unchanged: 0/0
  3132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3133 ;;      Params:         6       0       0       0       0       0       0       0       0
  3134 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3135 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3136 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3137 ;;Total ram usage:       11 bytes
  3138 ;; Hardware stack levels used:    1
  3139 ;; Hardware stack levels required when called:    4
  3140 ;; This function calls:
  3141 ;;		_fputc
  3142 ;;		_fputs
  3143 ;;		_strlen
  3144 ;; This function is called by:
  3145 ;;		_dtoa
  3146 ;;		_xtoa
  3147 ;; This function uses a non-reentrant model
  3148 ;;
  3149                           
  3150                           	psect	text10
  3151  001A92                     __ptext10:
  3152                           	callstack 0
  3153  001A92                     _pad:
  3154                           	callstack 22
  3155  001A92                     
  3156                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  3157  001A92  0100               	movlb	0	; () banked
  3158  001A94  A166               	btfss	_flags& (0+255),0,b
  3159  001A96  EF4F  F00D         	goto	u1271
  3160  001A9A  EF51  F00D         	goto	u1270
  3161  001A9E                     u1271:
  3162  001A9E  EF5B  F00D         	goto	l1916
  3163  001AA2                     u1270:
  3164  001AA2                     
  3165                           ; BSR set to: 0
  3166                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  3167  001AA2  C014  F00B         	movff	pad@buf,fputs@s
  3168  001AA6  C015  F00C         	movff	pad@buf+1,fputs@s+1
  3169  001AAA  C012  F00D         	movff	pad@fp,fputs@fp
  3170  001AAE  C013  F00E         	movff	pad@fp+1,fputs@fp+1
  3171  001AB2  EC34  F00F         	call	_fputs	;wreg free
  3172  001AB6                     l1916:
  3173                           
  3174                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  3175  001AB6  BE17               	btfsc	(pad@p+1)^0,7,c
  3176  001AB8  EF60  F00D         	goto	u1281
  3177  001ABC  EF62  F00D         	goto	u1280
  3178  001AC0                     u1281:
  3179  001AC0  EF68  F00D         	goto	l1920
  3180  001AC4                     u1280:
  3181  001AC4  C016  F01B         	movff	pad@p,pad@w
  3182  001AC8  C017  F01C         	movff	pad@p+1,pad@w+1
  3183  001ACC  EF6C  F00D         	goto	l891
  3184  001AD0                     l1920:
  3185  001AD0  0E00               	movlw	0
  3186  001AD2  6E1C               	movwf	(pad@w+1)^0,c
  3187  001AD4  0E00               	movlw	0
  3188  001AD6  6E1B               	movwf	pad@w^0,c
  3189  001AD8                     l891:
  3190                           
  3191                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  3192  001AD8  0E00               	movlw	0
  3193  001ADA  6E1A               	movwf	(pad@i+1)^0,c
  3194  001ADC  0E00               	movlw	0
  3195  001ADE  6E19               	movwf	pad@i^0,c
  3196                           
  3197                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3198  001AE0  EF7E  F00D         	goto	l1926
  3199  001AE4                     l1922:
  3200                           
  3201                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  3202  001AE4  0E00               	movlw	0
  3203  001AE6  6E03               	movwf	(fputc@c+1)^0,c
  3204  001AE8  0E20               	movlw	32
  3205  001AEA  6E02               	movwf	fputc@c^0,c
  3206  001AEC  C012  F004         	movff	pad@fp,fputc@fp
  3207  001AF0  C013  F005         	movff	pad@fp+1,fputc@fp+1
  3208  001AF4  ECE4  F00C         	call	_fputc	;wreg free
  3209  001AF8                     
  3210                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
  3211  001AF8  4A19               	infsnz	pad@i^0,f,c
  3212  001AFA  2A1A               	incf	(pad@i+1)^0,f,c
  3213  001AFC                     l1926:
  3214                           
  3215                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3216  001AFC  501B               	movf	pad@w^0,w,c
  3217  001AFE  5C19               	subwf	pad@i^0,w,c
  3218  001B00  501A               	movf	(pad@i+1)^0,w,c
  3219  001B02  0A80               	xorlw	128
  3220  001B04  6E18               	movwf	??_pad^0,c
  3221  001B06  501C               	movf	(pad@w+1)^0,w,c
  3222  001B08  0A80               	xorlw	128
  3223  001B0A  5818               	subwfb	??_pad^0,w,c
  3224  001B0C  A0D8               	btfss	status,0,c
  3225  001B0E  EF8B  F00D         	goto	u1291
  3226  001B12  EF8D  F00D         	goto	u1290
  3227  001B16                     u1291:
  3228  001B16  EF72  F00D         	goto	l1922
  3229  001B1A                     u1290:
  3230  001B1A                     
  3231                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  3232  001B1A  0100               	movlb	0	; () banked
  3233  001B1C  B166               	btfsc	_flags& (0+255),0,b
  3234  001B1E  EF93  F00D         	goto	u1301
  3235  001B22  EF95  F00D         	goto	u1300
  3236  001B26                     u1301:
  3237  001B26  EF9F  F00D         	goto	l1930
  3238  001B2A                     u1300:
  3239  001B2A                     
  3240                           ; BSR set to: 0
  3241                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  3242  001B2A  C014  F00B         	movff	pad@buf,fputs@s
  3243  001B2E  C015  F00C         	movff	pad@buf+1,fputs@s+1
  3244  001B32  C012  F00D         	movff	pad@fp,fputs@fp
  3245  001B36  C013  F00E         	movff	pad@fp+1,fputs@fp+1
  3246  001B3A  EC34  F00F         	call	_fputs	;wreg free
  3247  001B3E                     l1930:
  3248                           
  3249                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return st
      +                          rlen(buf) + w;
  3250  001B3E  C014  F002         	movff	pad@buf,strlen@s
  3251  001B42  C015  F003         	movff	pad@buf+1,strlen@s+1
  3252  001B46  EC28  F010         	call	_strlen	;wreg free
  3253  001B4A  501B               	movf	pad@w^0,w,c
  3254  001B4C  2402               	addwf	?_strlen^0,w,c
  3255  001B4E  6E12               	movwf	?_pad^0,c
  3256  001B50  501C               	movf	(pad@w+1)^0,w,c
  3257  001B52  2003               	addwfc	(?_strlen+1)^0,w,c
  3258  001B54  6E13               	movwf	(?_pad+1)^0,c
  3259  001B56  0012               	return		;funcret
  3260  001B58                     __end_of_pad:
  3261                           	callstack 0
  3262                           
  3263 ;; *************** function _strlen *****************
  3264 ;; Defined at:
  3265 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strlen.c"
  3266 ;; Parameters:    Size  Location     Type
  3267 ;;  s               2    1[COMRAM] PTR const unsigned char 
  3268 ;;		 -> dbuf(32), 
  3269 ;; Auto vars:     Size  Location     Type
  3270 ;;  a               2    3[COMRAM] PTR const unsigned char 
  3271 ;;		 -> dbuf(32), 
  3272 ;; Return value:  Size  Location     Type
  3273 ;;                  2    1[COMRAM] unsigned int 
  3274 ;; Registers used:
  3275 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3276 ;; Tracked objects:
  3277 ;;		On entry : 0/0
  3278 ;;		On exit  : 0/0
  3279 ;;		Unchanged: 0/0
  3280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3281 ;;      Params:         2       0       0       0       0       0       0       0       0
  3282 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3283 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3284 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3285 ;;Total ram usage:        4 bytes
  3286 ;; Hardware stack levels used:    1
  3287 ;; Hardware stack levels required when called:    1
  3288 ;; This function calls:
  3289 ;;		Nothing
  3290 ;; This function is called by:
  3291 ;;		_pad
  3292 ;; This function uses a non-reentrant model
  3293 ;;
  3294                           
  3295                           	psect	text11
  3296  002050                     __ptext11:
  3297                           	callstack 0
  3298  002050                     _strlen:
  3299                           	callstack 24
  3300  002050  C002  F004         	movff	strlen@s,strlen@a
  3301  002054  C003  F005         	movff	strlen@s+1,strlen@a+1
  3302  002058  EF30  F010         	goto	l1822
  3303  00205C                     l1820:
  3304  00205C  4A02               	infsnz	strlen@s^0,f,c
  3305  00205E  2A03               	incf	(strlen@s+1)^0,f,c
  3306  002060                     l1822:
  3307  002060  C002  FFD9         	movff	strlen@s,fsr2l
  3308  002064  C003  FFDA         	movff	strlen@s+1,fsr2h
  3309  002068  50DF               	movf	indf2,w,c
  3310  00206A  A4D8               	btfss	status,2,c
  3311  00206C  EF3A  F010         	goto	u1111
  3312  002070  EF3C  F010         	goto	u1110
  3313  002074                     u1111:
  3314  002074  EF2E  F010         	goto	l1820
  3315  002078                     u1110:
  3316  002078  5004               	movf	strlen@a^0,w,c
  3317  00207A  5C02               	subwf	strlen@s^0,w,c
  3318  00207C  6E02               	movwf	?_strlen^0,c
  3319  00207E  5005               	movf	(strlen@a+1)^0,w,c
  3320  002080  5803               	subwfb	(strlen@s+1)^0,w,c
  3321  002082  6E03               	movwf	(?_strlen+1)^0,c
  3322  002084  0012               	return		;funcret
  3323  002086                     __end_of_strlen:
  3324                           	callstack 0
  3325                           
  3326 ;; *************** function _fputs *****************
  3327 ;; Defined at:
  3328 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
  3329 ;; Parameters:    Size  Location     Type
  3330 ;;  s               2   10[COMRAM] PTR const unsigned char 
  3331 ;;		 -> dbuf(32), 
  3332 ;;  fp              2   12[COMRAM] PTR struct _IO_FILE
  3333 ;;		 -> sprintf@f(6), 
  3334 ;; Auto vars:     Size  Location     Type
  3335 ;;  i               2   15[COMRAM] int 
  3336 ;;  c               1   14[COMRAM] unsigned char 
  3337 ;; Return value:  Size  Location     Type
  3338 ;;                  2   10[COMRAM] int 
  3339 ;; Registers used:
  3340 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3341 ;; Tracked objects:
  3342 ;;		On entry : 0/0
  3343 ;;		On exit  : 0/0
  3344 ;;		Unchanged: 0/0
  3345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3346 ;;      Params:         4       0       0       0       0       0       0       0       0
  3347 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3348 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3349 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3350 ;;Total ram usage:        7 bytes
  3351 ;; Hardware stack levels used:    1
  3352 ;; Hardware stack levels required when called:    3
  3353 ;; This function calls:
  3354 ;;		_fputc
  3355 ;; This function is called by:
  3356 ;;		_pad
  3357 ;; This function uses a non-reentrant model
  3358 ;;
  3359                           
  3360                           	psect	text12
  3361  001E68                     __ptext12:
  3362                           	callstack 0
  3363  001E68                     _fputs:
  3364                           	callstack 22
  3365  001E68  0E00               	movlw	0
  3366  001E6A  6E11               	movwf	(fputs@i+1)^0,c
  3367  001E6C  0E00               	movlw	0
  3368  001E6E  6E10               	movwf	fputs@i^0,c
  3369  001E70  EF45  F00F         	goto	l1816
  3370  001E74                     l1812:
  3371  001E74  C00F  F002         	movff	fputs@c,fputc@c
  3372  001E78  6A03               	clrf	(fputc@c+1)^0,c
  3373  001E7A  C00D  F004         	movff	fputs@fp,fputc@fp
  3374  001E7E  C00E  F005         	movff	fputs@fp+1,fputc@fp+1
  3375  001E82  ECE4  F00C         	call	_fputc	;wreg free
  3376  001E86  4A10               	infsnz	fputs@i^0,f,c
  3377  001E88  2A11               	incf	(fputs@i+1)^0,f,c
  3378  001E8A                     l1816:
  3379  001E8A  5010               	movf	fputs@i^0,w,c
  3380  001E8C  240B               	addwf	fputs@s^0,w,c
  3381  001E8E  6ED9               	movwf	fsr2l,c
  3382  001E90  5011               	movf	(fputs@i+1)^0,w,c
  3383  001E92  200C               	addwfc	(fputs@s+1)^0,w,c
  3384  001E94  6EDA               	movwf	fsr2h,c
  3385  001E96  50DF               	movf	indf2,w,c
  3386  001E98  6E0F               	movwf	fputs@c^0,c
  3387  001E9A  500F               	movf	fputs@c^0,w,c
  3388  001E9C  A4D8               	btfss	status,2,c
  3389  001E9E  EF53  F00F         	goto	u1101
  3390  001EA2  EF55  F00F         	goto	u1100
  3391  001EA6                     u1101:
  3392  001EA6  EF3A  F00F         	goto	l1812
  3393  001EAA                     u1100:
  3394  001EAA  0012               	return		;funcret
  3395  001EAC                     __end_of_fputs:
  3396                           	callstack 0
  3397                           
  3398 ;; *************** function _fputc *****************
  3399 ;; Defined at:
  3400 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
  3401 ;; Parameters:    Size  Location     Type
  3402 ;;  c               2    1[COMRAM] int 
  3403 ;;  fp              2    3[COMRAM] PTR struct _IO_FILE
  3404 ;;		 -> sprintf@f(6), 
  3405 ;; Auto vars:     Size  Location     Type
  3406 ;;		None
  3407 ;; Return value:  Size  Location     Type
  3408 ;;                  2    1[COMRAM] int 
  3409 ;; Registers used:
  3410 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3411 ;; Tracked objects:
  3412 ;;		On entry : 0/0
  3413 ;;		On exit  : 0/0
  3414 ;;		Unchanged: 0/0
  3415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3416 ;;      Params:         4       0       0       0       0       0       0       0       0
  3417 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3418 ;;      Temps:          5       0       0       0       0       0       0       0       0
  3419 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3420 ;;Total ram usage:        9 bytes
  3421 ;; Hardware stack levels used:    1
  3422 ;; Hardware stack levels required when called:    2
  3423 ;; This function calls:
  3424 ;;		_putch
  3425 ;; This function is called by:
  3426 ;;		_pad
  3427 ;;		_vfpfcnvrt
  3428 ;;		_fputs
  3429 ;; This function uses a non-reentrant model
  3430 ;;
  3431                           
  3432                           	psect	text13
  3433  0019C8                     __ptext13:
  3434                           	callstack 0
  3435  0019C8                     _fputc:
  3436                           	callstack 22
  3437  0019C8  5004               	movf	fputc@fp^0,w,c
  3438  0019CA  1005               	iorwf	(fputc@fp+1)^0,w,c
  3439  0019CC  B4D8               	btfsc	status,2,c
  3440  0019CE  EFEB  F00C         	goto	u1061
  3441  0019D2  EFED  F00C         	goto	u1060
  3442  0019D6                     u1061:
  3443  0019D6  EFF6  F00C         	goto	l1800
  3444  0019DA                     u1060:
  3445  0019DA  5004               	movf	fputc@fp^0,w,c
  3446  0019DC  1005               	iorwf	(fputc@fp+1)^0,w,c
  3447  0019DE  A4D8               	btfss	status,2,c
  3448  0019E0  EFF4  F00C         	goto	u1071
  3449  0019E4  EFF6  F00C         	goto	u1070
  3450  0019E8                     u1071:
  3451  0019E8  EFFB  F00C         	goto	l1802
  3452  0019EC                     u1070:
  3453  0019EC                     l1800:
  3454  0019EC  5002               	movf	fputc@c^0,w,c
  3455  0019EE  ECA9  F010         	call	_putch
  3456  0019F2  EF48  F00D         	goto	l1000
  3457  0019F6                     l1802:
  3458  0019F6  EE20 F004          	lfsr	2,4
  3459  0019FA  5004               	movf	fputc@fp^0,w,c
  3460  0019FC  26D9               	addwf	fsr2l,f,c
  3461  0019FE  5005               	movf	(fputc@fp+1)^0,w,c
  3462  001A00  22DA               	addwfc	fsr2h,f,c
  3463  001A02  50DE               	movf	postinc2,w,c
  3464  001A04  10DE               	iorwf	postinc2,w,c
  3465  001A06  B4D8               	btfsc	status,2,c
  3466  001A08  EF08  F00D         	goto	u1081
  3467  001A0C  EF0A  F00D         	goto	u1080
  3468  001A10                     u1081:
  3469  001A10  EF25  F00D         	goto	l1806
  3470  001A14                     u1080:
  3471  001A14  EE20 F004          	lfsr	2,4
  3472  001A18  5004               	movf	fputc@fp^0,w,c
  3473  001A1A  26D9               	addwf	fsr2l,f,c
  3474  001A1C  5005               	movf	(fputc@fp+1)^0,w,c
  3475  001A1E  22DA               	addwfc	fsr2h,f,c
  3476  001A20  EE10 F002          	lfsr	1,2
  3477  001A24  5004               	movf	fputc@fp^0,w,c
  3478  001A26  26E1               	addwf	fsr1l,f,c
  3479  001A28  5005               	movf	(fputc@fp+1)^0,w,c
  3480  001A2A  22E2               	addwfc	fsr1h,f,c
  3481  001A2C  50DE               	movf	postinc2,w,c
  3482  001A2E  5CE6               	subwf	postinc1,w,c
  3483  001A30  50E6               	movf	postinc1,w,c
  3484  001A32  0A80               	xorlw	128
  3485  001A34  6E0A               	movwf	(??_fputc+4)^0,c
  3486  001A36  50DE               	movf	postinc2,w,c
  3487  001A38  0A80               	xorlw	128
  3488  001A3A  580A               	subwfb	(??_fputc+4)^0,w,c
  3489  001A3C  B0D8               	btfsc	status,0,c
  3490  001A3E  EF23  F00D         	goto	u1091
  3491  001A42  EF25  F00D         	goto	u1090
  3492  001A46                     u1091:
  3493  001A46  EF48  F00D         	goto	l1000
  3494  001A4A                     u1090:
  3495  001A4A                     l1806:
  3496  001A4A  EE20 F002          	lfsr	2,2
  3497  001A4E  5004               	movf	fputc@fp^0,w,c
  3498  001A50  26D9               	addwf	fsr2l,f,c
  3499  001A52  5005               	movf	(fputc@fp+1)^0,w,c
  3500  001A54  22DA               	addwfc	fsr2h,f,c
  3501  001A56  CFDE F006          	movff	postinc2,??_fputc
  3502  001A5A  CFDD F007          	movff	postdec2,??_fputc+1
  3503  001A5E  C004  FFD9         	movff	fputc@fp,fsr2l
  3504  001A62  C005  FFDA         	movff	fputc@fp+1,fsr2h
  3505  001A66  CFDE F008          	movff	postinc2,??_fputc+2
  3506  001A6A  CFDD F009          	movff	postdec2,??_fputc+3
  3507  001A6E  5006               	movf	??_fputc^0,w,c
  3508  001A70  2408               	addwf	(??_fputc+2)^0,w,c
  3509  001A72  6ED9               	movwf	fsr2l,c
  3510  001A74  5007               	movf	(??_fputc+1)^0,w,c
  3511  001A76  2009               	addwfc	(??_fputc+3)^0,w,c
  3512  001A78  6EDA               	movwf	fsr2h,c
  3513  001A7A  C002  FFDF         	movff	fputc@c,indf2
  3514  001A7E  EE20 F002          	lfsr	2,2
  3515  001A82  5004               	movf	fputc@fp^0,w,c
  3516  001A84  26D9               	addwf	fsr2l,f,c
  3517  001A86  5005               	movf	(fputc@fp+1)^0,w,c
  3518  001A88  22DA               	addwfc	fsr2h,f,c
  3519  001A8A  2ADE               	incf	postinc2,f,c
  3520  001A8C  0E00               	movlw	0
  3521  001A8E  22DD               	addwfc	postdec2,f,c
  3522  001A90                     l1000:
  3523  001A90  0012               	return		;funcret
  3524  001A92                     __end_of_fputc:
  3525                           	callstack 0
  3526                           
  3527 ;; *************** function _putch *****************
  3528 ;; Defined at:
  3529 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\putch.c"
  3530 ;; Parameters:    Size  Location     Type
  3531 ;;  c               1    wreg     unsigned char 
  3532 ;; Auto vars:     Size  Location     Type
  3533 ;;  c               1    0[COMRAM] unsigned char 
  3534 ;; Return value:  Size  Location     Type
  3535 ;;                  1    wreg      void 
  3536 ;; Registers used:
  3537 ;;		wreg
  3538 ;; Tracked objects:
  3539 ;;		On entry : 0/0
  3540 ;;		On exit  : 0/0
  3541 ;;		Unchanged: 0/0
  3542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3543 ;;      Params:         0       0       0       0       0       0       0       0       0
  3544 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3545 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3546 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3547 ;;Total ram usage:        0 bytes
  3548 ;; Hardware stack levels used:    1
  3549 ;; Hardware stack levels required when called:    1
  3550 ;; This function calls:
  3551 ;;		Nothing
  3552 ;; This function is called by:
  3553 ;;		_fputc
  3554 ;; This function uses a non-reentrant model
  3555 ;;
  3556                           
  3557                           	psect	text14
  3558  002152                     __ptext14:
  3559                           	callstack 0
  3560  002152                     _putch:
  3561                           	callstack 22
  3562  002152  0012               	return		;funcret
  3563  002154                     __end_of_putch:
  3564                           	callstack 0
  3565                           
  3566 ;; *************** function _abs *****************
  3567 ;; Defined at:
  3568 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\abs.c"
  3569 ;; Parameters:    Size  Location     Type
  3570 ;;  a               2   19[COMRAM] int 
  3571 ;; Auto vars:     Size  Location     Type
  3572 ;;		None
  3573 ;; Return value:  Size  Location     Type
  3574 ;;                  2   19[COMRAM] int 
  3575 ;; Registers used:
  3576 ;;		wreg, status,2, status,0
  3577 ;; Tracked objects:
  3578 ;;		On entry : 0/0
  3579 ;;		On exit  : 0/0
  3580 ;;		Unchanged: 0/0
  3581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3582 ;;      Params:         2       0       0       0       0       0       0       0       0
  3583 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3584 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3585 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3586 ;;Total ram usage:        4 bytes
  3587 ;; Hardware stack levels used:    1
  3588 ;; Hardware stack levels required when called:    1
  3589 ;; This function calls:
  3590 ;;		Nothing
  3591 ;; This function is called by:
  3592 ;;		_dtoa
  3593 ;; This function uses a non-reentrant model
  3594 ;;
  3595                           
  3596                           	psect	text15
  3597  001EAC                     __ptext15:
  3598                           	callstack 0
  3599  001EAC                     _abs:
  3600                           	callstack 25
  3601  001EAC  BE15               	btfsc	(abs@a+1)^0,7,c
  3602  001EAE  EF63  F00F         	goto	u1310
  3603  001EB2  5015               	movf	(abs@a+1)^0,w,c
  3604  001EB4  E106               	bnz	u1311
  3605  001EB6  0414               	decf	abs@a^0,w,c
  3606  001EB8  B0D8               	btfsc	status,0,c
  3607  001EBA  EF61  F00F         	goto	u1311
  3608  001EBE  EF63  F00F         	goto	u1310
  3609  001EC2                     u1311:
  3610  001EC2  EF71  F00F         	goto	l973
  3611  001EC6                     u1310:
  3612  001EC6  C014  F016         	movff	abs@a,??_abs
  3613  001ECA  C015  F017         	movff	abs@a+1,??_abs+1
  3614  001ECE  1E16               	comf	??_abs^0,f,c
  3615  001ED0  1E17               	comf	(??_abs+1)^0,f,c
  3616  001ED2  4A16               	infsnz	??_abs^0,f,c
  3617  001ED4  2A17               	incf	(??_abs+1)^0,f,c
  3618  001ED6  C016  F014         	movff	??_abs,?_abs
  3619  001EDA  C017  F015         	movff	??_abs+1,?_abs+1
  3620  001EDE  EF75  F00F         	goto	l976
  3621  001EE2                     l973:
  3622  001EE2  C014  F014         	movff	abs@a,?_abs
  3623  001EE6  C015  F015         	movff	abs@a+1,?_abs+1
  3624  001EEA                     l976:
  3625  001EEA  0012               	return		;funcret
  3626  001EEC                     __end_of_abs:
  3627                           	callstack 0
  3628                           
  3629 ;; *************** function ___aomod *****************
  3630 ;; Defined at:
  3631 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aomod.c"
  3632 ;; Parameters:    Size  Location     Type
  3633 ;;  dividend        8    1[COMRAM] long long 
  3634 ;;  divisor         8    9[COMRAM] long long 
  3635 ;; Auto vars:     Size  Location     Type
  3636 ;;  sign            1   18[COMRAM] unsigned char 
  3637 ;;  counter         1   17[COMRAM] unsigned char 
  3638 ;; Return value:  Size  Location     Type
  3639 ;;                  8    1[COMRAM] long long 
  3640 ;; Registers used:
  3641 ;;		wreg, status,2, status,0
  3642 ;; Tracked objects:
  3643 ;;		On entry : 0/0
  3644 ;;		On exit  : 0/0
  3645 ;;		Unchanged: 0/0
  3646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3647 ;;      Params:        16       0       0       0       0       0       0       0       0
  3648 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3649 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3650 ;;      Totals:        18       0       0       0       0       0       0       0       0
  3651 ;;Total ram usage:       18 bytes
  3652 ;; Hardware stack levels used:    1
  3653 ;; Hardware stack levels required when called:    1
  3654 ;; This function calls:
  3655 ;;		Nothing
  3656 ;; This function is called by:
  3657 ;;		_dtoa
  3658 ;; This function uses a non-reentrant model
  3659 ;;
  3660                           
  3661                           	psect	text16
  3662  00167A                     __ptext16:
  3663                           	callstack 0
  3664  00167A                     ___aomod:
  3665                           	callstack 25
  3666  00167A  0E00               	movlw	0
  3667  00167C  6E13               	movwf	___aomod@sign^0,c
  3668  00167E  BE09               	btfsc	(___aomod@dividend+7)^0,7,c
  3669  001680  EF46  F00B         	goto	u1210
  3670  001684  EF44  F00B         	goto	u1211
  3671  001688                     u1211:
  3672  001688  EF58  F00B         	goto	l1884
  3673  00168C                     u1210:
  3674  00168C  1E09               	comf	(___aomod@dividend+7)^0,f,c
  3675  00168E  1E08               	comf	(___aomod@dividend+6)^0,f,c
  3676  001690  1E07               	comf	(___aomod@dividend+5)^0,f,c
  3677  001692  1E06               	comf	(___aomod@dividend+4)^0,f,c
  3678  001694  1E05               	comf	(___aomod@dividend+3)^0,f,c
  3679  001696  1E04               	comf	(___aomod@dividend+2)^0,f,c
  3680  001698  1E03               	comf	(___aomod@dividend+1)^0,f,c
  3681  00169A  6C02               	negf	___aomod@dividend^0,c
  3682  00169C  0E00               	movlw	0
  3683  00169E  2203               	addwfc	(___aomod@dividend+1)^0,f,c
  3684  0016A0  2204               	addwfc	(___aomod@dividend+2)^0,f,c
  3685  0016A2  2205               	addwfc	(___aomod@dividend+3)^0,f,c
  3686  0016A4  2206               	addwfc	(___aomod@dividend+4)^0,f,c
  3687  0016A6  2207               	addwfc	(___aomod@dividend+5)^0,f,c
  3688  0016A8  2208               	addwfc	(___aomod@dividend+6)^0,f,c
  3689  0016AA  2209               	addwfc	(___aomod@dividend+7)^0,f,c
  3690  0016AC  0E01               	movlw	1
  3691  0016AE  6E13               	movwf	___aomod@sign^0,c
  3692  0016B0                     l1884:
  3693  0016B0  BE11               	btfsc	(___aomod@divisor+7)^0,7,c
  3694  0016B2  EF5F  F00B         	goto	u1220
  3695  0016B6  EF5D  F00B         	goto	u1221
  3696  0016BA                     u1221:
  3697  0016BA  EF6F  F00B         	goto	l1888
  3698  0016BE                     u1220:
  3699  0016BE  1E11               	comf	(___aomod@divisor+7)^0,f,c
  3700  0016C0  1E10               	comf	(___aomod@divisor+6)^0,f,c
  3701  0016C2  1E0F               	comf	(___aomod@divisor+5)^0,f,c
  3702  0016C4  1E0E               	comf	(___aomod@divisor+4)^0,f,c
  3703  0016C6  1E0D               	comf	(___aomod@divisor+3)^0,f,c
  3704  0016C8  1E0C               	comf	(___aomod@divisor+2)^0,f,c
  3705  0016CA  1E0B               	comf	(___aomod@divisor+1)^0,f,c
  3706  0016CC  6C0A               	negf	___aomod@divisor^0,c
  3707  0016CE  0E00               	movlw	0
  3708  0016D0  220B               	addwfc	(___aomod@divisor+1)^0,f,c
  3709  0016D2  220C               	addwfc	(___aomod@divisor+2)^0,f,c
  3710  0016D4  220D               	addwfc	(___aomod@divisor+3)^0,f,c
  3711  0016D6  220E               	addwfc	(___aomod@divisor+4)^0,f,c
  3712  0016D8  220F               	addwfc	(___aomod@divisor+5)^0,f,c
  3713  0016DA  2210               	addwfc	(___aomod@divisor+6)^0,f,c
  3714  0016DC  2211               	addwfc	(___aomod@divisor+7)^0,f,c
  3715  0016DE                     l1888:
  3716  0016DE  500A               	movf	___aomod@divisor^0,w,c
  3717  0016E0  100B               	iorwf	(___aomod@divisor+1)^0,w,c
  3718  0016E2  100C               	iorwf	(___aomod@divisor+2)^0,w,c
  3719  0016E4  100D               	iorwf	(___aomod@divisor+3)^0,w,c
  3720  0016E6  100E               	iorwf	(___aomod@divisor+4)^0,w,c
  3721  0016E8  100F               	iorwf	(___aomod@divisor+5)^0,w,c
  3722  0016EA  1010               	iorwf	(___aomod@divisor+6)^0,w,c
  3723  0016EC  1011               	iorwf	(___aomod@divisor+7)^0,w,c
  3724  0016EE  B4D8               	btfsc	status,2,c
  3725  0016F0  EF7C  F00B         	goto	u1231
  3726  0016F4  EF7E  F00B         	goto	u1230
  3727  0016F8                     u1231:
  3728  0016F8  EFC6  F00B         	goto	l1904
  3729  0016FC                     u1230:
  3730  0016FC  0E01               	movlw	1
  3731  0016FE  6E12               	movwf	___aomod@counter^0,c
  3732  001700  EF8C  F00B         	goto	l1894
  3733  001704                     l1892:
  3734  001704  90D8               	bcf	status,0,c
  3735  001706  360A               	rlcf	___aomod@divisor^0,f,c
  3736  001708  360B               	rlcf	(___aomod@divisor+1)^0,f,c
  3737  00170A  360C               	rlcf	(___aomod@divisor+2)^0,f,c
  3738  00170C  360D               	rlcf	(___aomod@divisor+3)^0,f,c
  3739  00170E  360E               	rlcf	(___aomod@divisor+4)^0,f,c
  3740  001710  360F               	rlcf	(___aomod@divisor+5)^0,f,c
  3741  001712  3610               	rlcf	(___aomod@divisor+6)^0,f,c
  3742  001714  3611               	rlcf	(___aomod@divisor+7)^0,f,c
  3743  001716  2A12               	incf	___aomod@counter^0,f,c
  3744  001718                     l1894:
  3745  001718  AE11               	btfss	(___aomod@divisor+7)^0,7,c
  3746  00171A  EF91  F00B         	goto	u1241
  3747  00171E  EF93  F00B         	goto	u1240
  3748  001722                     u1241:
  3749  001722  EF82  F00B         	goto	l1892
  3750  001726                     u1240:
  3751  001726                     l1896:
  3752  001726  500A               	movf	___aomod@divisor^0,w,c
  3753  001728  5C02               	subwf	___aomod@dividend^0,w,c
  3754  00172A  500B               	movf	(___aomod@divisor+1)^0,w,c
  3755  00172C  5803               	subwfb	(___aomod@dividend+1)^0,w,c
  3756  00172E  500C               	movf	(___aomod@divisor+2)^0,w,c
  3757  001730  5804               	subwfb	(___aomod@dividend+2)^0,w,c
  3758  001732  500D               	movf	(___aomod@divisor+3)^0,w,c
  3759  001734  5805               	subwfb	(___aomod@dividend+3)^0,w,c
  3760  001736  500E               	movf	(___aomod@divisor+4)^0,w,c
  3761  001738  5806               	subwfb	(___aomod@dividend+4)^0,w,c
  3762  00173A  500F               	movf	(___aomod@divisor+5)^0,w,c
  3763  00173C  5807               	subwfb	(___aomod@dividend+5)^0,w,c
  3764  00173E  5010               	movf	(___aomod@divisor+6)^0,w,c
  3765  001740  5808               	subwfb	(___aomod@dividend+6)^0,w,c
  3766  001742  5011               	movf	(___aomod@divisor+7)^0,w,c
  3767  001744  5809               	subwfb	(___aomod@dividend+7)^0,w,c
  3768  001746  A0D8               	btfss	status,0,c
  3769  001748  EFA8  F00B         	goto	u1251
  3770  00174C  EFAA  F00B         	goto	u1250
  3771  001750                     u1251:
  3772  001750  EFBA  F00B         	goto	l1900
  3773  001754                     u1250:
  3774  001754  500A               	movf	___aomod@divisor^0,w,c
  3775  001756  5E02               	subwf	___aomod@dividend^0,f,c
  3776  001758  500B               	movf	(___aomod@divisor+1)^0,w,c
  3777  00175A  5A03               	subwfb	(___aomod@dividend+1)^0,f,c
  3778  00175C  500C               	movf	(___aomod@divisor+2)^0,w,c
  3779  00175E  5A04               	subwfb	(___aomod@dividend+2)^0,f,c
  3780  001760  500D               	movf	(___aomod@divisor+3)^0,w,c
  3781  001762  5A05               	subwfb	(___aomod@dividend+3)^0,f,c
  3782  001764  500E               	movf	(___aomod@divisor+4)^0,w,c
  3783  001766  5A06               	subwfb	(___aomod@dividend+4)^0,f,c
  3784  001768  500F               	movf	(___aomod@divisor+5)^0,w,c
  3785  00176A  5A07               	subwfb	(___aomod@dividend+5)^0,f,c
  3786  00176C  5010               	movf	(___aomod@divisor+6)^0,w,c
  3787  00176E  5A08               	subwfb	(___aomod@dividend+6)^0,f,c
  3788  001770  5011               	movf	(___aomod@divisor+7)^0,w,c
  3789  001772  5A09               	subwfb	(___aomod@dividend+7)^0,f,c
  3790  001774                     l1900:
  3791  001774  90D8               	bcf	status,0,c
  3792  001776  3211               	rrcf	(___aomod@divisor+7)^0,f,c
  3793  001778  3210               	rrcf	(___aomod@divisor+6)^0,f,c
  3794  00177A  320F               	rrcf	(___aomod@divisor+5)^0,f,c
  3795  00177C  320E               	rrcf	(___aomod@divisor+4)^0,f,c
  3796  00177E  320D               	rrcf	(___aomod@divisor+3)^0,f,c
  3797  001780  320C               	rrcf	(___aomod@divisor+2)^0,f,c
  3798  001782  320B               	rrcf	(___aomod@divisor+1)^0,f,c
  3799  001784  320A               	rrcf	___aomod@divisor^0,f,c
  3800  001786  2E12               	decfsz	___aomod@counter^0,f,c
  3801  001788  EF93  F00B         	goto	l1896
  3802  00178C                     l1904:
  3803  00178C  5013               	movf	___aomod@sign^0,w,c
  3804  00178E  B4D8               	btfsc	status,2,c
  3805  001790  EFCC  F00B         	goto	u1261
  3806  001794  EFCE  F00B         	goto	u1260
  3807  001798                     u1261:
  3808  001798  EFDE  F00B         	goto	l1908
  3809  00179C                     u1260:
  3810  00179C  1E09               	comf	(___aomod@dividend+7)^0,f,c
  3811  00179E  1E08               	comf	(___aomod@dividend+6)^0,f,c
  3812  0017A0  1E07               	comf	(___aomod@dividend+5)^0,f,c
  3813  0017A2  1E06               	comf	(___aomod@dividend+4)^0,f,c
  3814  0017A4  1E05               	comf	(___aomod@dividend+3)^0,f,c
  3815  0017A6  1E04               	comf	(___aomod@dividend+2)^0,f,c
  3816  0017A8  1E03               	comf	(___aomod@dividend+1)^0,f,c
  3817  0017AA  6C02               	negf	___aomod@dividend^0,c
  3818  0017AC  0E00               	movlw	0
  3819  0017AE  2203               	addwfc	(___aomod@dividend+1)^0,f,c
  3820  0017B0  2204               	addwfc	(___aomod@dividend+2)^0,f,c
  3821  0017B2  2205               	addwfc	(___aomod@dividend+3)^0,f,c
  3822  0017B4  2206               	addwfc	(___aomod@dividend+4)^0,f,c
  3823  0017B6  2207               	addwfc	(___aomod@dividend+5)^0,f,c
  3824  0017B8  2208               	addwfc	(___aomod@dividend+6)^0,f,c
  3825  0017BA  2209               	addwfc	(___aomod@dividend+7)^0,f,c
  3826  0017BC                     l1908:
  3827  0017BC  C002  F002         	movff	___aomod@dividend,?___aomod
  3828  0017C0  C003  F003         	movff	___aomod@dividend+1,?___aomod+1
  3829  0017C4  C004  F004         	movff	___aomod@dividend+2,?___aomod+2
  3830  0017C8  C005  F005         	movff	___aomod@dividend+3,?___aomod+3
  3831  0017CC  C006  F006         	movff	___aomod@dividend+4,?___aomod+4
  3832  0017D0  C007  F007         	movff	___aomod@dividend+5,?___aomod+5
  3833  0017D4  C008  F008         	movff	___aomod@dividend+6,?___aomod+6
  3834  0017D8  C009  F009         	movff	___aomod@dividend+7,?___aomod+7
  3835  0017DC  0012               	return		;funcret
  3836  0017DE                     __end_of___aomod:
  3837                           	callstack 0
  3838                           
  3839 ;; *************** function ___aodiv *****************
  3840 ;; Defined at:
  3841 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aodiv.c"
  3842 ;; Parameters:    Size  Location     Type
  3843 ;;  dividend        8    1[COMRAM] long long 
  3844 ;;  divisor         8    9[COMRAM] long long 
  3845 ;; Auto vars:     Size  Location     Type
  3846 ;;  quotient        8   19[COMRAM] long long 
  3847 ;;  sign            1   18[COMRAM] unsigned char 
  3848 ;;  counter         1   17[COMRAM] unsigned char 
  3849 ;; Return value:  Size  Location     Type
  3850 ;;                  8    1[COMRAM] long long 
  3851 ;; Registers used:
  3852 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3853 ;; Tracked objects:
  3854 ;;		On entry : 0/0
  3855 ;;		On exit  : 0/0
  3856 ;;		Unchanged: 0/0
  3857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3858 ;;      Params:        16       0       0       0       0       0       0       0       0
  3859 ;;      Locals:        10       0       0       0       0       0       0       0       0
  3860 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3861 ;;      Totals:        26       0       0       0       0       0       0       0       0
  3862 ;;Total ram usage:       26 bytes
  3863 ;; Hardware stack levels used:    1
  3864 ;; Hardware stack levels required when called:    1
  3865 ;; This function calls:
  3866 ;;		Nothing
  3867 ;; This function is called by:
  3868 ;;		_dtoa
  3869 ;; This function uses a non-reentrant model
  3870 ;;
  3871                           
  3872                           	psect	text17
  3873  0014F2                     __ptext17:
  3874                           	callstack 0
  3875  0014F2                     ___aodiv:
  3876                           	callstack 25
  3877  0014F2  0E00               	movlw	0
  3878  0014F4  6E13               	movwf	___aodiv@sign^0,c
  3879  0014F6  BE11               	btfsc	(___aodiv@divisor+7)^0,7,c
  3880  0014F8  EF82  F00A         	goto	u1140
  3881  0014FC  EF80  F00A         	goto	u1141
  3882  001500                     u1141:
  3883  001500  EF94  F00A         	goto	l1840
  3884  001504                     u1140:
  3885  001504  1E11               	comf	(___aodiv@divisor+7)^0,f,c
  3886  001506  1E10               	comf	(___aodiv@divisor+6)^0,f,c
  3887  001508  1E0F               	comf	(___aodiv@divisor+5)^0,f,c
  3888  00150A  1E0E               	comf	(___aodiv@divisor+4)^0,f,c
  3889  00150C  1E0D               	comf	(___aodiv@divisor+3)^0,f,c
  3890  00150E  1E0C               	comf	(___aodiv@divisor+2)^0,f,c
  3891  001510  1E0B               	comf	(___aodiv@divisor+1)^0,f,c
  3892  001512  6C0A               	negf	___aodiv@divisor^0,c
  3893  001514  0E00               	movlw	0
  3894  001516  220B               	addwfc	(___aodiv@divisor+1)^0,f,c
  3895  001518  220C               	addwfc	(___aodiv@divisor+2)^0,f,c
  3896  00151A  220D               	addwfc	(___aodiv@divisor+3)^0,f,c
  3897  00151C  220E               	addwfc	(___aodiv@divisor+4)^0,f,c
  3898  00151E  220F               	addwfc	(___aodiv@divisor+5)^0,f,c
  3899  001520  2210               	addwfc	(___aodiv@divisor+6)^0,f,c
  3900  001522  2211               	addwfc	(___aodiv@divisor+7)^0,f,c
  3901  001524  0E01               	movlw	1
  3902  001526  6E13               	movwf	___aodiv@sign^0,c
  3903  001528                     l1840:
  3904  001528  BE09               	btfsc	(___aodiv@dividend+7)^0,7,c
  3905  00152A  EF9B  F00A         	goto	u1150
  3906  00152E  EF99  F00A         	goto	u1151
  3907  001532                     u1151:
  3908  001532  EFAD  F00A         	goto	l1846
  3909  001536                     u1150:
  3910  001536  1E09               	comf	(___aodiv@dividend+7)^0,f,c
  3911  001538  1E08               	comf	(___aodiv@dividend+6)^0,f,c
  3912  00153A  1E07               	comf	(___aodiv@dividend+5)^0,f,c
  3913  00153C  1E06               	comf	(___aodiv@dividend+4)^0,f,c
  3914  00153E  1E05               	comf	(___aodiv@dividend+3)^0,f,c
  3915  001540  1E04               	comf	(___aodiv@dividend+2)^0,f,c
  3916  001542  1E03               	comf	(___aodiv@dividend+1)^0,f,c
  3917  001544  6C02               	negf	___aodiv@dividend^0,c
  3918  001546  0E00               	movlw	0
  3919  001548  2203               	addwfc	(___aodiv@dividend+1)^0,f,c
  3920  00154A  2204               	addwfc	(___aodiv@dividend+2)^0,f,c
  3921  00154C  2205               	addwfc	(___aodiv@dividend+3)^0,f,c
  3922  00154E  2206               	addwfc	(___aodiv@dividend+4)^0,f,c
  3923  001550  2207               	addwfc	(___aodiv@dividend+5)^0,f,c
  3924  001552  2208               	addwfc	(___aodiv@dividend+6)^0,f,c
  3925  001554  2209               	addwfc	(___aodiv@dividend+7)^0,f,c
  3926  001556  0E01               	movlw	1
  3927  001558  1A13               	xorwf	___aodiv@sign^0,f,c
  3928  00155A                     l1846:
  3929  00155A  EE20  F014         	lfsr	2,___aodiv@quotient
  3930  00155E  0E07               	movlw	7
  3931  001560                     u1161:
  3932  001560  6ADE               	clrf	postinc2,c
  3933  001562  06E8               	decf	wreg,f,c
  3934  001564  E2FD               	bc	u1161
  3935  001566  500A               	movf	___aodiv@divisor^0,w,c
  3936  001568  100B               	iorwf	(___aodiv@divisor+1)^0,w,c
  3937  00156A  100C               	iorwf	(___aodiv@divisor+2)^0,w,c
  3938  00156C  100D               	iorwf	(___aodiv@divisor+3)^0,w,c
  3939  00156E  100E               	iorwf	(___aodiv@divisor+4)^0,w,c
  3940  001570  100F               	iorwf	(___aodiv@divisor+5)^0,w,c
  3941  001572  1010               	iorwf	(___aodiv@divisor+6)^0,w,c
  3942  001574  1011               	iorwf	(___aodiv@divisor+7)^0,w,c
  3943  001576  B4D8               	btfsc	status,2,c
  3944  001578  EFC0  F00A         	goto	u1171
  3945  00157C  EFC2  F00A         	goto	u1170
  3946  001580                     u1171:
  3947  001580  EF14  F00B         	goto	l1868
  3948  001584                     u1170:
  3949  001584  0E01               	movlw	1
  3950  001586  6E12               	movwf	___aodiv@counter^0,c
  3951  001588  EFD0  F00A         	goto	l1854
  3952  00158C                     l1852:
  3953  00158C  90D8               	bcf	status,0,c
  3954  00158E  360A               	rlcf	___aodiv@divisor^0,f,c
  3955  001590  360B               	rlcf	(___aodiv@divisor+1)^0,f,c
  3956  001592  360C               	rlcf	(___aodiv@divisor+2)^0,f,c
  3957  001594  360D               	rlcf	(___aodiv@divisor+3)^0,f,c
  3958  001596  360E               	rlcf	(___aodiv@divisor+4)^0,f,c
  3959  001598  360F               	rlcf	(___aodiv@divisor+5)^0,f,c
  3960  00159A  3610               	rlcf	(___aodiv@divisor+6)^0,f,c
  3961  00159C  3611               	rlcf	(___aodiv@divisor+7)^0,f,c
  3962  00159E  2A12               	incf	___aodiv@counter^0,f,c
  3963  0015A0                     l1854:
  3964  0015A0  AE11               	btfss	(___aodiv@divisor+7)^0,7,c
  3965  0015A2  EFD5  F00A         	goto	u1181
  3966  0015A6  EFD7  F00A         	goto	u1180
  3967  0015AA                     u1181:
  3968  0015AA  EFC6  F00A         	goto	l1852
  3969  0015AE                     u1180:
  3970  0015AE                     l1856:
  3971  0015AE  90D8               	bcf	status,0,c
  3972  0015B0  3614               	rlcf	___aodiv@quotient^0,f,c
  3973  0015B2  3615               	rlcf	(___aodiv@quotient+1)^0,f,c
  3974  0015B4  3616               	rlcf	(___aodiv@quotient+2)^0,f,c
  3975  0015B6  3617               	rlcf	(___aodiv@quotient+3)^0,f,c
  3976  0015B8  3618               	rlcf	(___aodiv@quotient+4)^0,f,c
  3977  0015BA  3619               	rlcf	(___aodiv@quotient+5)^0,f,c
  3978  0015BC  361A               	rlcf	(___aodiv@quotient+6)^0,f,c
  3979  0015BE  361B               	rlcf	(___aodiv@quotient+7)^0,f,c
  3980  0015C0  500A               	movf	___aodiv@divisor^0,w,c
  3981  0015C2  5C02               	subwf	___aodiv@dividend^0,w,c
  3982  0015C4  500B               	movf	(___aodiv@divisor+1)^0,w,c
  3983  0015C6  5803               	subwfb	(___aodiv@dividend+1)^0,w,c
  3984  0015C8  500C               	movf	(___aodiv@divisor+2)^0,w,c
  3985  0015CA  5804               	subwfb	(___aodiv@dividend+2)^0,w,c
  3986  0015CC  500D               	movf	(___aodiv@divisor+3)^0,w,c
  3987  0015CE  5805               	subwfb	(___aodiv@dividend+3)^0,w,c
  3988  0015D0  500E               	movf	(___aodiv@divisor+4)^0,w,c
  3989  0015D2  5806               	subwfb	(___aodiv@dividend+4)^0,w,c
  3990  0015D4  500F               	movf	(___aodiv@divisor+5)^0,w,c
  3991  0015D6  5807               	subwfb	(___aodiv@dividend+5)^0,w,c
  3992  0015D8  5010               	movf	(___aodiv@divisor+6)^0,w,c
  3993  0015DA  5808               	subwfb	(___aodiv@dividend+6)^0,w,c
  3994  0015DC  5011               	movf	(___aodiv@divisor+7)^0,w,c
  3995  0015DE  5809               	subwfb	(___aodiv@dividend+7)^0,w,c
  3996  0015E0  A0D8               	btfss	status,0,c
  3997  0015E2  EFF5  F00A         	goto	u1191
  3998  0015E6  EFF7  F00A         	goto	u1190
  3999  0015EA                     u1191:
  4000  0015EA  EF08  F00B         	goto	l1864
  4001  0015EE                     u1190:
  4002  0015EE  500A               	movf	___aodiv@divisor^0,w,c
  4003  0015F0  5E02               	subwf	___aodiv@dividend^0,f,c
  4004  0015F2  500B               	movf	(___aodiv@divisor+1)^0,w,c
  4005  0015F4  5A03               	subwfb	(___aodiv@dividend+1)^0,f,c
  4006  0015F6  500C               	movf	(___aodiv@divisor+2)^0,w,c
  4007  0015F8  5A04               	subwfb	(___aodiv@dividend+2)^0,f,c
  4008  0015FA  500D               	movf	(___aodiv@divisor+3)^0,w,c
  4009  0015FC  5A05               	subwfb	(___aodiv@dividend+3)^0,f,c
  4010  0015FE  500E               	movf	(___aodiv@divisor+4)^0,w,c
  4011  001600  5A06               	subwfb	(___aodiv@dividend+4)^0,f,c
  4012  001602  500F               	movf	(___aodiv@divisor+5)^0,w,c
  4013  001604  5A07               	subwfb	(___aodiv@dividend+5)^0,f,c
  4014  001606  5010               	movf	(___aodiv@divisor+6)^0,w,c
  4015  001608  5A08               	subwfb	(___aodiv@dividend+6)^0,f,c
  4016  00160A  5011               	movf	(___aodiv@divisor+7)^0,w,c
  4017  00160C  5A09               	subwfb	(___aodiv@dividend+7)^0,f,c
  4018  00160E  8014               	bsf	___aodiv@quotient^0,0,c
  4019  001610                     l1864:
  4020  001610  90D8               	bcf	status,0,c
  4021  001612  3211               	rrcf	(___aodiv@divisor+7)^0,f,c
  4022  001614  3210               	rrcf	(___aodiv@divisor+6)^0,f,c
  4023  001616  320F               	rrcf	(___aodiv@divisor+5)^0,f,c
  4024  001618  320E               	rrcf	(___aodiv@divisor+4)^0,f,c
  4025  00161A  320D               	rrcf	(___aodiv@divisor+3)^0,f,c
  4026  00161C  320C               	rrcf	(___aodiv@divisor+2)^0,f,c
  4027  00161E  320B               	rrcf	(___aodiv@divisor+1)^0,f,c
  4028  001620  320A               	rrcf	___aodiv@divisor^0,f,c
  4029  001622  2E12               	decfsz	___aodiv@counter^0,f,c
  4030  001624  EFD7  F00A         	goto	l1856
  4031  001628                     l1868:
  4032  001628  5013               	movf	___aodiv@sign^0,w,c
  4033  00162A  B4D8               	btfsc	status,2,c
  4034  00162C  EF1A  F00B         	goto	u1201
  4035  001630  EF1C  F00B         	goto	u1200
  4036  001634                     u1201:
  4037  001634  EF2C  F00B         	goto	l1872
  4038  001638                     u1200:
  4039  001638  1E1B               	comf	(___aodiv@quotient+7)^0,f,c
  4040  00163A  1E1A               	comf	(___aodiv@quotient+6)^0,f,c
  4041  00163C  1E19               	comf	(___aodiv@quotient+5)^0,f,c
  4042  00163E  1E18               	comf	(___aodiv@quotient+4)^0,f,c
  4043  001640  1E17               	comf	(___aodiv@quotient+3)^0,f,c
  4044  001642  1E16               	comf	(___aodiv@quotient+2)^0,f,c
  4045  001644  1E15               	comf	(___aodiv@quotient+1)^0,f,c
  4046  001646  6C14               	negf	___aodiv@quotient^0,c
  4047  001648  0E00               	movlw	0
  4048  00164A  2215               	addwfc	(___aodiv@quotient+1)^0,f,c
  4049  00164C  2216               	addwfc	(___aodiv@quotient+2)^0,f,c
  4050  00164E  2217               	addwfc	(___aodiv@quotient+3)^0,f,c
  4051  001650  2218               	addwfc	(___aodiv@quotient+4)^0,f,c
  4052  001652  2219               	addwfc	(___aodiv@quotient+5)^0,f,c
  4053  001654  221A               	addwfc	(___aodiv@quotient+6)^0,f,c
  4054  001656  221B               	addwfc	(___aodiv@quotient+7)^0,f,c
  4055  001658                     l1872:
  4056  001658  C014  F002         	movff	___aodiv@quotient,?___aodiv
  4057  00165C  C015  F003         	movff	___aodiv@quotient+1,?___aodiv+1
  4058  001660  C016  F004         	movff	___aodiv@quotient+2,?___aodiv+2
  4059  001664  C017  F005         	movff	___aodiv@quotient+3,?___aodiv+3
  4060  001668  C018  F006         	movff	___aodiv@quotient+4,?___aodiv+4
  4061  00166C  C019  F007         	movff	___aodiv@quotient+5,?___aodiv+5
  4062  001670  C01A  F008         	movff	___aodiv@quotient+6,?___aodiv+6
  4063  001674  C01B  F009         	movff	___aodiv@quotient+7,?___aodiv+7
  4064  001678  0012               	return		;funcret
  4065  00167A                     __end_of___aodiv:
  4066                           	callstack 0
  4067                           
  4068 ;; *************** function _USART_RX *****************
  4069 ;; Defined at:
  4070 ;;		line 41 in file "lib_USART.c"
  4071 ;; Parameters:    Size  Location     Type
  4072 ;;		None
  4073 ;; Auto vars:     Size  Location     Type
  4074 ;;		None
  4075 ;; Return value:  Size  Location     Type
  4076 ;;                  1    wreg      unsigned char 
  4077 ;; Registers used:
  4078 ;;		wreg, status,2, status,0
  4079 ;; Tracked objects:
  4080 ;;		On entry : 0/0
  4081 ;;		On exit  : 0/0
  4082 ;;		Unchanged: 0/0
  4083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4084 ;;      Params:         0       0       0       0       0       0       0       0       0
  4085 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4086 ;;      Temps:          8       0       0       0       0       0       0       0       0
  4087 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4088 ;;Total ram usage:        8 bytes
  4089 ;; Hardware stack levels used:    1
  4090 ;; Hardware stack levels required when called:    1
  4091 ;; This function calls:
  4092 ;;		Nothing
  4093 ;; This function is called by:
  4094 ;;		_main
  4095 ;; This function uses a non-reentrant model
  4096 ;;
  4097                           
  4098                           	psect	text18
  4099  001BC8                     __ptext18:
  4100                           	callstack 0
  4101  001BC8                     _USART_RX:
  4102                           	callstack 29
  4103  001BC8                     
  4104                           ;lib_USART.c: 42:        if(((~RCSTAbits.FERR) & (~RCSTAbits.OERR))== 0)
  4105  001BC8  B2AB               	btfsc	171,1,c	;volatile
  4106  001BCA  EFE9  F00D         	goto	u1851
  4107  001BCE  EFEC  F00D         	goto	u1850
  4108  001BD2                     u1851:
  4109  001BD2  0E01               	movlw	1
  4110  001BD4  EFED  F00D         	goto	u1860
  4111  001BD8                     u1850:
  4112  001BD8  0E00               	movlw	0
  4113  001BDA                     u1860:
  4114  001BDA  6E02               	movwf	??_USART_RX^0,c
  4115  001BDC  6A03               	clrf	(??_USART_RX+1)^0,c
  4116  001BDE  1C02               	comf	??_USART_RX^0,w,c
  4117  001BE0  6E04               	movwf	(??_USART_RX+2)^0,c
  4118  001BE2  1C03               	comf	(??_USART_RX+1)^0,w,c
  4119  001BE4  6E05               	movwf	(??_USART_RX+3)^0,c
  4120  001BE6  B4AB               	btfsc	171,2,c	;volatile
  4121  001BE8  EFF8  F00D         	goto	u1871
  4122  001BEC  EFFB  F00D         	goto	u1870
  4123  001BF0                     u1871:
  4124  001BF0  0E01               	movlw	1
  4125  001BF2  EFFC  F00D         	goto	u1880
  4126  001BF6                     u1870:
  4127  001BF6  0E00               	movlw	0
  4128  001BF8                     u1880:
  4129  001BF8  6E06               	movwf	(??_USART_RX+4)^0,c
  4130  001BFA  6A07               	clrf	(??_USART_RX+5)^0,c
  4131  001BFC  1C06               	comf	(??_USART_RX+4)^0,w,c
  4132  001BFE  6E08               	movwf	(??_USART_RX+6)^0,c
  4133  001C00  1C07               	comf	(??_USART_RX+5)^0,w,c
  4134  001C02  6E09               	movwf	(??_USART_RX+7)^0,c
  4135  001C04  5004               	movf	(??_USART_RX+2)^0,w,c
  4136  001C06  1608               	andwf	(??_USART_RX+6)^0,f,c
  4137  001C08  5005               	movf	(??_USART_RX+3)^0,w,c
  4138  001C0A  1609               	andwf	(??_USART_RX+7)^0,f,c
  4139  001C0C  5008               	movf	(??_USART_RX+6)^0,w,c
  4140  001C0E  1009               	iorwf	(??_USART_RX+7)^0,w,c
  4141  001C10  A4D8               	btfss	status,2,c
  4142  001C12  EF0D  F00E         	goto	u1891
  4143  001C16  EF0F  F00E         	goto	u1890
  4144  001C1A                     u1891:
  4145  001C1A  EF19  F00E         	goto	l2294
  4146  001C1E                     u1890:
  4147  001C1E                     
  4148                           ;lib_USART.c: 43:     {;lib_USART.c: 45:      RCSTAbits.SPEN = 0;
  4149  001C1E  9EAB               	bcf	171,7,c	;volatile
  4150  001C20                     
  4151                           ;lib_USART.c: 46:      _delay((unsigned long)((1)*(48000000/4000.0)));
  4152  001C20  0E10               	movlw	16
  4153  001C22  6E02               	movwf	??_USART_RX^0,c
  4154  001C24  0E94               	movlw	148
  4155  001C26                     u2367:
  4156  001C26  2EE8               	decfsz	wreg,f,c
  4157  001C28  D7FE               	bra	u2367
  4158  001C2A  2E02               	decfsz	??_USART_RX^0,f,c
  4159  001C2C  D7FC               	bra	u2367
  4160  001C2E  D000               	nop2	
  4161  001C30                     
  4162                           ;lib_USART.c: 47:       RCSTAbits.SPEN = 1;
  4163  001C30  8EAB               	bsf	171,7,c	;volatile
  4164  001C32                     l2294:
  4165                           
  4166                           ;lib_USART.c: 49:     return RCREG;
  4167  001C32  50AE               	movf	174,w,c	;volatile
  4168  001C34  0012               	return		;funcret
  4169  001C36                     __end_of_USART_RX:
  4170                           	callstack 0
  4171                           
  4172 ;; *************** function _USART_Init *****************
  4173 ;; Defined at:
  4174 ;;		line 13 in file "lib_USART.c"
  4175 ;; Parameters:    Size  Location     Type
  4176 ;;  BAUD            4   15[COMRAM] long 
  4177 ;; Auto vars:     Size  Location     Type
  4178 ;;		None
  4179 ;; Return value:  Size  Location     Type
  4180 ;;                  1    wreg      void 
  4181 ;; Registers used:
  4182 ;;		wreg, status,2, status,0, cstack
  4183 ;; Tracked objects:
  4184 ;;		On entry : 0/0
  4185 ;;		On exit  : 0/0
  4186 ;;		Unchanged: 0/0
  4187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4188 ;;      Params:         4       0       0       0       0       0       0       0       0
  4189 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4190 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4191 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4192 ;;Total ram usage:        8 bytes
  4193 ;; Hardware stack levels used:    1
  4194 ;; Hardware stack levels required when called:    2
  4195 ;; This function calls:
  4196 ;;		___aldiv
  4197 ;; This function is called by:
  4198 ;;		_main
  4199 ;; This function uses a non-reentrant model
  4200 ;;
  4201                           
  4202                           	psect	text19
  4203  001B58                     __ptext19:
  4204                           	callstack 0
  4205  001B58                     _USART_Init:
  4206                           	callstack 28
  4207  001B58                     
  4208                           ;lib_USART.c: 15:     TRISCbits.RC6 = 0;
  4209  001B58  9C94               	bcf	148,6,c	;volatile
  4210                           
  4211                           ;lib_USART.c: 16:     TRISCbits.RC7 = 1;
  4212  001B5A  8E94               	bsf	148,7,c	;volatile
  4213  001B5C                     
  4214                           ;lib_USART.c: 19:     SPBRG = (unsigned char)(((48000000)/BAUD)/64-1);
  4215  001B5C  C010  F006         	movff	USART_Init@BAUD,___aldiv@divisor
  4216  001B60  C011  F007         	movff	USART_Init@BAUD+1,___aldiv@divisor+1
  4217  001B64  C012  F008         	movff	USART_Init@BAUD+2,___aldiv@divisor+2
  4218  001B68  C013  F009         	movff	USART_Init@BAUD+3,___aldiv@divisor+3
  4219  001B6C  0E00               	movlw	0
  4220  001B6E  6E02               	movwf	___aldiv@dividend^0,c
  4221  001B70  0E6C               	movlw	108
  4222  001B72  6E03               	movwf	(___aldiv@dividend+1)^0,c
  4223  001B74  0EDC               	movlw	220
  4224  001B76  6E04               	movwf	(___aldiv@dividend+2)^0,c
  4225  001B78  0E02               	movlw	2
  4226  001B7A  6E05               	movwf	(___aldiv@dividend+3)^0,c
  4227  001B7C  ECEF  F00B         	call	___aldiv	;wreg free
  4228  001B80  C002  F014         	movff	?___aldiv,_USART_Init$1603
  4229  001B84  C003  F015         	movff	?___aldiv+1,_USART_Init$1603+1
  4230  001B88  C004  F016         	movff	?___aldiv+2,_USART_Init$1603+2
  4231  001B8C  C005  F017         	movff	?___aldiv+3,_USART_Init$1603+3
  4232                           
  4233                           ;lib_USART.c: 19:     SPBRG = (unsigned char)(((48000000)/BAUD)/64-1);
  4234  001B90  C014  F002         	movff	_USART_Init$1603,___aldiv@dividend
  4235  001B94  C015  F003         	movff	_USART_Init$1603+1,___aldiv@dividend+1
  4236  001B98  C016  F004         	movff	_USART_Init$1603+2,___aldiv@dividend+2
  4237  001B9C  C017  F005         	movff	_USART_Init$1603+3,___aldiv@dividend+3
  4238  001BA0  0E40               	movlw	64
  4239  001BA2  6E06               	movwf	___aldiv@divisor^0,c
  4240  001BA4  0E00               	movlw	0
  4241  001BA6  6E07               	movwf	(___aldiv@divisor+1)^0,c
  4242  001BA8  0E00               	movlw	0
  4243  001BAA  6E08               	movwf	(___aldiv@divisor+2)^0,c
  4244  001BAC  0E00               	movlw	0
  4245  001BAE  6E09               	movwf	(___aldiv@divisor+3)^0,c
  4246  001BB0  ECEF  F00B         	call	___aldiv	;wreg free
  4247  001BB4  0402               	decf	?___aldiv^0,w,c
  4248  001BB6  6EAF               	movwf	175,c	;volatile
  4249  001BB8                     
  4250                           ;lib_USART.c: 22:     TXSTAbits.BRGH = 0;
  4251  001BB8  94AC               	bcf	172,2,c	;volatile
  4252  001BBA                     
  4253                           ;lib_USART.c: 23:     TXSTAbits.SYNC = 0;
  4254  001BBA  98AC               	bcf	172,4,c	;volatile
  4255  001BBC                     
  4256                           ;lib_USART.c: 24:     RCSTAbits.SPEN = 1;
  4257  001BBC  8EAB               	bsf	171,7,c	;volatile
  4258  001BBE                     
  4259                           ;lib_USART.c: 27:     TXSTAbits.TX9 = 0;
  4260  001BBE  9CAC               	bcf	172,6,c	;volatile
  4261  001BC0                     
  4262                           ;lib_USART.c: 28:     TXSTAbits.TXEN = 1;
  4263  001BC0  8AAC               	bsf	172,5,c	;volatile
  4264  001BC2                     
  4265                           ;lib_USART.c: 31:     RCSTAbits.RC9 = 0;
  4266  001BC2  9CAB               	bcf	171,6,c	;volatile
  4267  001BC4                     
  4268                           ;lib_USART.c: 32:     RCSTAbits.CREN = 1;
  4269  001BC4  88AB               	bsf	171,4,c	;volatile
  4270  001BC6  0012               	return		;funcret
  4271  001BC8                     __end_of_USART_Init:
  4272                           	callstack 0
  4273                           
  4274 ;; *************** function ___aldiv *****************
  4275 ;; Defined at:
  4276 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aldiv.c"
  4277 ;; Parameters:    Size  Location     Type
  4278 ;;  dividend        4    1[COMRAM] long 
  4279 ;;  divisor         4    5[COMRAM] long 
  4280 ;; Auto vars:     Size  Location     Type
  4281 ;;  quotient        4   11[COMRAM] long 
  4282 ;;  sign            1   10[COMRAM] unsigned char 
  4283 ;;  counter         1    9[COMRAM] unsigned char 
  4284 ;; Return value:  Size  Location     Type
  4285 ;;                  4    1[COMRAM] long 
  4286 ;; Registers used:
  4287 ;;		wreg, status,2, status,0
  4288 ;; Tracked objects:
  4289 ;;		On entry : 0/0
  4290 ;;		On exit  : 0/0
  4291 ;;		Unchanged: 0/0
  4292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4293 ;;      Params:         8       0       0       0       0       0       0       0       0
  4294 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4295 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4296 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4297 ;;Total ram usage:       14 bytes
  4298 ;; Hardware stack levels used:    1
  4299 ;; Hardware stack levels required when called:    1
  4300 ;; This function calls:
  4301 ;;		Nothing
  4302 ;; This function is called by:
  4303 ;;		_USART_Init
  4304 ;; This function uses a non-reentrant model
  4305 ;;
  4306                           
  4307                           	psect	text20
  4308  0017DE                     __ptext20:
  4309                           	callstack 0
  4310  0017DE                     ___aldiv:
  4311                           	callstack 28
  4312  0017DE  0E00               	movlw	0
  4313  0017E0  6E0B               	movwf	___aldiv@sign^0,c
  4314  0017E2  BE09               	btfsc	(___aldiv@divisor+3)^0,7,c
  4315  0017E4  EFF8  F00B         	goto	u1780
  4316  0017E8  EFF6  F00B         	goto	u1781
  4317  0017EC                     u1781:
  4318  0017EC  EF02  F00C         	goto	l2224
  4319  0017F0                     u1780:
  4320  0017F0  1E09               	comf	(___aldiv@divisor+3)^0,f,c
  4321  0017F2  1E08               	comf	(___aldiv@divisor+2)^0,f,c
  4322  0017F4  1E07               	comf	(___aldiv@divisor+1)^0,f,c
  4323  0017F6  6C06               	negf	___aldiv@divisor^0,c
  4324  0017F8  0E00               	movlw	0
  4325  0017FA  2207               	addwfc	(___aldiv@divisor+1)^0,f,c
  4326  0017FC  2208               	addwfc	(___aldiv@divisor+2)^0,f,c
  4327  0017FE  2209               	addwfc	(___aldiv@divisor+3)^0,f,c
  4328  001800  0E01               	movlw	1
  4329  001802  6E0B               	movwf	___aldiv@sign^0,c
  4330  001804                     l2224:
  4331  001804  BE05               	btfsc	(___aldiv@dividend+3)^0,7,c
  4332  001806  EF09  F00C         	goto	u1790
  4333  00180A  EF07  F00C         	goto	u1791
  4334  00180E                     u1791:
  4335  00180E  EF13  F00C         	goto	l2230
  4336  001812                     u1790:
  4337  001812  1E05               	comf	(___aldiv@dividend+3)^0,f,c
  4338  001814  1E04               	comf	(___aldiv@dividend+2)^0,f,c
  4339  001816  1E03               	comf	(___aldiv@dividend+1)^0,f,c
  4340  001818  6C02               	negf	___aldiv@dividend^0,c
  4341  00181A  0E00               	movlw	0
  4342  00181C  2203               	addwfc	(___aldiv@dividend+1)^0,f,c
  4343  00181E  2204               	addwfc	(___aldiv@dividend+2)^0,f,c
  4344  001820  2205               	addwfc	(___aldiv@dividend+3)^0,f,c
  4345  001822  0E01               	movlw	1
  4346  001824  1A0B               	xorwf	___aldiv@sign^0,f,c
  4347  001826                     l2230:
  4348  001826  0E00               	movlw	0
  4349  001828  6E0C               	movwf	___aldiv@quotient^0,c
  4350  00182A  0E00               	movlw	0
  4351  00182C  6E0D               	movwf	(___aldiv@quotient+1)^0,c
  4352  00182E  0E00               	movlw	0
  4353  001830  6E0E               	movwf	(___aldiv@quotient+2)^0,c
  4354  001832  0E00               	movlw	0
  4355  001834  6E0F               	movwf	(___aldiv@quotient+3)^0,c
  4356  001836  5006               	movf	___aldiv@divisor^0,w,c
  4357  001838  1007               	iorwf	(___aldiv@divisor+1)^0,w,c
  4358  00183A  1008               	iorwf	(___aldiv@divisor+2)^0,w,c
  4359  00183C  1009               	iorwf	(___aldiv@divisor+3)^0,w,c
  4360  00183E  B4D8               	btfsc	status,2,c
  4361  001840  EF24  F00C         	goto	u1801
  4362  001844  EF26  F00C         	goto	u1800
  4363  001848                     u1801:
  4364  001848  EF5C  F00C         	goto	l2252
  4365  00184C                     u1800:
  4366  00184C  0E01               	movlw	1
  4367  00184E  6E0A               	movwf	___aldiv@counter^0,c
  4368  001850  EF30  F00C         	goto	l2238
  4369  001854                     l2236:
  4370  001854  90D8               	bcf	status,0,c
  4371  001856  3606               	rlcf	___aldiv@divisor^0,f,c
  4372  001858  3607               	rlcf	(___aldiv@divisor+1)^0,f,c
  4373  00185A  3608               	rlcf	(___aldiv@divisor+2)^0,f,c
  4374  00185C  3609               	rlcf	(___aldiv@divisor+3)^0,f,c
  4375  00185E  2A0A               	incf	___aldiv@counter^0,f,c
  4376  001860                     l2238:
  4377  001860  AE09               	btfss	(___aldiv@divisor+3)^0,7,c
  4378  001862  EF35  F00C         	goto	u1811
  4379  001866  EF37  F00C         	goto	u1810
  4380  00186A                     u1811:
  4381  00186A  EF2A  F00C         	goto	l2236
  4382  00186E                     u1810:
  4383  00186E                     l2240:
  4384  00186E  90D8               	bcf	status,0,c
  4385  001870  360C               	rlcf	___aldiv@quotient^0,f,c
  4386  001872  360D               	rlcf	(___aldiv@quotient+1)^0,f,c
  4387  001874  360E               	rlcf	(___aldiv@quotient+2)^0,f,c
  4388  001876  360F               	rlcf	(___aldiv@quotient+3)^0,f,c
  4389  001878  5006               	movf	___aldiv@divisor^0,w,c
  4390  00187A  5C02               	subwf	___aldiv@dividend^0,w,c
  4391  00187C  5007               	movf	(___aldiv@divisor+1)^0,w,c
  4392  00187E  5803               	subwfb	(___aldiv@dividend+1)^0,w,c
  4393  001880  5008               	movf	(___aldiv@divisor+2)^0,w,c
  4394  001882  5804               	subwfb	(___aldiv@dividend+2)^0,w,c
  4395  001884  5009               	movf	(___aldiv@divisor+3)^0,w,c
  4396  001886  5805               	subwfb	(___aldiv@dividend+3)^0,w,c
  4397  001888  A0D8               	btfss	status,0,c
  4398  00188A  EF49  F00C         	goto	u1821
  4399  00188E  EF4B  F00C         	goto	u1820
  4400  001892                     u1821:
  4401  001892  EF54  F00C         	goto	l2248
  4402  001896                     u1820:
  4403  001896  5006               	movf	___aldiv@divisor^0,w,c
  4404  001898  5E02               	subwf	___aldiv@dividend^0,f,c
  4405  00189A  5007               	movf	(___aldiv@divisor+1)^0,w,c
  4406  00189C  5A03               	subwfb	(___aldiv@dividend+1)^0,f,c
  4407  00189E  5008               	movf	(___aldiv@divisor+2)^0,w,c
  4408  0018A0  5A04               	subwfb	(___aldiv@dividend+2)^0,f,c
  4409  0018A2  5009               	movf	(___aldiv@divisor+3)^0,w,c
  4410  0018A4  5A05               	subwfb	(___aldiv@dividend+3)^0,f,c
  4411  0018A6  800C               	bsf	___aldiv@quotient^0,0,c
  4412  0018A8                     l2248:
  4413  0018A8  90D8               	bcf	status,0,c
  4414  0018AA  3209               	rrcf	(___aldiv@divisor+3)^0,f,c
  4415  0018AC  3208               	rrcf	(___aldiv@divisor+2)^0,f,c
  4416  0018AE  3207               	rrcf	(___aldiv@divisor+1)^0,f,c
  4417  0018B0  3206               	rrcf	___aldiv@divisor^0,f,c
  4418  0018B2  2E0A               	decfsz	___aldiv@counter^0,f,c
  4419  0018B4  EF37  F00C         	goto	l2240
  4420  0018B8                     l2252:
  4421  0018B8  500B               	movf	___aldiv@sign^0,w,c
  4422  0018BA  B4D8               	btfsc	status,2,c
  4423  0018BC  EF62  F00C         	goto	u1831
  4424  0018C0  EF64  F00C         	goto	u1830
  4425  0018C4                     u1831:
  4426  0018C4  EF6C  F00C         	goto	l2256
  4427  0018C8                     u1830:
  4428  0018C8  1E0F               	comf	(___aldiv@quotient+3)^0,f,c
  4429  0018CA  1E0E               	comf	(___aldiv@quotient+2)^0,f,c
  4430  0018CC  1E0D               	comf	(___aldiv@quotient+1)^0,f,c
  4431  0018CE  6C0C               	negf	___aldiv@quotient^0,c
  4432  0018D0  0E00               	movlw	0
  4433  0018D2  220D               	addwfc	(___aldiv@quotient+1)^0,f,c
  4434  0018D4  220E               	addwfc	(___aldiv@quotient+2)^0,f,c
  4435  0018D6  220F               	addwfc	(___aldiv@quotient+3)^0,f,c
  4436  0018D8                     l2256:
  4437  0018D8  C00C  F002         	movff	___aldiv@quotient,?___aldiv
  4438  0018DC  C00D  F003         	movff	___aldiv@quotient+1,?___aldiv+1
  4439  0018E0  C00E  F004         	movff	___aldiv@quotient+2,?___aldiv+2
  4440  0018E4  C00F  F005         	movff	___aldiv@quotient+3,?___aldiv+3
  4441  0018E8  0012               	return		;funcret
  4442  0018EA                     __end_of___aldiv:
  4443                           	callstack 0
  4444                           
  4445 ;; *************** function _Tx_i *****************
  4446 ;; Defined at:
  4447 ;;		line 177 in file "main.c"
  4448 ;; Parameters:    Size  Location     Type
  4449 ;;		None
  4450 ;; Auto vars:     Size  Location     Type
  4451 ;;		None
  4452 ;; Return value:  Size  Location     Type
  4453 ;;                  1    wreg      void 
  4454 ;; Registers used:
  4455 ;;		wreg, status,2, status,0, cstack
  4456 ;; Tracked objects:
  4457 ;;		On entry : 0/0
  4458 ;;		On exit  : 0/0
  4459 ;;		Unchanged: 0/0
  4460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4461 ;;      Params:         0       0       0       0       0       0       0       0       0
  4462 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4463 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4464 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4465 ;;Total ram usage:        2 bytes
  4466 ;; Hardware stack levels used:    1
  4467 ;; Hardware stack levels required when called:    2
  4468 ;; This function calls:
  4469 ;;		_USART_TX
  4470 ;; This function is called by:
  4471 ;;		_main
  4472 ;; This function uses a non-reentrant model
  4473 ;;
  4474                           
  4475                           	psect	text21
  4476  001FA4                     __ptext21:
  4477                           	callstack 0
  4478  001FA4                     _Tx_i:
  4479                           	callstack 28
  4480  001FA4                     
  4481                           ;main.c: 179:     if(codigo_aula==102)
  4482  001FA4  0E66               	movlw	102
  4483  001FA6  0100               	movlb	0	; () banked
  4484  001FA8  196B               	xorwf	_codigo_aula& (0+255),w,b
  4485  001FAA  A4D8               	btfss	status,2,c
  4486  001FAC  EFDA  F00F         	goto	u1941
  4487  001FB0  EFDC  F00F         	goto	u1940
  4488  001FB4                     u1941:
  4489  001FB4  EFEE  F00F         	goto	l131
  4490  001FB8                     u1940:
  4491  001FB8                     
  4492                           ; BSR set to: 0
  4493                           ;main.c: 180:     {;main.c: 181:         LATCbits.LATC2=1;
  4494  001FB8  848B               	bsf	139,2,c	;volatile
  4495  001FBA                     
  4496                           ; BSR set to: 0
  4497                           ;main.c: 182:         USART_TX(i);
  4498  001FBA  5058               	movf	_i^0,w,c
  4499  001FBC  EC8E  F010         	call	_USART_TX
  4500  001FC0                     
  4501                           ;main.c: 183:         _delay((unsigned long)((150)*(48000000/4000.0)));
  4502  001FC0  0E0A               	movlw	10
  4503  001FC2  6E04               	movwf	(??_Tx_i+1)^0,c
  4504  001FC4  0E22               	movlw	34
  4505  001FC6  6E03               	movwf	??_Tx_i^0,c
  4506  001FC8  0EA1               	movlw	161
  4507  001FCA                     u2377:
  4508  001FCA  2EE8               	decfsz	wreg,f,c
  4509  001FCC  D7FE               	bra	u2377
  4510  001FCE  2E03               	decfsz	??_Tx_i^0,f,c
  4511  001FD0  D7FC               	bra	u2377
  4512  001FD2  2E04               	decfsz	(??_Tx_i+1)^0,f,c
  4513  001FD4  D7FA               	bra	u2377
  4514  001FD6  F000               	nop	
  4515                           
  4516                           ;main.c: 184:     }
  4517  001FD8  EFEF  F00F         	goto	l133
  4518  001FDC                     l131:
  4519                           
  4520                           ; BSR set to: 0
  4521                           ;main.c: 187:     {;main.c: 188:         LATCbits.LATC2=0;
  4522  001FDC  948B               	bcf	139,2,c	;volatile
  4523  001FDE                     l133:
  4524  001FDE  0012               	return		;funcret
  4525  001FE0                     __end_of_Tx_i:
  4526                           	callstack 0
  4527                           
  4528 ;; *************** function _USART_TX *****************
  4529 ;; Defined at:
  4530 ;;		line 36 in file "lib_USART.c"
  4531 ;; Parameters:    Size  Location     Type
  4532 ;;  data            1    wreg     unsigned char 
  4533 ;; Auto vars:     Size  Location     Type
  4534 ;;  data            1    1[COMRAM] unsigned char 
  4535 ;; Return value:  Size  Location     Type
  4536 ;;                  1    wreg      void 
  4537 ;; Registers used:
  4538 ;;		wreg
  4539 ;; Tracked objects:
  4540 ;;		On entry : 0/0
  4541 ;;		On exit  : 0/0
  4542 ;;		Unchanged: 0/0
  4543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4544 ;;      Params:         0       0       0       0       0       0       0       0       0
  4545 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4546 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4547 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4548 ;;Total ram usage:        1 bytes
  4549 ;; Hardware stack levels used:    1
  4550 ;; Hardware stack levels required when called:    1
  4551 ;; This function calls:
  4552 ;;		Nothing
  4553 ;; This function is called by:
  4554 ;;		_Tx_i
  4555 ;; This function uses a non-reentrant model
  4556 ;;
  4557                           
  4558                           	psect	text22
  4559  00211C                     __ptext22:
  4560                           	callstack 0
  4561  00211C                     _USART_TX:
  4562                           	callstack 28
  4563                           
  4564                           ;incstack = 0
  4565                           ;USART_TX@data stored from wreg
  4566  00211C  6E02               	movwf	USART_TX@data^0,c
  4567  00211E                     l20:
  4568  00211E  A2AC               	btfss	172,1,c	;volatile
  4569  002120  EF94  F010         	goto	u1771
  4570  002124  EF96  F010         	goto	u1770
  4571  002128                     u1771:
  4572  002128  EF8F  F010         	goto	l20
  4573  00212C                     u1770:
  4574  00212C                     
  4575                           ;lib_USART.c: 38:     TXREG = data;
  4576  00212C  C002  FFAD         	movff	USART_TX@data,4013	;volatile
  4577  002130  0012               	return		;funcret
  4578  002132                     __end_of_USART_TX:
  4579                           	callstack 0
  4580                           
  4581 ;; *************** function _LCD_gotoXY *****************
  4582 ;; Defined at:
  4583 ;;		line 87 in file "MiLCD.c"
  4584 ;; Parameters:    Size  Location     Type
  4585 ;;  x               2    3[COMRAM] int 
  4586 ;;  y               2    5[COMRAM] int 
  4587 ;; Auto vars:     Size  Location     Type
  4588 ;;		None
  4589 ;; Return value:  Size  Location     Type
  4590 ;;                  1    wreg      void 
  4591 ;; Registers used:
  4592 ;;		wreg, status,2, status,0, cstack
  4593 ;; Tracked objects:
  4594 ;;		On entry : 0/0
  4595 ;;		On exit  : 0/0
  4596 ;;		Unchanged: 0/0
  4597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4598 ;;      Params:         4       0       0       0       0       0       0       0       0
  4599 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4600 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4601 ;;      Totals:         5       0       0       0       0       0       0       0       0
  4602 ;;Total ram usage:        5 bytes
  4603 ;; Hardware stack levels used:    1
  4604 ;; Hardware stack levels required when called:    2
  4605 ;; This function calls:
  4606 ;;		_LCD_Comando
  4607 ;; This function is called by:
  4608 ;;		_main
  4609 ;; This function uses a non-reentrant model
  4610 ;;
  4611                           
  4612                           	psect	text23
  4613  001EEC                     __ptext23:
  4614                           	callstack 0
  4615  001EEC                     _LCD_gotoXY:
  4616                           	callstack 28
  4617  001EEC                     
  4618                           ;MiLCD.c: 87: void LCD_gotoXY (int x,int y);MiLCD.c: 88: { _delay((unsigned long)((150)*
      +                          (48000000/4000000.0)));
  4619  001EEC  0E03               	movlw	3
  4620  001EEE  6E08               	movwf	??_LCD_gotoXY^0,c
  4621  001EF0  0E55               	movlw	85
  4622  001EF2                     u2387:
  4623  001EF2  2EE8               	decfsz	wreg,f,c
  4624  001EF4  D7FE               	bra	u2387
  4625  001EF6  2E08               	decfsz	??_LCD_gotoXY^0,f,c
  4626  001EF8  D7FC               	bra	u2387
  4627  001EFA  F000               	nop	
  4628  001EFC                     
  4629                           ;MiLCD.c: 90:     if ( x>0 )
  4630  001EFC  BE05               	btfsc	(LCD_gotoXY@x+1)^0,7,c
  4631  001EFE  EF89  F00F         	goto	u1901
  4632  001F02  5005               	movf	(LCD_gotoXY@x+1)^0,w,c
  4633  001F04  E108               	bnz	u1900
  4634  001F06  0404               	decf	LCD_gotoXY@x^0,w,c
  4635  001F08  A0D8               	btfss	status,0,c
  4636  001F0A  EF89  F00F         	goto	u1901
  4637  001F0E  EF8B  F00F         	goto	u1900
  4638  001F12                     u1901:
  4639  001F12  EF91  F00F         	goto	l2364
  4640  001F16                     u1900:
  4641  001F16                     
  4642                           ;MiLCD.c: 91:     {;MiLCD.c: 92:         LCD_Comando((0xC0)+y);
  4643  001F16  5006               	movf	LCD_gotoXY@y^0,w,c
  4644  001F18  0FC0               	addlw	192
  4645  001F1A  ECB2  F00E         	call	_LCD_Comando
  4646                           
  4647                           ;MiLCD.c: 93:     }
  4648  001F1E  EF95  F00F         	goto	l168
  4649  001F22                     l2364:
  4650                           
  4651                           ;MiLCD.c: 95:     {;MiLCD.c: 96:         LCD_Comando((0x80)+y);
  4652  001F22  5006               	movf	LCD_gotoXY@y^0,w,c
  4653  001F24  0F80               	addlw	128
  4654  001F26  ECB2  F00E         	call	_LCD_Comando
  4655  001F2A                     l168:
  4656  001F2A  0012               	return		;funcret
  4657  001F2C                     __end_of_LCD_gotoXY:
  4658                           	callstack 0
  4659                           
  4660 ;; *************** function _LCD_Init *****************
  4661 ;; Defined at:
  4662 ;;		line 18 in file "MiLCD.c"
  4663 ;; Parameters:    Size  Location     Type
  4664 ;;		None
  4665 ;; Auto vars:     Size  Location     Type
  4666 ;;		None
  4667 ;; Return value:  Size  Location     Type
  4668 ;;                  1    wreg      void 
  4669 ;; Registers used:
  4670 ;;		wreg, status,2, status,0, cstack
  4671 ;; Tracked objects:
  4672 ;;		On entry : 0/0
  4673 ;;		On exit  : 0/0
  4674 ;;		Unchanged: 0/0
  4675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4676 ;;      Params:         0       0       0       0       0       0       0       0       0
  4677 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4678 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4679 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4680 ;;Total ram usage:        1 bytes
  4681 ;; Hardware stack levels used:    1
  4682 ;; Hardware stack levels required when called:    2
  4683 ;; This function calls:
  4684 ;;		_LCD_Comando
  4685 ;; This function is called by:
  4686 ;;		_main
  4687 ;; This function uses a non-reentrant model
  4688 ;;
  4689                           
  4690                           	psect	text24
  4691  0018EA                     __ptext24:
  4692                           	callstack 0
  4693  0018EA                     _LCD_Init:
  4694                           	callstack 28
  4695  0018EA                     
  4696                           ;MiLCD.c: 21:    TRISDbits.TRISD6 =0;
  4697  0018EA  9C95               	bcf	149,6,c	;volatile
  4698                           
  4699                           ;MiLCD.c: 22:    TRISDbits.TRISD5 =0;
  4700  0018EC  9A95               	bcf	149,5,c	;volatile
  4701                           
  4702                           ;MiLCD.c: 23:    TRISDbits.TRISD4 =0;
  4703  0018EE  9895               	bcf	149,4,c	;volatile
  4704  0018F0                     
  4705                           ;MiLCD.c: 24:    PORTD &= 0xf0;
  4706  0018F0  0EF0               	movlw	240
  4707  0018F2  1683               	andwf	131,f,c	;volatile
  4708                           
  4709                           ;MiLCD.c: 25:    TRISD &= 0xf0;
  4710  0018F4  0EF0               	movlw	240
  4711  0018F6  1695               	andwf	149,f,c	;volatile
  4712  0018F8                     
  4713                           ;MiLCD.c: 26:    LATDbits.LATD6 = 0;
  4714  0018F8  9C8C               	bcf	140,6,c	;volatile
  4715  0018FA                     
  4716                           ;MiLCD.c: 27:    LATDbits.LATD5 = 0;
  4717  0018FA  9A8C               	bcf	140,5,c	;volatile
  4718  0018FC                     
  4719                           ;MiLCD.c: 28:    LATDbits.LATD4 = 0;
  4720  0018FC  988C               	bcf	140,4,c	;volatile
  4721  0018FE                     
  4722                           ;MiLCD.c: 29:    _delay((unsigned long)((15)*(48000000/4000.0)));
  4723  0018FE  0EEA               	movlw	234
  4724  001900  6E04               	movwf	??_LCD_Init^0,c
  4725  001902  0EC3               	movlw	195
  4726  001904                     u2397:
  4727  001904  2EE8               	decfsz	wreg,f,c
  4728  001906  D7FE               	bra	u2397
  4729  001908  2E04               	decfsz	??_LCD_Init^0,f,c
  4730  00190A  D7FC               	bra	u2397
  4731  00190C  F000               	nop	
  4732  00190E                     
  4733                           ;MiLCD.c: 31:    LCD_Comando (0x30);
  4734  00190E  0E30               	movlw	48
  4735  001910  ECB2  F00E         	call	_LCD_Comando
  4736  001914                     
  4737                           ;MiLCD.c: 32:    _delay((unsigned long)((5)*(48000000/4000.0)));
  4738  001914  0E4E               	movlw	78
  4739  001916  6E04               	movwf	??_LCD_Init^0,c
  4740  001918  0EEB               	movlw	235
  4741  00191A                     u2407:
  4742  00191A  2EE8               	decfsz	wreg,f,c
  4743  00191C  D7FE               	bra	u2407
  4744  00191E  2E04               	decfsz	??_LCD_Init^0,f,c
  4745  001920  D7FC               	bra	u2407
  4746  001922  F000               	nop	
  4747  001924                     
  4748                           ;MiLCD.c: 33:    LCD_Comando (0x30);
  4749  001924  0E30               	movlw	48
  4750  001926  ECB2  F00E         	call	_LCD_Comando
  4751  00192A                     
  4752                           ;MiLCD.c: 34:    _delay((unsigned long)((100)*(48000000/4000000.0)));
  4753  00192A  0EF0               	movlw	240
  4754  00192C                     u2417:
  4755  00192C  D000               	nop2	
  4756  00192E  2EE8               	decfsz	wreg,f,c
  4757  001930  D7FD               	bra	u2417
  4758  001932                     
  4759                           ;MiLCD.c: 35:    LCD_Comando (0x32);
  4760  001932  0E32               	movlw	50
  4761  001934  ECB2  F00E         	call	_LCD_Comando
  4762  001938                     
  4763                           ;MiLCD.c: 36:    _delay((unsigned long)((150)*(48000000/4000000.0)));
  4764  001938  0E03               	movlw	3
  4765  00193A  6E04               	movwf	??_LCD_Init^0,c
  4766  00193C  0E55               	movlw	85
  4767  00193E                     u2427:
  4768  00193E  2EE8               	decfsz	wreg,f,c
  4769  001940  D7FE               	bra	u2427
  4770  001942  2E04               	decfsz	??_LCD_Init^0,f,c
  4771  001944  D7FC               	bra	u2427
  4772  001946  F000               	nop	
  4773  001948                     
  4774                           ;MiLCD.c: 37:    _delay((unsigned long)((150)*(48000000/4000000.0)));
  4775  001948  0E03               	movlw	3
  4776  00194A  6E04               	movwf	??_LCD_Init^0,c
  4777  00194C  0E55               	movlw	85
  4778  00194E                     u2437:
  4779  00194E  2EE8               	decfsz	wreg,f,c
  4780  001950  D7FE               	bra	u2437
  4781  001952  2E04               	decfsz	??_LCD_Init^0,f,c
  4782  001954  D7FC               	bra	u2437
  4783  001956  F000               	nop	
  4784  001958                     
  4785                           ;MiLCD.c: 38:    LCD_Comando (0x28);
  4786  001958  0E28               	movlw	40
  4787  00195A  ECB2  F00E         	call	_LCD_Comando
  4788  00195E                     
  4789                           ;MiLCD.c: 39:    _delay((unsigned long)((150)*(48000000/4000000.0)));
  4790  00195E  0E03               	movlw	3
  4791  001960  6E04               	movwf	??_LCD_Init^0,c
  4792  001962  0E55               	movlw	85
  4793  001964                     u2447:
  4794  001964  2EE8               	decfsz	wreg,f,c
  4795  001966  D7FE               	bra	u2447
  4796  001968  2E04               	decfsz	??_LCD_Init^0,f,c
  4797  00196A  D7FC               	bra	u2447
  4798  00196C  F000               	nop	
  4799  00196E                     
  4800                           ;MiLCD.c: 40:    LCD_Comando (0x08);
  4801  00196E  0E08               	movlw	8
  4802  001970  ECB2  F00E         	call	_LCD_Comando
  4803  001974                     
  4804                           ;MiLCD.c: 41:    _delay((unsigned long)((150)*(48000000/4000000.0)));
  4805  001974  0E03               	movlw	3
  4806  001976  6E04               	movwf	??_LCD_Init^0,c
  4807  001978  0E55               	movlw	85
  4808  00197A                     u2457:
  4809  00197A  2EE8               	decfsz	wreg,f,c
  4810  00197C  D7FE               	bra	u2457
  4811  00197E  2E04               	decfsz	??_LCD_Init^0,f,c
  4812  001980  D7FC               	bra	u2457
  4813  001982  F000               	nop	
  4814  001984                     
  4815                           ;MiLCD.c: 43:    LCD_Comando (0x01);
  4816  001984  0E01               	movlw	1
  4817  001986  ECB2  F00E         	call	_LCD_Comando
  4818  00198A                     
  4819                           ;MiLCD.c: 44:    _delay((unsigned long)((5)*(48000000/4000.0)));
  4820  00198A  0E4E               	movlw	78
  4821  00198C  6E04               	movwf	??_LCD_Init^0,c
  4822  00198E  0EEB               	movlw	235
  4823  001990                     u2467:
  4824  001990  2EE8               	decfsz	wreg,f,c
  4825  001992  D7FE               	bra	u2467
  4826  001994  2E04               	decfsz	??_LCD_Init^0,f,c
  4827  001996  D7FC               	bra	u2467
  4828  001998  F000               	nop	
  4829  00199A                     
  4830                           ;MiLCD.c: 46:    LCD_Comando (0x06);
  4831  00199A  0E06               	movlw	6
  4832  00199C  ECB2  F00E         	call	_LCD_Comando
  4833  0019A0                     
  4834                           ;MiLCD.c: 47:    _delay((unsigned long)((150)*(48000000/4000000.0)));
  4835  0019A0  0E03               	movlw	3
  4836  0019A2  6E04               	movwf	??_LCD_Init^0,c
  4837  0019A4  0E55               	movlw	85
  4838  0019A6                     u2477:
  4839  0019A6  2EE8               	decfsz	wreg,f,c
  4840  0019A8  D7FE               	bra	u2477
  4841  0019AA  2E04               	decfsz	??_LCD_Init^0,f,c
  4842  0019AC  D7FC               	bra	u2477
  4843  0019AE  F000               	nop	
  4844  0019B0                     
  4845                           ;MiLCD.c: 48:    LCD_Comando (0x0C);
  4846  0019B0  0E0C               	movlw	12
  4847  0019B2  ECB2  F00E         	call	_LCD_Comando
  4848  0019B6                     
  4849                           ;MiLCD.c: 49:    _delay((unsigned long)((150)*(48000000/4000000.0)));
  4850  0019B6  0E03               	movlw	3
  4851  0019B8  6E04               	movwf	??_LCD_Init^0,c
  4852  0019BA  0E55               	movlw	85
  4853  0019BC                     u2487:
  4854  0019BC  2EE8               	decfsz	wreg,f,c
  4855  0019BE  D7FE               	bra	u2487
  4856  0019C0  2E04               	decfsz	??_LCD_Init^0,f,c
  4857  0019C2  D7FC               	bra	u2487
  4858  0019C4  F000               	nop	
  4859  0019C6  0012               	return		;funcret
  4860  0019C8                     __end_of_LCD_Init:
  4861                           	callstack 0
  4862                           
  4863 ;; *************** function _LCD_Comando *****************
  4864 ;; Defined at:
  4865 ;;		line 54 in file "MiLCD.c"
  4866 ;; Parameters:    Size  Location     Type
  4867 ;;  cmd             1    wreg     unsigned char 
  4868 ;; Auto vars:     Size  Location     Type
  4869 ;;  cmd             1    2[COMRAM] unsigned char 
  4870 ;; Return value:  Size  Location     Type
  4871 ;;                  1    wreg      void 
  4872 ;; Registers used:
  4873 ;;		wreg, status,2, status,0
  4874 ;; Tracked objects:
  4875 ;;		On entry : 0/0
  4876 ;;		On exit  : 0/0
  4877 ;;		Unchanged: 0/0
  4878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4879 ;;      Params:         0       0       0       0       0       0       0       0       0
  4880 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4881 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4882 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4883 ;;Total ram usage:        2 bytes
  4884 ;; Hardware stack levels used:    1
  4885 ;; Hardware stack levels required when called:    1
  4886 ;; This function calls:
  4887 ;;		Nothing
  4888 ;; This function is called by:
  4889 ;;		_main
  4890 ;;		_LCD_Init
  4891 ;;		_LCD_gotoXY
  4892 ;; This function uses a non-reentrant model
  4893 ;;
  4894                           
  4895                           	psect	text25
  4896  001D64                     __ptext25:
  4897                           	callstack 0
  4898  001D64                     _LCD_Comando:
  4899                           	callstack 28
  4900                           
  4901                           ;incstack = 0
  4902                           ;LCD_Comando@cmd stored from wreg
  4903  001D64  6E03               	movwf	LCD_Comando@cmd^0,c
  4904  001D66                     
  4905                           ;MiLCD.c: 54: void LCD_Comando (unsigned char cmd);MiLCD.c: 55: { _delay((unsigned long)
      +                          ((150)*(48000000/4000000.0)));
  4906  001D66  0E03               	movlw	3
  4907  001D68  6E02               	movwf	??_LCD_Comando^0,c
  4908  001D6A  0E55               	movlw	85
  4909  001D6C                     u2497:
  4910  001D6C  2EE8               	decfsz	wreg,f,c
  4911  001D6E  D7FE               	bra	u2497
  4912  001D70  2E02               	decfsz	??_LCD_Comando^0,f,c
  4913  001D72  D7FC               	bra	u2497
  4914  001D74  F000               	nop	
  4915  001D76                     
  4916                           ;MiLCD.c: 57:     TRISD &= 0xf0;
  4917  001D76  0EF0               	movlw	240
  4918  001D78  1695               	andwf	149,f,c	;volatile
  4919  001D7A                     
  4920                           ;MiLCD.c: 58:     PORTD &= 0xf0;
  4921  001D7A  0EF0               	movlw	240
  4922  001D7C  1683               	andwf	131,f,c	;volatile
  4923  001D7E                     
  4924                           ;MiLCD.c: 61:     PORTD = PORTD | ((cmd>>4)& 0x0f);
  4925  001D7E  3803               	swapf	LCD_Comando@cmd^0,w,c
  4926  001D80  0B0F               	andlw	15
  4927  001D82  0B0F               	andlw	15
  4928  001D84  1083               	iorwf	131,w,c	;volatile
  4929  001D86  6E83               	movwf	131,c	;volatile
  4930  001D88                     
  4931                           ;MiLCD.c: 64:     LATDbits.LATD6 = 0;
  4932  001D88  9C8C               	bcf	140,6,c	;volatile
  4933  001D8A                     
  4934                           ;MiLCD.c: 65:     LATDbits.LATD5 = 0;
  4935  001D8A  9A8C               	bcf	140,5,c	;volatile
  4936  001D8C                     
  4937                           ;MiLCD.c: 67:     _delay((unsigned long)((15)*(48000000/4000000.0)));
  4938  001D8C  0E3C               	movlw	60
  4939  001D8E                     u2507:
  4940  001D8E  2EE8               	decfsz	wreg,f,c
  4941  001D90  D7FE               	bra	u2507
  4942  001D92                     
  4943                           ;MiLCD.c: 68:     LATDbits.LATD4 = 1;
  4944  001D92  888C               	bsf	140,4,c	;volatile
  4945  001D94                     
  4946                           ;MiLCD.c: 69:     _delay((unsigned long)((15)*(48000000/4000000.0)));
  4947  001D94  0E3C               	movlw	60
  4948  001D96                     u2517:
  4949  001D96  2EE8               	decfsz	wreg,f,c
  4950  001D98  D7FE               	bra	u2517
  4951  001D9A                     
  4952                           ;MiLCD.c: 70:     LATDbits.LATD4 = 0;
  4953  001D9A  988C               	bcf	140,4,c	;volatile
  4954  001D9C                     
  4955                           ;MiLCD.c: 74:     PORTD &= 0xf0;
  4956  001D9C  0EF0               	movlw	240
  4957  001D9E  1683               	andwf	131,f,c	;volatile
  4958  001DA0                     
  4959                           ;MiLCD.c: 75:     PORTD = PORTD | (cmd & 0x0f);
  4960  001DA0  5003               	movf	LCD_Comando@cmd^0,w,c
  4961  001DA2  0B0F               	andlw	15
  4962  001DA4  1083               	iorwf	131,w,c	;volatile
  4963  001DA6  6E83               	movwf	131,c	;volatile
  4964  001DA8                     
  4965                           ;MiLCD.c: 76:     _delay((unsigned long)((15)*(48000000/4000000.0)));
  4966  001DA8  0E3C               	movlw	60
  4967  001DAA                     u2527:
  4968  001DAA  2EE8               	decfsz	wreg,f,c
  4969  001DAC  D7FE               	bra	u2527
  4970  001DAE                     
  4971                           ;MiLCD.c: 77:     LATDbits.LATD4 = 1;
  4972  001DAE  888C               	bsf	140,4,c	;volatile
  4973  001DB0                     
  4974                           ;MiLCD.c: 78:     _delay((unsigned long)((15)*(48000000/4000000.0)));
  4975  001DB0  0E3C               	movlw	60
  4976  001DB2                     u2537:
  4977  001DB2  2EE8               	decfsz	wreg,f,c
  4978  001DB4  D7FE               	bra	u2537
  4979  001DB6                     
  4980                           ;MiLCD.c: 79:     LATDbits.LATD4 = 0;
  4981  001DB6  988C               	bcf	140,4,c	;volatile
  4982  001DB8                     
  4983                           ;MiLCD.c: 81:     TRISD |= 0x0f;
  4984  001DB8  0E0F               	movlw	15
  4985  001DBA  1295               	iorwf	149,f,c	;volatile
  4986  001DBC  0012               	return		;funcret
  4987  001DBE                     __end_of_LCD_Comando:
  4988                           	callstack 0
  4989                           
  4990 ;; *************** function _LCD_Cadena *****************
  4991 ;; Defined at:
  4992 ;;		line 101 in file "MiLCD.c"
  4993 ;; Parameters:    Size  Location     Type
  4994 ;;  dato            2    3[COMRAM] PTR const unsigned char 
  4995 ;;		 -> STR_11(17), STR_10(17), STR_9(17), STR_6(16), 
  4996 ;;		 -> cont(10), texto(32), STR_3(16), STR_2(16), 
  4997 ;;		 -> STR_1(17), 
  4998 ;; Auto vars:     Size  Location     Type
  4999 ;;		None
  5000 ;; Return value:  Size  Location     Type
  5001 ;;                  1    wreg      void 
  5002 ;; Registers used:
  5003 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5004 ;; Tracked objects:
  5005 ;;		On entry : 0/0
  5006 ;;		On exit  : 0/0
  5007 ;;		Unchanged: 0/0
  5008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5009 ;;      Params:         2       0       0       0       0       0       0       0       0
  5010 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5011 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5012 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5013 ;;Total ram usage:        3 bytes
  5014 ;; Hardware stack levels used:    1
  5015 ;; Hardware stack levels required when called:    2
  5016 ;; This function calls:
  5017 ;;		_LCD_Data
  5018 ;; This function is called by:
  5019 ;;		_main
  5020 ;; This function uses a non-reentrant model
  5021 ;;
  5022                           
  5023                           	psect	text26
  5024  001C36                     __ptext26:
  5025                           	callstack 0
  5026  001C36                     _LCD_Cadena:
  5027                           	callstack 28
  5028  001C36                     
  5029                           ;MiLCD.c: 101: void LCD_Cadena ( const char *dato);MiLCD.c: 102: {;MiLCD.c: 103:     whi
      +                          le (*dato)
  5030  001C36  EF39  F00E         	goto	l2376
  5031  001C3A                     l2370:
  5032                           
  5033                           ;MiLCD.c: 104:     {;MiLCD.c: 105:        _delay((unsigned long)((150)*(48000000/4000000
      +                          .0)));
  5034  001C3A  0E03               	movlw	3
  5035  001C3C  6E06               	movwf	??_LCD_Cadena^0,c
  5036  001C3E  0E55               	movlw	85
  5037  001C40                     u2547:
  5038  001C40  2EE8               	decfsz	wreg,f,c
  5039  001C42  D7FE               	bra	u2547
  5040  001C44  2E06               	decfsz	??_LCD_Cadena^0,f,c
  5041  001C46  D7FC               	bra	u2547
  5042  001C48  F000               	nop	
  5043  001C4A                     
  5044                           ;MiLCD.c: 106:         LCD_Data (*dato);
  5045  001C4A  C004  FFF6         	movff	LCD_Cadena@dato,tblptrl
  5046  001C4E  C005  FFF7         	movff	LCD_Cadena@dato+1,tblptrh
  5047  001C52  6AF8               	clrf	tblptru,c
  5048  001C54  0E07               	movlw	(high __ramtop+-1)
  5049  001C56  64F7               	cpfsgt	tblptrh,c
  5050  001C58  D003               	bra	u1917
  5051  001C5A  0008               	tblrd		*
  5052  001C5C  50F5               	movf	tablat,w,c
  5053  001C5E  D005               	bra	u1910
  5054  001C60                     u1917:
  5055  001C60  CFF6 FFE1          	movff	tblptrl,fsr1l
  5056  001C64  CFF7 FFE2          	movff	tblptrh,fsr1h
  5057  001C68  50E7               	movf	indf1,w,c
  5058  001C6A                     u1910:
  5059  001C6A  ECDF  F00E         	call	_LCD_Data
  5060  001C6E                     
  5061                           ;MiLCD.c: 107:         dato++;
  5062  001C6E  4A04               	infsnz	LCD_Cadena@dato^0,f,c
  5063  001C70  2A05               	incf	(LCD_Cadena@dato+1)^0,f,c
  5064  001C72                     l2376:
  5065                           
  5066                           ;MiLCD.c: 103:     while (*dato)
  5067  001C72  C004  FFF6         	movff	LCD_Cadena@dato,tblptrl
  5068  001C76  C005  FFF7         	movff	LCD_Cadena@dato+1,tblptrh
  5069  001C7A  6AF8               	clrf	tblptru,c
  5070  001C7C  0E07               	movlw	(high __ramtop+-1)
  5071  001C7E  64F7               	cpfsgt	tblptrh,c
  5072  001C80  D003               	bra	u1927
  5073  001C82  0008               	tblrd		*
  5074  001C84  50F5               	movf	tablat,w,c
  5075  001C86  D005               	bra	u1920
  5076  001C88                     u1927:
  5077  001C88  CFF6 FFE1          	movff	tblptrl,fsr1l
  5078  001C8C  CFF7 FFE2          	movff	tblptrh,fsr1h
  5079  001C90  50E7               	movf	indf1,w,c
  5080  001C92                     u1920:
  5081  001C92  0900               	iorlw	0
  5082  001C94  A4D8               	btfss	status,2,c
  5083  001C96  EF4F  F00E         	goto	u1931
  5084  001C9A  EF51  F00E         	goto	u1930
  5085  001C9E                     u1931:
  5086  001C9E  EF1D  F00E         	goto	l2370
  5087  001CA2                     u1930:
  5088  001CA2  0012               	return		;funcret
  5089  001CA4                     __end_of_LCD_Cadena:
  5090                           	callstack 0
  5091                           
  5092 ;; *************** function _LCD_Data *****************
  5093 ;; Defined at:
  5094 ;;		line 112 in file "MiLCD.c"
  5095 ;; Parameters:    Size  Location     Type
  5096 ;;  data            1    wreg     unsigned char 
  5097 ;; Auto vars:     Size  Location     Type
  5098 ;;  data            1    2[COMRAM] unsigned char 
  5099 ;; Return value:  Size  Location     Type
  5100 ;;                  1    wreg      void 
  5101 ;; Registers used:
  5102 ;;		wreg, status,2, status,0
  5103 ;; Tracked objects:
  5104 ;;		On entry : 0/0
  5105 ;;		On exit  : 0/0
  5106 ;;		Unchanged: 0/0
  5107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5108 ;;      Params:         0       0       0       0       0       0       0       0       0
  5109 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5110 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5111 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5112 ;;Total ram usage:        2 bytes
  5113 ;; Hardware stack levels used:    1
  5114 ;; Hardware stack levels required when called:    1
  5115 ;; This function calls:
  5116 ;;		Nothing
  5117 ;; This function is called by:
  5118 ;;		_LCD_Cadena
  5119 ;; This function uses a non-reentrant model
  5120 ;;
  5121                           
  5122                           	psect	text27
  5123  001DBE                     __ptext27:
  5124                           	callstack 0
  5125  001DBE                     _LCD_Data:
  5126                           	callstack 28
  5127                           
  5128                           ;incstack = 0
  5129                           ;LCD_Data@data stored from wreg
  5130  001DBE  6E03               	movwf	LCD_Data@data^0,c
  5131  001DC0                     
  5132                           ;MiLCD.c: 112: void LCD_Data (char data);MiLCD.c: 113: {;MiLCD.c: 114:    _delay((unsign
      +                          ed long)((150)*(48000000/4000000.0)));
  5133  001DC0  0E03               	movlw	3
  5134  001DC2  6E02               	movwf	??_LCD_Data^0,c
  5135  001DC4  0E55               	movlw	85
  5136  001DC6                     u2557:
  5137  001DC6  2EE8               	decfsz	wreg,f,c
  5138  001DC8  D7FE               	bra	u2557
  5139  001DCA  2E02               	decfsz	??_LCD_Data^0,f,c
  5140  001DCC  D7FC               	bra	u2557
  5141  001DCE  F000               	nop	
  5142  001DD0                     
  5143                           ;MiLCD.c: 115:     PORTD &= 0xf0;
  5144  001DD0  0EF0               	movlw	240
  5145  001DD2  1683               	andwf	131,f,c	;volatile
  5146  001DD4                     
  5147                           ;MiLCD.c: 116:     TRISD &= 0xf0;
  5148  001DD4  0EF0               	movlw	240
  5149  001DD6  1695               	andwf	149,f,c	;volatile
  5150  001DD8                     
  5151                           ;MiLCD.c: 118:     PORTD = PORTD | ((data>>4) & 0x0f);
  5152  001DD8  3803               	swapf	LCD_Data@data^0,w,c
  5153  001DDA  0B0F               	andlw	15
  5154  001DDC  0B0F               	andlw	15
  5155  001DDE  1083               	iorwf	131,w,c	;volatile
  5156  001DE0  6E83               	movwf	131,c	;volatile
  5157  001DE2                     
  5158                           ;MiLCD.c: 120:     LATDbits.LATD5 = 1;
  5159  001DE2  8A8C               	bsf	140,5,c	;volatile
  5160  001DE4                     
  5161                           ;MiLCD.c: 121:     LATDbits.LATD6 = 0;
  5162  001DE4  9C8C               	bcf	140,6,c	;volatile
  5163  001DE6                     
  5164                           ;MiLCD.c: 123:     _delay((unsigned long)((15)*(48000000/4000000.0)));
  5165  001DE6  0E3C               	movlw	60
  5166  001DE8                     u2567:
  5167  001DE8  2EE8               	decfsz	wreg,f,c
  5168  001DEA  D7FE               	bra	u2567
  5169  001DEC                     
  5170                           ;MiLCD.c: 124:     LATDbits.LATD4 = 1;
  5171  001DEC  888C               	bsf	140,4,c	;volatile
  5172  001DEE                     
  5173                           ;MiLCD.c: 125:     _delay((unsigned long)((15)*(48000000/4000000.0)));
  5174  001DEE  0E3C               	movlw	60
  5175  001DF0                     u2577:
  5176  001DF0  2EE8               	decfsz	wreg,f,c
  5177  001DF2  D7FE               	bra	u2577
  5178  001DF4                     
  5179                           ;MiLCD.c: 126:     LATDbits.LATD4 = 0;
  5180  001DF4  988C               	bcf	140,4,c	;volatile
  5181  001DF6                     
  5182                           ;MiLCD.c: 128:     PORTD &= 0xf0;
  5183  001DF6  0EF0               	movlw	240
  5184  001DF8  1683               	andwf	131,f,c	;volatile
  5185  001DFA                     
  5186                           ;MiLCD.c: 129:     PORTD |= (data&0x0f);
  5187  001DFA  5003               	movf	LCD_Data@data^0,w,c
  5188  001DFC  0B0F               	andlw	15
  5189  001DFE  1283               	iorwf	131,f,c	;volatile
  5190  001E00                     
  5191                           ;MiLCD.c: 131:     _delay((unsigned long)((15)*(48000000/4000000.0)));
  5192  001E00  0E3C               	movlw	60
  5193  001E02                     u2587:
  5194  001E02  2EE8               	decfsz	wreg,f,c
  5195  001E04  D7FE               	bra	u2587
  5196  001E06                     
  5197                           ;MiLCD.c: 132:     LATDbits.LATD4 = 1;
  5198  001E06  888C               	bsf	140,4,c	;volatile
  5199  001E08                     
  5200                           ;MiLCD.c: 133:     _delay((unsigned long)((15)*(48000000/4000000.0)));
  5201  001E08  0E3C               	movlw	60
  5202  001E0A                     u2597:
  5203  001E0A  2EE8               	decfsz	wreg,f,c
  5204  001E0C  D7FE               	bra	u2597
  5205  001E0E                     
  5206                           ;MiLCD.c: 134:     LATDbits.LATD4 = 0;
  5207  001E0E  988C               	bcf	140,4,c	;volatile
  5208  001E10                     
  5209                           ;MiLCD.c: 136:     TRISD |= 0x0f;
  5210  001E10  0E0F               	movlw	15
  5211  001E12  1295               	iorwf	149,f,c	;volatile
  5212  001E14  0012               	return		;funcret
  5213  001E16                     __end_of_LCD_Data:
  5214                           	callstack 0
  5215                           
  5216 ;; *************** function _Init_Int *****************
  5217 ;; Defined at:
  5218 ;;		line 64 in file "main.c"
  5219 ;; Parameters:    Size  Location     Type
  5220 ;;		None
  5221 ;; Auto vars:     Size  Location     Type
  5222 ;;		None
  5223 ;; Return value:  Size  Location     Type
  5224 ;;                  1    wreg      void 
  5225 ;; Registers used:
  5226 ;;		None
  5227 ;; Tracked objects:
  5228 ;;		On entry : 0/0
  5229 ;;		On exit  : 0/0
  5230 ;;		Unchanged: 0/0
  5231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5232 ;;      Params:         0       0       0       0       0       0       0       0       0
  5233 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5234 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5235 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5236 ;;Total ram usage:        0 bytes
  5237 ;; Hardware stack levels used:    1
  5238 ;; Hardware stack levels required when called:    1
  5239 ;; This function calls:
  5240 ;;		Nothing
  5241 ;; This function is called by:
  5242 ;;		_main
  5243 ;; This function uses a non-reentrant model
  5244 ;;
  5245                           
  5246                           	psect	text28
  5247  002144                     __ptext28:
  5248                           	callstack 0
  5249  002144                     _Init_Int:
  5250                           	callstack 29
  5251  002144                     
  5252                           ;main.c: 66:     INTCON3bits.INT1E = 1;
  5253  002144  86F0               	bsf	240,3,c	;volatile
  5254                           
  5255                           ;main.c: 67:     INTCON3bits.INT1F = 0;
  5256  002146  90F0               	bcf	240,0,c	;volatile
  5257                           
  5258                           ;main.c: 68:     INTCON2bits.INTEDG2 = 0;
  5259  002148  98F1               	bcf	241,4,c	;volatile
  5260                           
  5261                           ;main.c: 69:     INTCONbits.GIE = 1;
  5262  00214A  8EF2               	bsf	242,7,c	;volatile
  5263  00214C  0012               	return		;funcret
  5264  00214E                     __end_of_Init_Int:
  5265                           	callstack 0
  5266                           
  5267 ;; *************** function _InitPort *****************
  5268 ;; Defined at:
  5269 ;;		line 54 in file "main.c"
  5270 ;; Parameters:    Size  Location     Type
  5271 ;;		None
  5272 ;; Auto vars:     Size  Location     Type
  5273 ;;		None
  5274 ;; Return value:  Size  Location     Type
  5275 ;;                  1    wreg      void 
  5276 ;; Registers used:
  5277 ;;		wreg, status,2
  5278 ;; Tracked objects:
  5279 ;;		On entry : 0/0
  5280 ;;		On exit  : 0/0
  5281 ;;		Unchanged: 0/0
  5282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5283 ;;      Params:         0       0       0       0       0       0       0       0       0
  5284 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5285 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5286 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5287 ;;Total ram usage:        0 bytes
  5288 ;; Hardware stack levels used:    1
  5289 ;; Hardware stack levels required when called:    1
  5290 ;; This function calls:
  5291 ;;		Nothing
  5292 ;; This function is called by:
  5293 ;;		_main
  5294 ;; This function uses a non-reentrant model
  5295 ;;
  5296                           
  5297                           	psect	text29
  5298  002132                     __ptext29:
  5299                           	callstack 0
  5300  002132                     _InitPort:
  5301                           	callstack 29
  5302  002132                     
  5303                           ;main.c: 56:     ADCON1bits.PCFG = 0xFF;
  5304  002132  0E0F               	movlw	15
  5305  002134  12C1               	iorwf	193,f,c	;volatile
  5306  002136                     
  5307                           ;main.c: 57:     TRISCbits.RC0 = 1;
  5308  002136  8094               	bsf	148,0,c	;volatile
  5309  002138                     
  5310                           ;main.c: 58:     TRISCbits.RC1 = 1;
  5311  002138  8294               	bsf	148,1,c	;volatile
  5312  00213A                     
  5313                           ;main.c: 59:     TRISCbits.RC2=0;
  5314  00213A  9494               	bcf	148,2,c	;volatile
  5315  00213C                     
  5316                           ;main.c: 60:     TRISEbits.RE0=0;
  5317  00213C  9096               	bcf	150,0,c	;volatile
  5318                           
  5319                           ;main.c: 61:     TRISB=0b00000111;
  5320  00213E  0E07               	movlw	7
  5321  002140  6E93               	movwf	147,c	;volatile
  5322  002142  0012               	return		;funcret
  5323  002144                     __end_of_InitPort:
  5324                           	callstack 0
  5325                           
  5326 ;; *************** function _Giro_OUT *****************
  5327 ;; Defined at:
  5328 ;;		line 210 in file "main.c"
  5329 ;; Parameters:    Size  Location     Type
  5330 ;;		None
  5331 ;; Auto vars:     Size  Location     Type
  5332 ;;		None
  5333 ;; Return value:  Size  Location     Type
  5334 ;;                  1    wreg      void 
  5335 ;; Registers used:
  5336 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  5337 ;; Tracked objects:
  5338 ;;		On entry : 0/0
  5339 ;;		On exit  : 0/0
  5340 ;;		Unchanged: 0/0
  5341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5342 ;;      Params:         0       0       0       0       0       0       0       0       0
  5343 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5344 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5345 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5346 ;;Total ram usage:        0 bytes
  5347 ;; Hardware stack levels used:    1
  5348 ;; Hardware stack levels required when called:    1
  5349 ;; This function calls:
  5350 ;;		Nothing
  5351 ;; This function is called by:
  5352 ;;		_main
  5353 ;; This function uses a non-reentrant model
  5354 ;;
  5355                           
  5356                           	psect	text30
  5357  002086                     __ptext30:
  5358                           	callstack 0
  5359  002086                     _Giro_OUT:
  5360                           	callstack 29
  5361  002086                     
  5362                           ;main.c: 212:     if (motor>0)
  5363  002086  0100               	movlb	0	; () banked
  5364  002088  5169               	movf	_motor& (0+255),w,b
  5365  00208A  B4D8               	btfsc	status,2,c
  5366  00208C  EF4A  F010         	goto	u1961
  5367  002090  EF4C  F010         	goto	u1960
  5368  002094                     u1961:
  5369  002094  EF58  F010         	goto	l2414
  5370  002098                     u1960:
  5371  002098                     
  5372                           ; BSR set to: 0
  5373                           ;main.c: 213:     {;main.c: 214:         motor--;
  5374  002098  0769               	decf	_motor& (0+255),f,b
  5375  00209A                     l2412:
  5376                           
  5377                           ; BSR set to: 0
  5378                           ;main.c: 215:         LATB=HORARIO[motor];
  5379  00209A  0E01               	movlw	low _HORARIO
  5380  00209C  2569               	addwf	_motor& (0+255),w,b
  5381  00209E  6EF6               	movwf	tblptrl,c
  5382  0020A0  6AF7               	clrf	tblptrh,c
  5383  0020A2  0E08               	movlw	high _HORARIO
  5384  0020A4  22F7               	addwfc	tblptrh,f,c
  5385  0020A6                     	if	0	;There are less than 3 active tblptr bytes
  5386  0020A6                     	endif
  5387  0020A6  0008               	tblrd		*
  5388  0020A8  CFF5 FF8A          	movff	tablat,3978	;volatile
  5389                           
  5390                           ;main.c: 216:     }
  5391  0020AC  EF5C  F010         	goto	l143
  5392  0020B0                     l2414:
  5393                           
  5394                           ; BSR set to: 0
  5395                           ;main.c: 218:     {;main.c: 219:         motor=3;
  5396  0020B0  0E03               	movlw	3
  5397  0020B2  6F69               	movwf	_motor& (0+255),b
  5398  0020B4  EF4D  F010         	goto	l2412
  5399  0020B8                     l143:
  5400                           
  5401                           ; BSR set to: 0
  5402  0020B8  0012               	return		;funcret
  5403  0020BA                     __end_of_Giro_OUT:
  5404                           	callstack 0
  5405                           
  5406 ;; *************** function _Giro_IN *****************
  5407 ;; Defined at:
  5408 ;;		line 194 in file "main.c"
  5409 ;; Parameters:    Size  Location     Type
  5410 ;;		None
  5411 ;; Auto vars:     Size  Location     Type
  5412 ;;		None
  5413 ;; Return value:  Size  Location     Type
  5414 ;;                  1    wreg      void 
  5415 ;; Registers used:
  5416 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  5417 ;; Tracked objects:
  5418 ;;		On entry : 0/0
  5419 ;;		On exit  : 0/0
  5420 ;;		Unchanged: 0/0
  5421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5422 ;;      Params:         0       0       0       0       0       0       0       0       0
  5423 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5424 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5425 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5426 ;;Total ram usage:        0 bytes
  5427 ;; Hardware stack levels used:    1
  5428 ;; Hardware stack levels required when called:    1
  5429 ;; This function calls:
  5430 ;;		Nothing
  5431 ;; This function is called by:
  5432 ;;		_main
  5433 ;; This function uses a non-reentrant model
  5434 ;;
  5435                           
  5436                           	psect	text31
  5437  0020BA                     __ptext31:
  5438                           	callstack 0
  5439  0020BA                     _Giro_IN:
  5440                           	callstack 29
  5441  0020BA                     
  5442                           ;main.c: 196:     if (motor<3)
  5443  0020BA  0E03               	movlw	3
  5444  0020BC  0100               	movlb	0	; () banked
  5445  0020BE  6169               	cpfslt	_motor& (0+255),b
  5446  0020C0  EF64  F010         	goto	u1951
  5447  0020C4  EF66  F010         	goto	u1950
  5448  0020C8                     u1951:
  5449  0020C8  EF72  F010         	goto	l2404
  5450  0020CC                     u1950:
  5451  0020CC                     
  5452                           ; BSR set to: 0
  5453                           ;main.c: 197:     {;main.c: 198:         motor++;
  5454  0020CC  2B69               	incf	_motor& (0+255),f,b
  5455  0020CE                     l2402:
  5456                           
  5457                           ; BSR set to: 0
  5458                           ;main.c: 199:         LATB=HORARIO[motor];
  5459  0020CE  0E01               	movlw	low _HORARIO
  5460  0020D0  2569               	addwf	_motor& (0+255),w,b
  5461  0020D2  6EF6               	movwf	tblptrl,c
  5462  0020D4  6AF7               	clrf	tblptrh,c
  5463  0020D6  0E08               	movlw	high _HORARIO
  5464  0020D8  22F7               	addwfc	tblptrh,f,c
  5465  0020DA                     	if	0	;There are less than 3 active tblptr bytes
  5466  0020DA                     	endif
  5467  0020DA  0008               	tblrd		*
  5468  0020DC  CFF5 FF8A          	movff	tablat,3978	;volatile
  5469                           
  5470                           ;main.c: 200:     }
  5471  0020E0  EF76  F010         	goto	l138
  5472  0020E4                     l2404:
  5473                           
  5474                           ; BSR set to: 0
  5475                           ;main.c: 202:     {;main.c: 203:         motor=0;
  5476  0020E4  0E00               	movlw	0
  5477  0020E6  6F69               	movwf	_motor& (0+255),b
  5478  0020E8  EF67  F010         	goto	l2402
  5479  0020EC                     l138:
  5480                           
  5481                           ; BSR set to: 0
  5482  0020EC  0012               	return		;funcret
  5483  0020EE                     __end_of_Giro_IN:
  5484                           	callstack 0
  5485                           
  5486 ;; *************** function _INT_isr *****************
  5487 ;; Defined at:
  5488 ;;		line 168 in file "main.c"
  5489 ;; Parameters:    Size  Location     Type
  5490 ;;		None
  5491 ;; Auto vars:     Size  Location     Type
  5492 ;;		None
  5493 ;; Return value:  Size  Location     Type
  5494 ;;                  1    wreg      void 
  5495 ;; Registers used:
  5496 ;;		wreg, status,2, status,0
  5497 ;; Tracked objects:
  5498 ;;		On entry : 0/0
  5499 ;;		On exit  : 0/0
  5500 ;;		Unchanged: 0/0
  5501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5502 ;;      Params:         0       0       0       0       0       0       0       0       0
  5503 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5504 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5505 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5506 ;;Total ram usage:        1 bytes
  5507 ;; Hardware stack levels used:    1
  5508 ;; This function calls:
  5509 ;;		Nothing
  5510 ;; This function is called by:
  5511 ;;		Interrupt level 2
  5512 ;; This function uses a non-reentrant model
  5513 ;;
  5514                           
  5515                           	psect	intcode
  5516  000008                     __pintcode:
  5517                           	callstack 0
  5518  000008                     _INT_isr:
  5519                           	callstack 22
  5520                           
  5521                           ; BSR set to: 0
  5522                           ;incstack = 0
  5523  000008  8259               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5524  00000A  ED77  F010         	call	int_func,f	;refresh shadow registers
  5525                           
  5526                           	psect	intcode_body
  5527  0020EE                     __pintcode_body:
  5528                           	callstack 22
  5529  0020EE                     int_func:
  5530                           	callstack 22
  5531  0020EE  0006               	pop		; remove dummy address from shadow register refresh
  5532  0020F0                     
  5533                           ;main.c: 170:     EMERGENCIA = ~EMERGENCIA;
  5534  0020F0  0100               	movlb	0	; () banked
  5535  0020F2  1F68               	comf	_EMERGENCIA& (0+255),f,b
  5536                           
  5537                           ;main.c: 171:     aux=~aux;
  5538  0020F4  1F6A               	comf	_aux& (0+255),f,b
  5539  0020F6                     
  5540                           ; BSR set to: 0
  5541                           ;main.c: 172:     LATEbits.LATE0=~LATEbits.LATE0;
  5542  0020F6  B08D               	btfsc	141,0,c	;volatile
  5543  0020F8  EF80  F010         	goto	i2u210_41
  5544  0020FC  EF83  F010         	goto	i2u210_40
  5545  002100                     i2u210_41:
  5546  002100  0E01               	movlw	1
  5547  002102  EF84  F010         	goto	i2u210_46
  5548  002106                     i2u210_40:
  5549  002106  0E00               	movlw	0
  5550  002108                     i2u210_46:
  5551  002108  0AFF               	xorlw	255
  5552  00210A  6E01               	movwf	??_INT_isr^0,c
  5553  00210C  508D               	movf	141,w,c	;volatile
  5554  00210E  1801               	xorwf	??_INT_isr^0,w,c
  5555  002110  0BFE               	andlw	-2
  5556  002112  1801               	xorwf	??_INT_isr^0,w,c
  5557  002114  6E8D               	movwf	141,c	;volatile
  5558  002116                     
  5559                           ; BSR set to: 0
  5560                           ;main.c: 173:     INTCON3bits.INT1F = 0;
  5561  002116  90F0               	bcf	240,0,c	;volatile
  5562  002118                     
  5563                           ; BSR set to: 0
  5564  002118  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5565  00211A  0011               	retfie		f
  5566  00211C                     __end_of_INT_isr:
  5567                           	callstack 0
  5568                           
  5569                           	psect	rparam
  5570  0000                     
  5571                           	psect	temp
  5572  000059                     btemp:
  5573                           	callstack 0
  5574  000059                     	ds	1
  5575  0000                     int$flags	set	btemp
  5576  0000                     wtemp8	set	btemp+1
  5577  0000                     ttemp5	set	btemp+1
  5578  0000                     ttemp6	set	btemp+4
  5579  0000                     ttemp7	set	btemp+8
  5580                           
  5581                           	psect	idloc
  5582                           
  5583                           ;Config register IDLOC0 @ 0x200000
  5584                           ;	unspecified, using default values
  5585  200000                     	org	2097152
  5586  200000  FF                 	db	255
  5587                           
  5588                           ;Config register IDLOC1 @ 0x200001
  5589                           ;	unspecified, using default values
  5590  200001                     	org	2097153
  5591  200001  FF                 	db	255
  5592                           
  5593                           ;Config register IDLOC2 @ 0x200002
  5594                           ;	unspecified, using default values
  5595  200002                     	org	2097154
  5596  200002  FF                 	db	255
  5597                           
  5598                           ;Config register IDLOC3 @ 0x200003
  5599                           ;	unspecified, using default values
  5600  200003                     	org	2097155
  5601  200003  FF                 	db	255
  5602                           
  5603                           ;Config register IDLOC4 @ 0x200004
  5604                           ;	unspecified, using default values
  5605  200004                     	org	2097156
  5606  200004  FF                 	db	255
  5607                           
  5608                           ;Config register IDLOC5 @ 0x200005
  5609                           ;	unspecified, using default values
  5610  200005                     	org	2097157
  5611  200005  FF                 	db	255
  5612                           
  5613                           ;Config register IDLOC6 @ 0x200006
  5614                           ;	unspecified, using default values
  5615  200006                     	org	2097158
  5616  200006  FF                 	db	255
  5617                           
  5618                           ;Config register IDLOC7 @ 0x200007
  5619                           ;	unspecified, using default values
  5620  200007                     	org	2097159
  5621  200007  FF                 	db	255
  5622                           
  5623                           	psect	config
  5624                           
  5625                           ;Config register CONFIG1L @ 0x300000
  5626                           ;	PLL Prescaler Selection bits
  5627                           ;	PLLDIV = 5, Divide by 5 (20 MHz oscillator input)
  5628                           ;	System Clock Postscaler Selection bits
  5629                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  5630                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  5631                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  5632  300000                     	org	3145728
  5633  300000  04                 	db	4
  5634                           
  5635                           ;Config register CONFIG1H @ 0x300001
  5636                           ;	Oscillator Selection bits
  5637                           ;	FOSC = HSPLL_HS, HS oscillator, PLL enabled (HSPLL)
  5638                           ;	Fail-Safe Clock Monitor Enable bit
  5639                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5640                           ;	Internal/External Oscillator Switchover bit
  5641                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5642  300001                     	org	3145729
  5643  300001  0E                 	db	14
  5644                           
  5645                           ;Config register CONFIG2L @ 0x300002
  5646                           ;	Power-up Timer Enable bit
  5647                           ;	PWRT = ON, PWRT enabled
  5648                           ;	Brown-out Reset Enable bits
  5649                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  5650                           ;	Brown-out Reset Voltage bits
  5651                           ;	BORV = 3, Minimum setting 2.05V
  5652                           ;	USB Voltage Regulator Enable bit
  5653                           ;	VREGEN = OFF, USB voltage regulator disabled
  5654  300002                     	org	3145730
  5655  300002  18                 	db	24
  5656                           
  5657                           ;Config register CONFIG2H @ 0x300003
  5658                           ;	Watchdog Timer Enable bit
  5659                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  5660                           ;	Watchdog Timer Postscale Select bits
  5661                           ;	WDTPS = 32768, 1:32768
  5662  300003                     	org	3145731
  5663  300003  1E                 	db	30
  5664                           
  5665                           ; Padding undefined space
  5666  300004                     	org	3145732
  5667  300004  FF                 	db	255
  5668                           
  5669                           ;Config register CONFIG3H @ 0x300005
  5670                           ;	CCP2 MUX bit
  5671                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  5672                           ;	PORTB A/D Enable bit
  5673                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  5674                           ;	Low-Power Timer 1 Oscillator Enable bit
  5675                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  5676                           ;	MCLR Pin Enable bit
  5677                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
  5678  300005                     	org	3145733
  5679  300005  03                 	db	3
  5680                           
  5681                           ;Config register CONFIG4L @ 0x300006
  5682                           ;	Stack Full/Underflow Reset Enable bit
  5683                           ;	STVREN = ON, Stack full/underflow will cause Reset
  5684                           ;	Single-Supply ICSP Enable bit
  5685                           ;	LVP = OFF, Single-Supply ICSP disabled
  5686                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  5687                           ;	ICPRT = OFF, ICPORT disabled
  5688                           ;	Extended Instruction Set Enable bit
  5689                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5690                           ;	Background Debugger Enable bit
  5691                           ;	DEBUG = 0x1, unprogrammed default
  5692  300006                     	org	3145734
  5693  300006  81                 	db	129
  5694                           
  5695                           ; Padding undefined space
  5696  300007                     	org	3145735
  5697  300007  FF                 	db	255
  5698                           
  5699                           ;Config register CONFIG5L @ 0x300008
  5700                           ;	Code Protection bit
  5701                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  5702                           ;	Code Protection bit
  5703                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  5704                           ;	Code Protection bit
  5705                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  5706                           ;	Code Protection bit
  5707                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  5708  300008                     	org	3145736
  5709  300008  0F                 	db	15
  5710                           
  5711                           ;Config register CONFIG5H @ 0x300009
  5712                           ;	Boot Block Code Protection bit
  5713                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  5714                           ;	Data EEPROM Code Protection bit
  5715                           ;	CPD = OFF, Data EEPROM is not code-protected
  5716  300009                     	org	3145737
  5717  300009  C0                 	db	192
  5718                           
  5719                           ;Config register CONFIG6L @ 0x30000A
  5720                           ;	Write Protection bit
  5721                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  5722                           ;	Write Protection bit
  5723                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  5724                           ;	Write Protection bit
  5725                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  5726                           ;	Write Protection bit
  5727                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  5728  30000A                     	org	3145738
  5729  30000A  0F                 	db	15
  5730                           
  5731                           ;Config register CONFIG6H @ 0x30000B
  5732                           ;	Configuration Register Write Protection bit
  5733                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  5734                           ;	Boot Block Write Protection bit
  5735                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  5736                           ;	Data EEPROM Write Protection bit
  5737                           ;	WRTD = OFF, Data EEPROM is not write-protected
  5738  30000B                     	org	3145739
  5739  30000B  E0                 	db	224
  5740                           
  5741                           ;Config register CONFIG7L @ 0x30000C
  5742                           ;	Table Read Protection bit
  5743                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5744                           ;	Table Read Protection bit
  5745                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5746                           ;	Table Read Protection bit
  5747                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5748                           ;	Table Read Protection bit
  5749                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5750  30000C                     	org	3145740
  5751  30000C  0F                 	db	15
  5752                           
  5753                           ;Config register CONFIG7H @ 0x30000D
  5754                           ;	Boot Block Table Read Protection bit
  5755                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  5756  30000D                     	org	3145741
  5757  30000D  40                 	db	64
  5758                           tosu	equ	0xFFF
  5759                           tosh	equ	0xFFE
  5760                           tosl	equ	0xFFD
  5761                           stkptr	equ	0xFFC
  5762                           pclatu	equ	0xFFB
  5763                           pclath	equ	0xFFA
  5764                           pcl	equ	0xFF9
  5765                           tblptru	equ	0xFF8
  5766                           tblptrh	equ	0xFF7
  5767                           tblptrl	equ	0xFF6
  5768                           tablat	equ	0xFF5
  5769                           prodh	equ	0xFF4
  5770                           prodl	equ	0xFF3
  5771                           indf0	equ	0xFEF
  5772                           postinc0	equ	0xFEE
  5773                           postdec0	equ	0xFED
  5774                           preinc0	equ	0xFEC
  5775                           plusw0	equ	0xFEB
  5776                           fsr0h	equ	0xFEA
  5777                           fsr0l	equ	0xFE9
  5778                           wreg	equ	0xFE8
  5779                           indf1	equ	0xFE7
  5780                           postinc1	equ	0xFE6
  5781                           postdec1	equ	0xFE5
  5782                           preinc1	equ	0xFE4
  5783                           plusw1	equ	0xFE3
  5784                           fsr1h	equ	0xFE2
  5785                           fsr1l	equ	0xFE1
  5786                           bsr	equ	0xFE0
  5787                           indf2	equ	0xFDF
  5788                           postinc2	equ	0xFDE
  5789                           postdec2	equ	0xFDD
  5790                           preinc2	equ	0xFDC
  5791                           plusw2	equ	0xFDB
  5792                           fsr2h	equ	0xFDA
  5793                           fsr2l	equ	0xFD9
  5794                           status	equ	0xFD8

Data Sizes:
    Strings     120
    Constant    4
    Data        4
    BSS         87
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     87      88
    BANK0           160     35     125
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 32
		 -> cont(BANK0[10]), texto(BANK0[32]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[11]), STR_5(CODE[9]), STR_4(CODE[11]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[11]), STR_5(CODE[9]), STR_4(CODE[11]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[9]), STR_7(CODE[11]), STR_5(CODE[9]), STR_4(CODE[11]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 32
		 -> cont(BANK0[10]), texto(BANK0[32]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1204_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 32
		 -> cont(BANK0[10]), texto(BANK0[32]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 32
		 -> cont(BANK0[10]), texto(BANK0[32]), 

    LCD_Cadena@dato	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_11(CODE[17]), STR_10(CODE[17]), STR_9(CODE[17]), STR_6(CODE[16]), 
		 -> cont(BANK0[10]), texto(BANK0[32]), STR_3(CODE[16]), STR_2(CODE[16]), 
		 -> STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _USART_Init->___aldiv
    _Tx_i->_USART_TX
    _LCD_gotoXY->_LCD_Comando
    _LCD_Init->_LCD_Comando
    _LCD_Cadena->_LCD_Data

Critical Paths under _INT_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _INT_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   15581
                                             85 COMRAM     2     2      0
                            _Giro_IN
                           _Giro_OUT
                           _InitPort
                           _Init_Int
                         _LCD_Cadena
                        _LCD_Comando
                           _LCD_Init
                         _LCD_gotoXY
                               _Tx_i
                         _USART_Init
                           _USART_RX
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8   12039
                                             17 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   11007
                                             77 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           44    38      6   10648
                                             67 COMRAM    10     4      6
                                              0 BANK0     17    17      0
                               _dtoa
                              _fputc
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    4491
                                             28 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     412
                                              7 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     161
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     161
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     161
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    4586
                                             28 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2937
                                             17 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              1 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                             10 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     834
                                              1 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             19 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              1 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              1 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _USART_RX                                             8     8      0       0
                                              1 COMRAM     8     8      0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           8     4      4     725
                                             15 COMRAM     8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     604
                                              1 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _Tx_i                                                 2     2      0      22
                                              2 COMRAM     2     2      0
                           _USART_TX
 ---------------------------------------------------------------------------------
 (2) _USART_TX                                             1     1      0      22
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCD_gotoXY                                           5     1      4    1782
                                              3 COMRAM     5     1      4
                        _LCD_Comando
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0      44
                                              3 COMRAM     1     1      0
                        _LCD_Comando
 ---------------------------------------------------------------------------------
 (2) _LCD_Comando                                          2     2      0      44
                                              1 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Cadena                                           3     1      2     925
                                              3 COMRAM     3     1      2
                           _LCD_Data
 ---------------------------------------------------------------------------------
 (2) _LCD_Data                                             2     2      0      44
                                              1 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Init_Int                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitPort                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Giro_OUT                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Giro_IN                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INT_isr                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Giro_IN
   _Giro_OUT
   _InitPort
   _Init_Int
   _LCD_Cadena
     _LCD_Data
   _LCD_Comando
   _LCD_Init
     _LCD_Comando
   _LCD_gotoXY
     _LCD_Comando
   _Tx_i
     _USART_TX
   _USART_Init
     ___aldiv
   _USART_RX
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _fputc
           _putch
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _toupper
             _islower

 _INT_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     23      7D       5       78.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     57      58       1       93.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D5      20        0.0%
DATA                 0      0      D5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Tue Dec 15 17:18:13 2020

                      _i 0058             ?_LCD_Comando 0001                       l20 211E  
                     l23 2130                       l17 1BC6                       l27 1C34  
                     l94 2142                       l97 214C                      l111 0AAA  
                    l105 0A76                      l106 098C                      l131 1FDC  
                    l133 1FDE                      l118 0C54                      l143 20B8  
                    l160 19C6                      l138 20EC                      l163 1DBC  
                    l307 17DC                      l174 1CA2                      l168 1F2A  
                    l177 1E14                      l259 18E8                      l294 1678  
                    l902 0D40                      l904 0D48                      l922 0F80  
                    l950 11F4                      l927 0FBA                      l952 1258  
                    l936 1056                      l929 0FC2                      l858 1E66  
                    l891 1AD8                      l973 1EE2                      l894 1B1A  
                    l959 14F0                      l976 1EEA                      l896 1B56  
                    l968 1CFC                      l985 204E                      l969 1D04  
                    l979 1FA2              ?_LCD_gotoXY 0004                      _abs 1EAC  
                    _aux 006A                      _pad 1A92                      wreg 000FE8  
        __end_of_HORARIO 0805                     l1000 1A90                     l1011 2152  
                   l1022 1D5A                     l1008 1EAA                     l2000 0EFA  
                   l1017 2084                     l1033 2016                     l2010 0F40  
                   l2002 0F0C                     l1027 1D62                     ?_abs 0014  
                   l2012 0F48                     l2004 0F1C                     l2020 0F92  
                   l2006 0F22                     l2014 0F58                     l2030 1000  
                   l2022 0F94                     l2110 13D6                     l2102 136A  
                   l2200 1DF6                     l2008 0F34                     l2040 103A  
                   l2032 1008                     l2024 0FAE                     l2120 1480  
                   l2112 1412                     l2104 138E                     l2210 1E0E  
                   l2202 1DFA                     l2042 104A                     l2034 1010  
                   l2026 0FD8                     l2018 0F82                     l2122 1494  
                   l2106 13B2                     l2300 2136                     l2212 1E10  
                   l2204 1E00                     l2140 211E                     l2220 17F0  
                   l2060 1112                     l2052 10D6                     l2036 1016  
                   l2028 0FE0                     l2108 13C8                     l2116 144E  
                   l2132 14BA                     l2302 2138                     l2206 1E06  
                   l2150 1D7E                     l2310 18EA                     l2142 212C  
                   l2230 1826                     l2222 1800                     l2070 11CA  
                   l2062 1118                     l2054 10E8                     l2046 108A  
                   l2038 101E                     l2134 14DE                     l2118 1472  
                   l2126 14A0                     l2400 20CC                     l2304 213A  
                   l2208 1E08                     l2160 1D94                     l2152 1D88  
                   l2144 1D66                     l2320 18FE                     l2312 18F0  
                   l2240 186E                     l2232 1836                     l2224 1804  
                   l2216 17DE                     l2080 1230                     l2072 11E4  
                   l2048 109C                     l2056 10FC                     l2064 1176  
                   l2128 14AE                     l2402 20CE                     l2410 2098  
                   l2306 213C                     l2170 1DAE                     l2162 1D9A  
                   l2154 1D8A                     l2146 1D76                     l2330 1932  
                   l2322 190E                     l2314 18F8                     l2250 18B2  
                   l2242 1878                     l2234 184C                     l2226 1812  
                   l2218 17E2                     l2074 1204                     l2066 1192  
                   l2058 110C                     l2090 129E                     l2404 20E4  
                   l2412 209A                     l2308 2144                     l2180 1DC0  
                   l2172 1DB0                     l2164 1D9C                     l2156 1D8C  
                   l2148 1D7A                     l2340 196E                     l2332 1938  
                   l2324 1914                     l2316 18FA                     l2244 1896  
                   l2236 1854                     l2252 18B8                     l2228 1822  
                   l2076 120A                     l2068 11B0                     l2092 12A2  
                   l2084 125A                     l2260 1CA4                     l2414 20B0  
                   l2190 1DE4                     l2182 1DD0                     l2174 1DB6  
                   l2166 1DA0                     l2158 1D92                     l2350 19A0  
                   l2342 1974                     l2334 1948                     l2326 1924  
                   l2318 18FC                     l2254 18C8                     l2246 18A6  
                   l2238 1860                     l2270 1B5C                     l2078 121A  
                   l2094 12C6                     l2086 127E                     l2262 1CAC  
                   l2408 2086                     l2192 1DE6                     l2184 1DD4  
                   l2176 1DB8                     l2168 1DA8                     l2352 19B0  
                   l2344 1984                     l2336 1958                     l2328 192A  
                   l2360 1EFC                     l2256 18D8                     l2248 18A8  
                   l2280 1BC0                     l2272 1BB8                     l1800 19EC  
                   l2096 12EA                     l2088 128C                     l2264 1CBA  
                   l2600 0966                     l2194 1DEC                     l2186 1DD8  
                   l2370 1C3A                     l2354 19B6                     l2346 198A  
                   l2338 195E                     l2362 1F16                     l2282 1BC2  
                   l2274 1BBA                     l2290 1C20                     l1802 19F6  
                   l1810 1E68                     l2098 1332                     l2266 1CE0  
                   l2610 09D2                     l2602 0976                     l2196 1DEE  
                   l2188 1DE2                     l2372 1C4A                     l2348 199A  
                   l2364 1F22                     l2380 1FB8                     l2284 1BC4  
                   l2276 1BBC                     l2268 1B58                     l2292 1C30  
                   l1900 1774                     l1804 1A14                     l1812 1E74  
                   l1820 205C                     l2620 0A1E                     l2612 09F8  
                   l2604 099A                     l2198 1DF4                     l2374 1C6E  
                   l2358 1EEC                     l2382 1FBA                     l2278 1BBE  
                   l2294 1C32                     l2286 1BC8                     l1902 1786  
                   l1806 1A4A                     l1814 1E86                     l1822 2060  
                   l2630 0A94                     l2622 0A3A                     l2614 0A0C  
                   l2606 09AE                     l2376 1C72                     l2368 1C36  
                   l2384 1FC0                     l2288 1C1E                     l1840 1528  
                   l1832 14F2                     l1904 178C                     l1816 1E8A  
                   l1824 2078                     l1920 1AD0                     l1912 1A92  
                   l2560 1E38                     l2640 0B16                     l2632 0AB8  
                   l2624 0A4E                     l2616 0A18                     l2608 09BA  
                   l2298 2132                     l2378 1FA4                     l1850 1584  
                   l1842 1536                     l1834 14F6                     l1906 179C  
                   l1818 2050                     l1930 1B3E                     l1922 1AE4  
                   l1914 1AA2                     l2562 1E54                     l2554 1E16  
                   l2642 0B2A                     l2634 0ACC                     l2626 0A5A  
                   l2618 0A1A                     l2570 0886                     l1860 15EE  
                   l1852 158C                     l1844 1556                     l1836 1504  
                   l1908 17BC                     l1924 1AF8                     l1916 1AB6  
                   l1828 1FE0                     l2556 1E28                     l2660 0B82  
                   l2644 0B36                     l2636 0AD8                     l2628 0A84  
                   l2580 08D6                     l2572 088A                     l2398 20BA  
                   l1870 1638                     l1862 160E                     l1854 15A0  
                   l1846 155A                     l1838 1524                     l1934 1EAC  
                   l1926 1AFC                     l1918 1AC4                     l1942 1F68  
                   l1950 1D3C                     l2558 1E30                     l2670 0BD0  
                   l2646 0B38                     l2638 0AF0                     l2590 092C  
                   l2582 08EA                     l2574 089E                     l2566 087E  
                   l1872 1658                     l1864 1610                     l1856 15AE  
                   l1848 1566                     l1880 168C                     l1936 1EC6  
                   l1928 1B2A                     l1960 0CE8                     l1952 1D4E  
                   l2680 0C3E                     l2672 0BE4                     l2648 0B3C  
                   l2656 0B5C                     l2664 0B92                     l2592 0930  
                   l2584 08F6                     l2576 08B2                     l2568 0882  
                   l1866 1622                     l1858 15C0                     l1890 16FC  
                   l1882 16AC                     l1970 0D50                     l1962 0D08  
                   l1938 2018                     l1946 1D06                     l2690 0C6A  
                   l2682 0C4E                     l2674 0C0C                     l2666 0BAC  
                   l2658 0B6E                     l2594 0944                     l2586 090E  
                   l2578 08BE                     l1868 1628                     l1892 1704  
                   l1884 16B0                     l1876 167A                     l1796 19C8  
                   l1980 0D86                     l1972 0D62                     l1964 0D18  
                   l1956 0CA0                     l2692 0C6E                     l2684 0C52  
                   l2676 0C14                     l2668 0BB8                     l2596 0948  
                   l2588 0916                     l1894 1718                     l1886 16BE  
                   l1878 167E                     l1798 19DA                     l1982 0D8C  
                   l1990 0E7E                     l1974 0D70                     l1966 0D1A  
                   l1958 0CC0                     l2686 0C64                     l2678 0C2A  
                   l2694 0C86                     l2598 0958                     ?_pad 0012  
                   l1896 1726                     l1888 16DE                     l1992 0E98  
                   l1984 0E0E                     l1976 0D76                     l1968 0D34  
                   l2688 0C68                     l1898 1754                     l1994 0EB6  
                   l1986 0E14                     l1978 0D7E                     l1996 0ED0  
                   l1988 0E1A                     l1998 0EEA                     STR_1 0827  
                   STR_2 0859                     STR_3 0849                     STR_4 0869  
                   STR_5 0874                     STR_6 0849                     STR_7 0869  
                   STR_8 0874                     STR_9 0816                     u1100 1EAA  
                   u1101 1EA6                     u1110 2078                     u1111 2074  
                   u1200 1638                     u1120 2010                     u1201 1634  
                   u1121 200A                     u1210 168C                     u1130 2012  
                   u1211 1688                     u1140 1504                     u1220 16BE  
                   u1060 19DA                     u1300 1B2A                     u1141 1500  
                   u1221 16BA                     u1061 19D6                     u1301 1B26  
                   u1150 1536                     u1230 16FC                     u1310 1EC6  
                   u1070 19EC                     u2110 0944                     u1151 1532  
                   u1231 16F8                     u1311 1EC2                     u1071 19E8  
                   u2111 0940                     u1240 1726                     u1080 1A14  
                   u1400 0CD2                     u1320 2048                     u2200 0C3E  
                   u2120 0958                     u1161 1560                     u1241 1722  
                   u1081 1A10                     u1321 2042                     u2201 0C3A  
                   u2121 0954                     u1170 1584                     u1250 1754  
                   u1090 1A4A                     u1410 0CE8                     u1330 204A  
                   u2210 0C4E                     u2130 0966                     u1171 1580  
                   u1251 1750                     u1091 1A46                     u1411 0CE4  
                   u2211 0C4A                     u2131 0962                     u1180 15AE  
                   u1260 179C                     u1500 0EFA                     u1420 0D18  
                   u1340 1F9C                     u2220 0C64                     u2140 0976  
                   u1181 15AA                     u1261 1798                     u1501 0EF6  
                   u1421 0D14                     u1341 1F96                     u2221 0C60  
                   u2141 0972                     u1190 15EE                     u1270 1AA2  
                   u1510 0F0C                     u1430 0D34                     u1350 1F9E  
                   u2230 0C98                     u2150 099A                     _LATB 000F8A  
                   u1191 15EA                     u1271 1A9E                     u1511 0F08  
                   u1431 0D30                     u2231 0C94                     u2151 0996  
                   u1280 1AC4                     u1520 0F1C                     u1440 0D62  
                   u1360 1D36                     u1600 109C                     u2160 0A84  
                   u1281 1AC0                     u1521 0F18                     u1441 0D5E  
                   u1361 1D30                     u1601 1098                     u2161 0A80  
                   u1290 1B1A                     u1530 0F34                     u1450 0D70  
                   u1370 1D38                     u1610 10D0                     u2170 0A94  
                   u1291 1B16                     u1531 0F30                     u1451 0D6C  
                   u1611 10CA                     u2307 0A9E                     u2171 0A90  
                   u1460 0E98                     u1380 1D4E                     u1700 1204  
                   u1620 10D2                     u1540 0F92                     u2180 0AB8  
                   u1461 0E94                     u1381 1D4A                     u1701 1200  
                   u1541 0F8E                     u2317 0AE2                     u2181 0AB4  
                   u1470 0EB6                     u1390 0CD0                     u1630 10E8  
                   u1550 0FAE                     u1710 127E                     u2190 0B6E  
                   u2407 191A                     u1471 0EB2                     u1391 0CCA  
                   u1631 10E4                     u1551 0FAA                     u1711 127A  
                   u2327 0BC2                     u2191 0B6A                     u2247 08C8  
                   u1800 184C                     u1480 0ED0                     u1640 1150  
                   u1560 0FD8                     u1720 12C6                     u2417 192C  
                   u1801 1848                     u1481 0ECC                     u1561 0FD4  
                   u1721 12C2                     u2337 0BFA                     u2257 0900  
                   u1810 186E                     u1490 0EEA                     u1650 1192  
                   u1570 103A                     u1730 12EA                     u2507 1D8E  
                   u2427 193E                     u1811 186A                     u1491 0EE6  
                   u1651 118E                     u1571 1036                     u1731 12E6  
                   u2347 0C1E                     u2267 0920                     u1900 1F16  
                   u1820 1896                     u1660 11B0                     u1580 1084  
                   u1740 138E                     u2517 1D96                     u2437 194E  
                   u1901 1F12                     u1821 1892                     u1661 11AC  
                   u1645 113E                     u1581 107E                     u1741 138A  
                   u2357 0C78                     u2277 0980                     u1910 1C6A  
                   u1830 18C8                     u1670 11CA                     u1590 1086  
                   u1750 13B2                     u2527 1DAA                     u2447 1964  
                   u1831 18C4                     u2367 1C26                     u1671 11C6  
                   u1751 13AE                     u2287 09C4                     u1920 1C92  
                   u1680 11E4                     u1760 1472                     u1840 1CFC  
                   u2537 1DB2                     u2457 197A                     u2377 1FCA  
                   u1681 11E0                     u1761 146E                     u1841 1CF8  
                   u2297 0A64                     u1930 1CA2                     u1770 212C  
                   u1850 1BD8                     u1690 11F4                     u1931 1C9E  
                   u2547 1C40                     u2467 1990                     u2387 1EF2  
                   u1771 2128                     u1851 1BD2                     u1691 11F0  
                   u1940 1FB8                     u1780 17F0                     u1860 1BDA  
                   u2557 1DC6                     u1917 1C60                     u2477 19A6  
                   u2397 1904                     u1941 1FB4                     u1781 17EC  
                   u1950 20CC                     u1790 1812                     u1870 1BF6  
                   u1951 20C8                     u2567 1DE8                     u1927 1C88  
                   u2487 19BC                     u1791 180E                     u1871 1BF0  
                   u1960 2098                     u1880 1BF8                     u1961 2094  
                   u2577 1DF0                     u2497 1D6C                     u1890 1C1E  
                   u2587 1E02                     u1891 1C1A                     u2597 1E0A  
        __end_of_INT_isr 211C                     _Tx_i 1FA4                     _cod1 00D9  
                   abs@a 0014                     _dbuf 006C                     _cont 00AC  
                   _main 087E                     _dtoa 0CA0                     _prec 0064  
                   _nout 0060                     pad@i 0019                     pad@p 0016  
                   fsr1h 000FE2                     fsr2h 000FDA                     indf1 000FE7  
                   indf2 000FDF                     fsr1l 000FE1                     pad@w 001B  
                   fsr2l 000FD9                     btemp 0059                     _xtoa 0F82  
                   start 000E          __end_of_Giro_IN 20EE             ___param_bank 000000  
                  ??_abs 0016                    ??_pad 0018         __end_of_LCD_Data 1E16  
       __end_of_LCD_Init 19C8             LCD_Data@data 0003                    ?_Tx_i 0001  
        __end_of___aldiv 18EA          __end_of___aodiv 167A                    ?_main 0001  
                  ?_dtoa 001D          __end_of___aomod 17DE                    STR_10 0805  
                  STR_11 0838                    ?_xtoa 001D                    i2l128 2118  
                  _RCREG 000FAE             vfpfcnvrt@fmt 0046             vfpfcnvrt@llu 00BE  
                  _SPBRG 000FAF                    _PORTD 000F83                    _TRISB 000F93  
                  _TRISD 000F95                    _TXREG 000FAD             USART_TX@data 0002  
    __size_of_LCD_Cadena 006E                    _flags 0066                    _fputc 19C8  
        __end_of_isalpha 1FA4                    _fputs 1E68                    _motor 0069  
                  pad@fp 0012         __end_of_USART_RX 1C36         __end_of_USART_TX 2132  
                  _width 0062                    _texto 008C                    _putch 2152  
                  dtoa@d 001F                    dtoa@i 003F                    dtoa@n 0037  
                  dtoa@p 0031                    dtoa@s 0035                    dtoa@w 0033  
        __end_of_islower 2018          __end_of_isupper 2050                    tablat 000FF5  
                  ttemp5 005A                    ttemp6 005D                    ttemp7 0061  
                  status 000FD8                    wtemp8 005A          __end_of_sprintf 1E68  
                  xtoa@c 0042                    xtoa@d 001F                    xtoa@i 0040  
                  xtoa@n 0038                    xtoa@p 0034                    xtoa@w 0036  
                  xtoa@x 0027          __end_of_toupper 1D64              ?_USART_Init 0010  
    __size_of_LCD_gotoXY 0040             _toupper$1388 000E          __initialization 1F2C  
            LCD_gotoXY@x 0004              LCD_gotoXY@y 0006             __end_of_Tx_i 1FE0  
       __end_of_Giro_OUT 20BA             __end_of_main 0CA0             __end_of_dtoa 0F82  
           __end_of_xtoa 125A         __end_of_Init_Int 214E         __end_of_InitPort 2144  
                 ??_Tx_i 0003                   ??_main 0056                   ??_dtoa 0027  
                 ??_xtoa 0028            __activetblptr 000002                ??_INT_isr 0001  
                 ?_fputc 0002                   ?_fputs 000B                   ?_putch 0001  
                 i2l2550 20F6                   i2l2552 2116                   i2l2548 20F0  
              ??_Giro_IN 0002             vfprintf@cfmt 0054                ??___aldiv 000A  
              ??___aodiv 0012                ??___aomod 0012                   clear_0 1F52  
                 pad@buf 0014     __size_of_LCD_Comando 005A                   dtoa@fp 001D  
                 _strlen 2050                   fputc@c 0002                   fputs@c 000F  
                 fputs@i 0010                   fputs@s 000B                ??_isalpha 0004  
              ??_islower 0004             __mediumconst 0000                   tblptrh 000FF7  
              ??_isupper 0004                   tblptrl 000FF6                   tblptru 000FF8  
    __size_of_USART_Init 0070                   putch@c 0001         __end_of_vfprintf 1D06  
              ??_sprintf 0056                   xtoa@fp 001D                ??_toupper 000A  
              ?_LCD_Data 0001               __accesstop 0060  __end_of__initialization 1F5A  
              ?_LCD_Init 0001            ___rparam_used 000001             ??_LCD_Cadena 0006  
         __pcstackCOMRAM 0001             __pidataBANK0 214E            __end_of_fputc 1A92  
          __end_of_fputs 1EAC            __end_of_putch 2154           LCD_Cadena@dato 0004  
              ?_USART_RX 0001                ?_USART_TX 0001             ??_LCD_gotoXY 0008  
                ??_fputc 0006                  ??_fputs 000F       __end_of_LCD_Cadena 1CA4  
                ??_putch 0002                ?_Giro_OUT 0001               __pbssBANK0 0060  
              ?_Init_Int 0001               ??_LCD_Data 0002                ?_InitPort 0001  
             ??_LCD_Init 0004       __end_of_LCD_gotoXY 1F2C               ??_USART_RX 0002  
             ??_USART_TX 0002                  ?_strlen 0002                  _HORARIO 0801  
     __size_of_vfpfcnvrt 0298                  _INT_isr 0008               ??_Giro_OUT 0002  
             ??_Init_Int 0002               ??_InitPort 0002                  _Giro_IN 20BA  
           ??_USART_Init 0014                  __Hparam 0000                  __Lparam 0000  
                ___aldiv 17DE                  ___aodiv 14F2                  ___aomod 167A  
              ?_vfprintf 004E             __psmallconst 0800           USART_Init@BAUD 0010  
                __pcinit 1F2C                  __ramtop 0800                  __ptext0 087E  
                __ptext1 1E16                  __ptext2 1CA4                  __ptext3 125A  
                __ptext4 0F82                  __ptext5 1D06                  __ptext6 1FE0  
                __ptext7 2018                  __ptext8 1F68                  __ptext9 0CA0  
        __size_of_strlen 0036             __size_of_abs 0040             __size_of_pad 00C6  
                _isalpha 1F68         ___aldiv@dividend 0002                  _islower 1FE0  
                _isupper 2018       __end_of_USART_Init 1BC8           LCD_Comando@cmd 0003  
                _sprintf 1E16           __pintcode_body 20EE                  _toupper 1D06  
   end_of_initialization 1F5A                  fputc@fp 0004            __Lmediumconst 0000  
                int_func 20EE                  fputs@fp 000D        __end_of_vfpfcnvrt 14F2  
              _RCSTAbits 000FAB         ___aldiv@quotient 000C                  postdec1 000FE5  
                postdec2 000FDD                  postinc0 000FEE                  postinc1 000FE6  
                postinc2 000FDE               ??_vfprintf 0054                  strlen@a 0004  
                strlen@s 0002                _PORTCbits 000F82                _TRISCbits 000F94  
              _TRISDbits 000F95                _TRISEbits 000F96                _TXSTAbits 000FAC  
      __size_of_LCD_Data 0058        __size_of_LCD_Init 00DE            ??_LCD_Comando 0002  
            vfpfcnvrt@ap 0048              vfpfcnvrt@fp 0044              vfpfcnvrt@ll 00B6  
      __size_of_USART_RX 006E        __size_of_USART_TX 0016           __end_of_strlen 2086  
    start_initialization 1F2C              __end_of_abs 1EEC              __end_of_pad 1B58  
      __size_of_Giro_OUT 0034        __size_of_Init_Int 000A        __size_of_InitPort 0012  
            vfprintf@fmt 0050              __pdataBANK0 00D9                 ??_strlen 0004  
    __end_of_LCD_Comando 1DBE              __pbssCOMRAM 0058            __pcstackBANK0 00B6  
       ___aodiv@dividend 0002                 ?_INT_isr 0001                 ?_Giro_IN 0001  
              _dtoa$1292 002F                __pintcode 0008                 ?___aldiv 0002  
               ?___aodiv 0002                 ?___aomod 0002         ___aodiv@quotient 0014  
      __size_of_vfprintf 0062              __smallconst 0800                 ?_isalpha 0002  
            _codigo_aula 006B                 ?_islower 0002                 ?_isupper 0002  
               ?_sprintf 00C7           __size_of_fputc 00CA           __size_of_fputs 0044  
               ?_toupper 0008           __size_of_putch 0002          ___aldiv@divisor 0006  
               _LCD_Data 1DBE          ___aldiv@counter 000A                 _LCD_Init 18EA  
               _LATCbits 000F8B                 _LATDbits 000F8C                 _LATEbits 000F8D  
               i2u210_40 2106                 i2u210_41 2100                 i2u210_46 2108  
            _LCD_Comando 1D64                _vfpfcnvrt 125A                 _USART_RX 1BC8  
               _USART_TX 211C                _xtoa$1303 0030                _xtoa$1304 0032  
             _ADCON1bits 000FC1               vfpfcnvrt@c 00C6         __size_of_INT_isr 2114  
            _INTCON2bits 000FF1              _INTCON3bits 000FF0                copy_data0 1F40  
               _Giro_OUT 2086                 _Init_Int 2144                 _InitPort 2132  
       __size_of_Giro_IN 0034                 __Hrparam 0000               vfprintf@ap 0052  
               __Lrparam 0000               vfprintf@fp 004E         __size_of___aldiv 010C  
       __size_of___aodiv 0188         __size_of___aomod 0164               ?_vfpfcnvrt 0044  
        ___aodiv@divisor 000A          ___aodiv@counter 0012               sprintf@fmt 00C9  
             _EMERGENCIA 0068         __size_of_isalpha 003C         __size_of_islower 0038  
               __ptext10 1A92                 __ptext11 2050                 __ptext20 17DE  
               __ptext12 1E68                 __ptext21 1FA4                 __ptext13 19C8  
               __ptext30 2086                 __ptext22 211C                 __ptext14 2152  
               __ptext31 20BA                 __ptext23 1EEC                 __ptext15 1EAC  
               __ptext24 18EA                 __ptext16 167A                 __ptext25 1D64  
               __ptext17 14F2                 __ptext26 1C36                 __ptext18 1BC8  
               __ptext27 1DBE                 __ptext19 1B58                 __ptext28 2144  
               __ptext29 2132         __size_of_isupper 0038         __size_of_sprintf 0052  
       __size_of_toupper 005E            __size_of_Tx_i 003C            __size_of_main 0422  
          __size_of_dtoa 02E2            __size_of_xtoa 02D8          _USART_Init$1603 0014  
             _LCD_Cadena 1C36                 int$flags 0059                 _vfprintf 1CA4  
       ___aomod@dividend 0002               _LCD_gotoXY 1EEC               _INTCONbits 000FF2  
               isalpha@c 0002                 intlevel2 0000                sprintf@ap 00D1  
               islower@c 0002                 isupper@c 0002          ___aomod@divisor 000A  
            ??_vfpfcnvrt 004A          ___aomod@counter 0012                 sprintf@f 00D3  
               sprintf@s 00C7                 toupper@c 0008             ___aldiv@sign 000B  
           ___aodiv@sign 0013             ___aomod@sign 0013               _USART_Init 1B58  
            ?_LCD_Cadena 0004  
